{"version":3,"sources":["components/about-section/styles.ts","components/loader/index.tsx","redux/api/admin.ts","redux/actions/admin.ts","components/about-section/About.tsx","components/categories/styles.ts","redux/api/categories.ts","redux/actions/categories.ts","redux/api/cloudinary.ts","redux/actions/cloudinary.ts","redux/api/product.ts","redux/actions/product.ts","redux/reducers/productSlice.ts","components/categories/Categories.tsx","components/contact-us/styles.ts","hooks/HandleChange.tsx","redux/api/message.ts","redux/actions/message.ts","redux/reducers/messageSlice.ts","hooks/ShowSuccess.tsx","hooks/ShowError.tsx","components/contact-us/ContactForm.tsx","components/contact-us/SocialMediaSection.tsx","components/contact-us/SocialMedia.tsx","components/contact-us/Contact.tsx","components/homepage-carousel/styles.ts","components/homepage-carousel/HomeCarousel.tsx","components/news-banner/styles.ts","components/news-banner/Banner.tsx","components/site-policy-rules/styles.ts","redux/reducers/modalSlice.ts","components/site-policy-rules/PolicyRules.tsx","components/styled-hr/StyledHr.tsx","components/welcome-message/styles.ts","utils/logo.png","components/welcome-message/WelcomeMessage.tsx","redux/reducers/adminSlice.ts","components/modals/styles.ts","components/modals/SiteRulesModal.tsx","hooks/Seo.tsx","pages/home/Home.tsx","styles/appStyles.ts","components/app-bar/styles.ts","redux/api/auth.ts","redux/actions/auth.ts","components/modals/NavigationModal.tsx","components/app-bar/MobileNavigation.tsx","components/app-bar/NavBar.tsx","pages/login/styles.ts","redux/reducers/authSlice.ts","pages/login/Login.tsx","pages/register/styles.ts","pages/register/Register.tsx","components/filters-canvas/styles.ts","components/filters-canvas/Filters.tsx","components/titles/styles.ts","components/titles/Title.tsx","pages/shop/styles.ts","components/product-card/styles.ts","components/product-card/CardInfo.tsx","redux/api/cart.ts","redux/actions/cart.ts","redux/reducers/cartSlice.ts","components/product-card/ActionButtons.tsx","components/product-card/ProductCard.tsx","components/pagination/PaginationControll.tsx","pages/shop/components/ProductsContainer.tsx","pages/shop/Shop.tsx","components/footer/Footer.tsx","pages/cart/styles.ts","components/tables/styles.ts","components/tables/CartTable.tsx","pages/cart/components/DeliveryOptions.tsx","pages/cart/components/PaymentOptions.tsx","pages/cart/components/CartSummary.tsx","pages/cart/Cart.tsx","pages/admin/styles.ts","components/admin-sidenav/styles.ts","components/admin-sidenav/AdminSidenav.tsx","components/admin-details-section/styles.ts","components/admin-details-section/UploadBanner.tsx","components/admin-details-section/UploadProfile.tsx","components/admin-details-section/AdminDetailsSection.tsx","components/user-messages/styles.ts","components/user-messages/Message.tsx","components/user-messages/UserMessages.tsx","components/modals/AdminMenuModal.tsx","components/admin-sidenav/AdminMobileSidenav.tsx","redux/api/order.ts","components/admin-graph/AdminGraph.tsx","pages/admin/Dashboard.tsx","routes/PrivateRoute.tsx","pages/user/styles.ts","components/user-sidenav/styles.ts","components/user-sidenav/UserSidenav.tsx","redux/actions/order.ts","redux/reducers/orderSlice.ts","components/tables/UserOrders.tsx","pages/user/UserDashboard.tsx","components/tables/OrdersTable.tsx","pages/admin/Orders.tsx","components/tables/UsersTable.tsx","pages/admin/Users.tsx","components/admin-categories/styles.ts","redux/reducers/categoriesSlice.ts","components/admin-categories/CreateCategoryForm.tsx","components/admin-categories/CategoriesList.tsx","components/admin-categories/UpdateCategoryForm.tsx","pages/admin/Categories.tsx","components/tables/ProductsTable.tsx","pages/admin/Products.tsx","components/admin-create-product/styles.ts","components/admin-create-product/CreateProductForm.tsx","pages/admin/CreateProduct.tsx","routes/AdminRoute.tsx","components/admin-create-product/UploadProductImagesForm.tsx","components/admin-create-product/UploadedImagesPreview.tsx","pages/admin/UploadProductImages.tsx","components/admin-create-product/UpdateProductForm.tsx","pages/admin/UpdateProduct.tsx","components/rich-text-editors/styles.ts","components/rich-text-editors/UploadDetailsEditor.tsx","pages/admin/UploadAboutDetails.tsx","components/rich-text-editors/UpdateSiteRulesEditor.tsx","pages/admin/UploadSiteRules.tsx","pages/single product/styles.ts","pages/single product/components/ProductInfoSection.tsx","pages/single product/SingelProduct.tsx","pages/checkout/styles.ts","pages/checkout/components/PersonalInfoForm.tsx","pages/checkout/components/CompleteCartSummary.tsx","pages/checkout/components/DetailsSaveSuccess.tsx","pages/checkout/Checkout.tsx","pages/order-success/styles.ts","pages/order-success/components/Header.tsx","pages/order-success/components/TechSupport.tsx","components/payment-methods/PhonePayment.tsx","components/payment-methods/BankTransfer.tsx","pages/order-success/components/OrderSuccessGrid.tsx","pages/order-success/components/Order.tsx","pages/order-success/OrderSuccess.tsx","pages/user/UserOrder.tsx","components/update-order/styles.ts","components/update-order/UpdateOrderSection.tsx","pages/admin/AdminOrder.tsx","hooks/ScrollToTop.tsx","pages/forgot-password/ForgotPassword.tsx","pages/forgot-password/ResetPassword.tsx","App.tsx","redux/store.ts","styles/theme.ts","index.tsx"],"names":["styles","makeStyles","main","display","justifyContent","title","textAlign","image","width","aboutDiv","padding","height","overflowY","Loader","style","margin","CircularProgress","axios","defaults","withCredentials","server_url","process","uploadBannerImage","a","post","uploadProfileImage","getBanner","get","getProfileImage","getAboutMe","updateAboutMe","text","getSiteRules","updateSiteRules","uploadBanner","createAsyncThunk","rejectWithValue","response","data","uploadProfile","banner","_","document","url","profileImage","aboutMe","about","updateAbout","message","siteRules","updateRules","About","classes","useSelector","state","admin","loading","dispatch","useDispatch","useEffect","Grid","container","className","item","xs","sm","src","alt","parse","element","fontSize","backgroundColor","flexWrap","header","createCategory","category","name","getCategories","deleteCategory","id","delete","updateCategory","obj","put","create","categories","removeCategory","putCategory","uploadProductImage","deleteProductImage","productImageUpload","productImageDelete","createProduct","values","getProducts","page","quertyObj","sort","productsToDisplay","getAdminProducts","getRandomProducts","getProduct","updateProduct","deleteProduct","addProductToWishlist","productId","getMostWishedProducts","products","queryObj","product","update","remove","randomProducts","items","forEach","push","_id","description","original","images","length","addToWishlist","adminProducts","initialState","undefined","productImages","pages","productToUpdate","createdProductId","successMessage","errorMessage","addToWishlistSuccess","addToWishlistError","wishlistLoading","productSlice","createSlice","reducers","resetSuccessMessage","setErrorMessage","action","payload","setProductToUpdate","setPage","setCategory","setSort","setProductToDisplay","resetQueryObj","resetCreatedProductId","resetAddToWishlistSuccess","extraReducers","builder","addCase","pending","fulfilled","rejected","errors","msg","actions","Categories","history","useHistory","Typography","align","variant","map","c","i","Button","onClick","color","mainContainer","maxWidth","position","paperContainer","flexDirection","minHeight","formElement","alignSelf","iconDiv","alignItems","myIcons","textDecoration","flexDiv","span","fontWeight","marginLeft","HandleChange","e","setValues","target","value","createMessage","getMessages","messages","messageSlice","clearValues","resetErrorMessage","resetClearValues","ShowSuccess","Alert","severity","ShowError","ContactForm","useState","email","onSubmit","preventDefault","Paper","TextField","label","type","required","onChange","multiline","rows","SocialMediaSection","rel","href","SocialMedia","Contact","leftContainer","HomeCarousel","getRandomProducs","cursor","showPlayButton","autoPlay","slideInterval","slideDuration","showThumbnails","showBullets","showNav","foundProduct","find","p","img","Banner","bannerImage","marginBottom","button","modalSlice","siteRulesModal","adminMenuModal","navigationModal","openSiteRulesModal","closeSiteRulesModal","openAdminMenuModal","closeAdminMenuModal","openNavigationModal","closeNavigationModal","PolicyRules","disabled","StyledHr","borderTop","linkSpan","flexCenterDiv","WelcomeMessage","user","auth","logo","split","adminSlice","appLink","border","navigationLink","appIcon","marginRight","icon","SiteRulesModal","modal","Dialog","open","onClose","DialogTitle","DialogContent","Seo","content","Helmet","Home","appBar","tooBar","borderBottom","flex1","flexGrow","registerUser","loginUser","forgotPasswordEmail","logoutUser","getUsers","updateUserDetails","userInfo","resetPasswordValidation","resetPasswordAction","getPaypalClientId","login","window","localStorage","setItem","JSON","stringify","register","logout","removeItem","users","updateDetails","forgotPassowrd","passwordValidation","passwordAction","NavigationModal","cart","handleClose","activeLinkStyles","fullScreen","Toolbar","IconButton","edge","aria-label","exact","activeStyle","to","Badge","badgeContent","role","MobileNavigation","NavBar","innerWidth","setWidth","handleWithChange","addEventListener","removeEventListener","AppBar","formContainer","footerDiv","marginTop","getItem","passwordValidatorError","passwordValidatorSuccess","resetPasswordError","resetPasswordSuccess","authSlice","resetError","successReset","Login","password","Register","confirmPassword","FiltersContainer","marign","textField","radioButtonsContainer","radiosDiv","Filters","GetCategories","elevation","FormControl","InputLabel","Select","labelId","MenuItem","RadioGroup","FormControlLabel","control","Radio","Title","productsContainer","root","boxShadow","borderColor","productName","link","productInfo","productSpan","inStockSpan","outStockSpan","productLink","CardInfo","props","price","qty","saveCartToDB","getCartFromDb","saveCart","getCart","cartFromLocalstorage","delivery","paymentMethod","cartFromDb","cartId","cartSlice","setCart","setDelivey","setPaymentMethod","clearSuccess","resetCart","ActionButtons","setOpen","wishlist","includes","wishlistStatus","setWishlistStatus","paddingBottom","Tooltip","PopperProps","disablePortal","onMouseLeave","setTimeout","disableFocusListener","disableHoverListener","disableTouchListener","placement","endIcon","cartVariable","count","uniqueItems","uniqWith","isEqual","quantity","ProductCard","productFromProps","useStyles","theme","spacing","PaginationControll","Pagination","event","ProductsContainer","scrollTo","Shop","Footer","top","mainTitle","titleIcon","gridItem","optionsSection","cartSummary","paragraph","checkoutButton","table","deleteButton","CartTable","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","parsedCart","Number","handleChange","startIcon","filtered","filter","handleRemove","DeliveryOptions","PaymentOptions","CartSummary","Math","round","productsTotal","total","deliveyPrice","reduce","currentValue","nextValue","getProductsTotal","Cart","md","contentDiv","overflowX","mainHeader","successText","errorText","AdminSidenav","spanStyle","UploadBanner","setImage","handleSubmit","Resizer","imageFileResizer","uri","files","accept","UploadProfile","AdminDetailsSection","Message","moment","createdAt","fromNow","UserMessages","m","AdminMenuModal","AdminMobileSidenav","createOrder","getOrder","getOrders","getUserOrders","updatePaypalPayment","updateOrderStatus","AdminGraph","orders","setOrders","setLoading","loadData","allOrders","totalSum","order","cartTotal","date","format","console","log","LineChart","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Legend","Line","stroke","activeDot","r","Dashboard","mostWished","Hidden","xsDown","smUp","PrivateRoute","Component","rest","render","UserSidenav","handleLogout","userOrders","paypalPayment","updateOrder","error","success","createdOrderId","orderSlice","clearState","clearOrder","orderId","UserOrders","orderStatus","isPaid","minWidth","UserDashboard","OrdersTable","Orders","UsersTable","u","verified","Users","categoriesDiv","ol","li","deleteIcon","updateIcon","categorySlice","categoryToUpdate","placeCategoryToUpdate","CreateCategoryForm","CategoriesList","float","confirm","UpdateCategoryForm","ProductsTable","Products","uploadImagesButton","uplaodImageContainer","previewContainer","badge","CreateProductForm","CreateProduct","AdminRoute","UploadProductImagesForm","setFiles","useParams","array","multiple","UploadedImagesPreview","public_id","UploadProductImages","UpdateProductForm","UpdateProduct","UploadDetailsEditor","setText","apiKey","init","menubar","plugins","toolbar","onEditorChange","onInit","UploadAboutDetails","UpdateSiteRulesEditor","UploadSiteRultes","infoDiv","spanTag","ProductInfoSection","handleLeave","SingelProduct","subTitle","numberElement","flexColumnDiv","messageDiv","PersonalInfoForm","phone","country","city","street","zipCode","homeNumber","apartment","helperText","CompleteCartSummary","authLoading","deliveryOption","DetailsSaveSuccess","Checkout","authSuccessMessage","infoAlert","gridContainer","Header","TechSupport","PhonePayment","Card","CardContent","BankTransfer","OrderSuccessGrid","sdk","amount","currency","onSuccess","paymentResult","status","Order","trackNumber","OrderSuccess","setSdk","addPaypalScript","clientId","script","createElement","async","onload","body","appendChild","UserOrder","formDiv","UpdateOrderSection","stringedIsPaid","changeIsPaid","AdminOrder","ScrollToTop","pathname","useLocation","ForgotPassword","ResetPassword","params","resetPasswordToken","App","CssBaseline","path","store","configureStore","reducer","categoriesSlice","createMuiTheme","palette","primary","contrastText","secondary","ReactDOM","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.25807957.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  main: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n\r\n  image: {\r\n    width: '100%',\r\n  },\r\n\r\n  aboutDiv: {\r\n    padding: '10px',\r\n    height: '400px',\r\n    overflowY: 'scroll',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        padding: '15px',\r\n        margin: '10px 0',\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport const uploadBannerImage = async (image: string) =>\r\n  await axios.post(`${server_url}/admin/upload-banner-image`, { image })\r\n\r\nexport const uploadProfileImage = async (image: string) =>\r\n  await axios.post(`${server_url}/admin/upload-profile-image`, { image })\r\n\r\nexport const getBanner = async () =>\r\n  await axios.get(`${server_url}/admin/banner`)\r\n\r\nexport const getProfileImage = async () =>\r\n  await axios.get(`${server_url}/admin/profile-image`)\r\n\r\nexport const getAboutMe = async () =>\r\n  await axios.get(`${server_url}/admin/about-me`)\r\n\r\nexport const updateAboutMe = async (text: string) =>\r\n  await axios.post(`${server_url}/admin/update-about-me`, { text })\r\n\r\nexport const getSiteRules = async () =>\r\n  await axios.get(`${server_url}/admin/site-rules`)\r\n\r\nexport const updateSiteRules = async (text: string) =>\r\n  await axios.post(`${server_url}/admin/update-site-rules`, { text })\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { AxiosResponse } from 'axios'\r\nimport {\r\n  getAboutMe,\r\n  getBanner,\r\n  getProfileImage,\r\n  getSiteRules,\r\n  updateAboutMe,\r\n  updateSiteRules,\r\n  uploadBannerImage,\r\n  uploadProfileImage,\r\n} from '../api/admin'\r\n\r\nexport const uploadBanner = createAsyncThunk(\r\n  'admin/uploadBanner',\r\n  async (image: string, { rejectWithValue }) => {\r\n    type uploadBannerResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<uploadBannerResponse> =\r\n        await uploadBannerImage(image)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const uploadProfile = createAsyncThunk(\r\n  'admin/uploadProfile',\r\n  async (image: string, { rejectWithValue }) => {\r\n    type uploadProfileResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<uploadProfileResponse> =\r\n        await uploadProfileImage(image)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const banner = createAsyncThunk(\r\n  'admin/banner',\r\n  async (_, { rejectWithValue }) => {\r\n    type Document = {\r\n      banner: {\r\n        url: string\r\n      }\r\n    }\r\n\r\n    type bannerResponse = {\r\n      document: Document\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<bannerResponse> = await getBanner()\r\n\r\n      if (!response.data.document.banner.url) {\r\n        return 'https://via.placeholder.com/1280x300?text=Banner%20image'\r\n      }\r\n\r\n      return response.data.document.banner.url\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const profileImage = createAsyncThunk(\r\n  'admin/profileImage',\r\n  async (_, { rejectWithValue }) => {\r\n    type Document = {\r\n      profileImage: {\r\n        url: string\r\n      }\r\n    }\r\n\r\n    type profileImageResponse = {\r\n      document: Document\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<profileImageResponse> =\r\n        await getProfileImage()\r\n\r\n      if (!response.data.document.profileImage.url) {\r\n        return 'https://via.placeholder.com/700x700?text=Profile%20image'\r\n      }\r\n\r\n      return response.data.document.profileImage.url\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const aboutMe = createAsyncThunk(\r\n  'admin/aboutMe',\r\n  async (_, { rejectWithValue }) => {\r\n    type Document = {\r\n      about: string\r\n    }\r\n\r\n    type profileImageResponse = {\r\n      document: Document\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<profileImageResponse> = await getAboutMe()\r\n\r\n      if (!response.data.document.about) {\r\n        return 'No yet about me'\r\n      }\r\n\r\n      return response.data.document.about\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateAbout = createAsyncThunk(\r\n  'admin/updateAbout',\r\n  async (text: string, { rejectWithValue }) => {\r\n    type profileImageResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<profileImageResponse> = await updateAboutMe(\r\n        text\r\n      )\r\n\r\n      return response.data.message\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const siteRules = createAsyncThunk(\r\n  'admin/siteRules',\r\n  async (_, { rejectWithValue }) => {\r\n    type Document = {\r\n      siteRules: string\r\n    }\r\n\r\n    type profileImageResponse = {\r\n      document: Document\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<profileImageResponse> = await getSiteRules()\r\n\r\n      if (!response.data.document.siteRules) {\r\n        return 'No yet site rules'\r\n      }\r\n\r\n      return response.data.document.siteRules\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateRules = createAsyncThunk(\r\n  'admin/updateRules',\r\n  async (text: string, { rejectWithValue }) => {\r\n    type profileImageResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<profileImageResponse> =\r\n        await updateSiteRules(text)\r\n\r\n      return response.data.message\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { Grid } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport Loader from '../loader'\r\nimport { useEffect } from 'react'\r\nimport {\r\n  aboutMe,\r\n  profileImage as getProfileImage,\r\n} from '../../redux/actions/admin'\r\nimport parse from 'html-react-parser'\r\n\r\nconst About = () => {\r\n  const classes = styles()\r\n  const { profileImage, loading, about } = useSelector(\r\n    (state: RootState) => state.admin\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfileImage())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch(aboutMe())\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container className={classes.main}>\r\n      <Grid item xs={12} sm={4} className={classes.main}>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div>\r\n            <img\r\n              src={profileImage}\r\n              className={classes.image}\r\n              alt=' profile img'\r\n            />\r\n          </div>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <h1 className={classes.title}>About me</h1>\r\n\r\n        <div className={classes.aboutDiv}>\r\n          {!loading && about === '' ? null : parse(about)}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  element: {\r\n    margin: '12px',\r\n    fontSize: '18px',\r\n    width: '180px',\r\n    backgroundColor: 'whiteSmoke',\r\n  },\r\n\r\n  container: {\r\n    padding: '20px 0',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  header: {\r\n    margin: '10px 0',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport type updateObj = {\r\n  id: string | undefined\r\n  name: string | undefined\r\n}\r\n\r\nexport const createCategory = async (category: string) =>\r\n  await axios.post(`${server_url}/category/create`, { name: category })\r\n\r\nexport const getCategories = async () =>\r\n  await axios.get(`${server_url}/category/categories`)\r\n\r\nexport const deleteCategory = async (id: string) =>\r\n  await axios.delete(`${server_url}/category/delete/${id}`)\r\n\r\nexport const updateCategory = async (obj: updateObj) =>\r\n  await axios.put(`${server_url}/category/update/${obj.id}`, { name: obj.name })\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { AxiosResponse } from 'axios'\r\nimport {\r\n  createCategory,\r\n  deleteCategory,\r\n  getCategories,\r\n  updateCategory,\r\n  updateObj,\r\n} from '../api/categories'\r\n\r\ntype category = {\r\n  _id: string\r\n  name: string\r\n  createdAt: string\r\n  updatedAt: string\r\n}\r\n\r\nexport const create = createAsyncThunk(\r\n  'category/create',\r\n  async (category: string, { rejectWithValue }) => {\r\n    type createCategoryResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<createCategoryResponse> =\r\n        await createCategory(category)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const categories = createAsyncThunk(\r\n  'category/categories',\r\n  async (_, { rejectWithValue }) => {\r\n    type getCategoriesResponse = {\r\n      categories: category[]\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getCategoriesResponse> =\r\n        await getCategories()\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const removeCategory = createAsyncThunk(\r\n  'category/removeCategory',\r\n  async (id: string, { rejectWithValue }) => {\r\n    type deleteCategoryResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<deleteCategoryResponse> =\r\n        await deleteCategory(id)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putCategory = createAsyncThunk(\r\n  'category/putCategory',\r\n  async (obj: updateObj, { rejectWithValue }) => {\r\n    type updateCategoryResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<updateCategoryResponse> =\r\n        await updateCategory(obj)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport type productImageObj = {\r\n  id: string\r\n  array: string[]\r\n}\r\n\r\nexport type deleteProductImageObject = {\r\n  productId: string\r\n  public_id: string\r\n}\r\n\r\nexport const uploadProductImage = async (obj: productImageObj) =>\r\n  await axios.post(`${server_url}/cloudinary/product/upload-image`, obj)\r\n\r\nexport const deleteProductImage = async (obj: deleteProductImageObject) =>\r\n  await axios.delete(`${server_url}/cloudinary/product/delete-image`, {\r\n    data: obj,\r\n  })\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { AxiosResponse } from 'axios'\r\nimport {\r\n  deleteProductImage,\r\n  deleteProductImageObject,\r\n  uploadProductImage,\r\n} from '../api/cloudinary'\r\nimport { productImageObj } from '../api/cloudinary'\r\nimport { Product } from '../reducers/productSlice'\r\n\r\nexport const productImageUpload = createAsyncThunk(\r\n  'cloudinary/productImageUpload',\r\n  async (obj: productImageObj, { rejectWithValue }) => {\r\n    type uploadProductImageResponse = {\r\n      message: string\r\n      product: Product\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<uploadProductImageResponse> =\r\n        await uploadProductImage(obj)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const productImageDelete = createAsyncThunk(\r\n  'cloudinary/productImageDelete',\r\n  async (obj: deleteProductImageObject, { rejectWithValue }) => {\r\n    type uploadProductImageResponse = {\r\n      message: string\r\n      product: Product\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<uploadProductImageResponse> =\r\n        await deleteProductImage(obj)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport type productValues = {\r\n  name: string\r\n  price: number\r\n  quantity: number\r\n  description: string\r\n  category: string | unknown\r\n}\r\n\r\nexport type QueryObj = {\r\n  sort?: string\r\n  category?: string\r\n  productsToDisplay?: string\r\n}\r\n\r\nexport const createProduct = async (values: productValues) =>\r\n  await axios.post(`${server_url}/product/create`, values)\r\n\r\nexport const getProducts = async (page: number, quertyObj: QueryObj) =>\r\n  await axios.get(\r\n    `${server_url}/product/products?page=${page}&sort=${quertyObj.sort}&category=${quertyObj.category}&products=${quertyObj.productsToDisplay}`\r\n  )\r\n\r\nexport const getAdminProducts = async (page: number) =>\r\n  await axios.get(`${server_url}/product/admin-products?page=${page}`)\r\n\r\nexport const getRandomProducts = async () =>\r\n  await axios.get(`${server_url}/product/get-random-products`)\r\n\r\nexport const getProduct = async (id: string) =>\r\n  await axios.get(`${server_url}/product/product/${id}`)\r\n\r\nexport const updateProduct = async (values: productValues, id: string) =>\r\n  await axios.put(`${server_url}/product/update/${id}`, values)\r\n\r\nexport const deleteProduct = async (id: string) =>\r\n  await axios.delete(`${server_url}/product/delete/${id}`)\r\n\r\nexport const addProductToWishlist = async (productId: string) =>\r\n  await axios.post(`${server_url}/product/add-to-wishlist`, { productId })\r\n\r\nexport const getMostWishedProducts = async () =>\r\n  await axios.get(`${server_url}/product/most-wished`)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { AxiosResponse } from 'axios'\r\nimport {\r\n  addProductToWishlist,\r\n  createProduct,\r\n  deleteProduct,\r\n  getAdminProducts,\r\n  getProduct,\r\n  getProducts,\r\n  getRandomProducts,\r\n  QueryObj,\r\n  updateProduct,\r\n} from '../api/product'\r\nimport { productValues } from '../api/product'\r\n\r\nexport const create = createAsyncThunk(\r\n  'product/create',\r\n  async (values: productValues, { rejectWithValue }) => {\r\n    type createProductResponse = {\r\n      message: string\r\n      productId: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<createProductResponse> =\r\n        await createProduct(values)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const products = createAsyncThunk(\r\n  'product/products',\r\n  async (\r\n    { page, queryObj }: { page: number; queryObj: QueryObj },\r\n    { rejectWithValue }\r\n  ) => {\r\n    type products = {\r\n      name: string\r\n      price: number\r\n      quantity: number\r\n      category: string\r\n      description: string\r\n      images?: any[]\r\n    }\r\n    type getProductsResponse = {\r\n      products: products[]\r\n      pages: number\r\n      page: number\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getProductsResponse> = await getProducts(\r\n        page,\r\n        queryObj\r\n      )\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const product = createAsyncThunk(\r\n  'product/product',\r\n  async (id: string, { rejectWithValue }) => {\r\n    type SingleProductImage = {\r\n      original: string\r\n      thumbnail: string\r\n    }\r\n\r\n    type category = {\r\n      _id: string\r\n      name: string\r\n    }\r\n\r\n    type product = {\r\n      _id: string\r\n      name: string\r\n      price: number\r\n      quantity: number\r\n      category: category\r\n      description: string\r\n      images?: any[]\r\n      sold: number\r\n      createdAt: string\r\n      updatedAt: string\r\n      wishlist: string[]\r\n    }\r\n    type getProductsResponse = {\r\n      product: product\r\n      images: SingleProductImage[]\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getProductsResponse> = await getProduct(id)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const update = createAsyncThunk(\r\n  'product/update',\r\n  async (\r\n    { values, id }: { values: productValues; id: string },\r\n    { rejectWithValue }\r\n  ) => {\r\n    type getUpdateProductResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getUpdateProductResponse> =\r\n        await updateProduct(values, id)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const remove = createAsyncThunk(\r\n  'product/remove',\r\n  async (id: string, { rejectWithValue }) => {\r\n    type deleteProductResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<deleteProductResponse> =\r\n        await deleteProduct(id)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const randomProducts = createAsyncThunk(\r\n  'product/randomProducts',\r\n  async (_, { rejectWithValue }) => {\r\n    type Image = {\r\n      url: string\r\n    }\r\n\r\n    type products = {\r\n      _id: string\r\n      name: string\r\n      price: number\r\n      quantity: number\r\n      category: string\r\n      description: string\r\n      images: Image[]\r\n    }\r\n    type getProductsResponse = {\r\n      products: products[]\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getProductsResponse> =\r\n        await getRandomProducts()\r\n\r\n      type Item = { description: string; original: string; productId: string }\r\n      type Items = Item[]\r\n      let items: Items = []\r\n\r\n      let products = response.data.products\r\n      products.forEach((element) => {\r\n        items.push({\r\n          productId: element._id,\r\n          description: element.name,\r\n          original:\r\n            element.images.length > 0\r\n              ? element.images[0].url\r\n              : 'https://via.placeholder.com/900x900?text=No+Images+Yet..',\r\n        })\r\n      })\r\n\r\n      return items\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const addToWishlist = createAsyncThunk(\r\n  'product/addToWishlist',\r\n  async (productId: string, { rejectWithValue }) => {\r\n    type addToWishlistResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<addToWishlistResponse> =\r\n        await addProductToWishlist(productId)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const adminProducts = createAsyncThunk(\r\n  'product/adminProducts',\r\n  async (page: number, { rejectWithValue }) => {\r\n    type products = {\r\n      name: string\r\n      price: number\r\n      quantity: number\r\n      category: string\r\n      description: string\r\n      images?: any[]\r\n    }\r\n    type getProductsResponse = {\r\n      products: products[]\r\n      pages: number\r\n      page: number\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getProductsResponse> =\r\n        await getAdminProducts(page)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { productImageDelete, productImageUpload } from '../actions/cloudinary'\r\nimport {\r\n  addToWishlist,\r\n  adminProducts,\r\n  create,\r\n  product,\r\n  products,\r\n  randomProducts,\r\n  remove,\r\n  update,\r\n} from '../actions/product'\r\n\r\ntype Image = {\r\n  url: string\r\n  public_id: string\r\n}\r\n\r\ntype Category = {\r\n  _id: string\r\n  name: string\r\n}\r\n\r\ntype RandomProduct = {\r\n  productId: string\r\n  original: string\r\n  description: string\r\n}\r\n\r\ntype SingleProductImage = {\r\n  original: string\r\n  thumbnail: string\r\n}\r\n\r\nexport type Product = {\r\n  _id: string\r\n  name: string\r\n  images?: Image[]\r\n  price: number\r\n  quantity: number\r\n  sold: number\r\n  description: string\r\n  category: Category\r\n  createdAt: string\r\n  updatedAt: string\r\n  count?: number\r\n  wishlist: string[]\r\n}\r\n\r\ninterface initialStateI {\r\n  product: undefined | Product\r\n  productImages: SingleProductImage[]\r\n  products: any[]\r\n  adminProducts: any[]\r\n  pages: number\r\n  page: number\r\n  queryObj: {\r\n    sort: string\r\n    category: string\r\n    productsToDisplay: string\r\n  }\r\n  randomProducts: RandomProduct[] | []\r\n  productToUpdate: {} | Product\r\n  createdProductId: null | string\r\n  successMessage: boolean | string\r\n  errorMessage: boolean | string\r\n  loading: boolean\r\n  addToWishlistSuccess: boolean | string\r\n  addToWishlistError: boolean | string\r\n  wishlistLoading: boolean\r\n}\r\n\r\nconst initialState: initialStateI = {\r\n  product: undefined,\r\n  productImages: [],\r\n  products: [],\r\n  adminProducts: [],\r\n  pages: 0,\r\n  page: 1,\r\n  queryObj: {\r\n    sort: 'createdAt',\r\n    category: '',\r\n    productsToDisplay: 'all',\r\n  },\r\n  randomProducts: [],\r\n  productToUpdate: {},\r\n  createdProductId: null,\r\n  successMessage: false,\r\n  errorMessage: false,\r\n  loading: false,\r\n  addToWishlistSuccess: false,\r\n  addToWishlistError: false,\r\n  wishlistLoading: false,\r\n}\r\n\r\nconst productSlice = createSlice({\r\n  name: 'product',\r\n  initialState,\r\n  reducers: {\r\n    resetSuccessMessage: (state) => {\r\n      state.successMessage = false\r\n    },\r\n    setErrorMessage: (state, action) => {\r\n      state.errorMessage = action.payload.message\r\n    },\r\n    setProductToUpdate: (state, action) => {\r\n      state.productToUpdate = action.payload\r\n    },\r\n    setPage: (state, action) => {\r\n      state.page = action.payload\r\n    },\r\n    setCategory: (state, action) => {\r\n      state.queryObj.category = action.payload\r\n      state.page = 1\r\n    },\r\n    setSort: (state, action) => {\r\n      state.queryObj.sort = action.payload\r\n      state.page = 1\r\n    },\r\n    setProductToDisplay: (state, action) => {\r\n      state.queryObj.productsToDisplay = action.payload\r\n      state.page = 1\r\n    },\r\n    resetQueryObj: (state) => {\r\n      state.queryObj = {\r\n        sort: 'createdAt',\r\n        category: '',\r\n        productsToDisplay: 'all',\r\n      }\r\n    },\r\n    resetCreatedProductId: (state) => {\r\n      state.createdProductId = null\r\n    },\r\n    resetAddToWishlistSuccess: (state) => {\r\n      state.addToWishlistSuccess = false\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      //create product\r\n      .addCase(create.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(create.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.createdProductId = action.payload.data.productId\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(create.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get products\r\n      .addCase(products.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(products.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.products = action.payload.data.products\r\n        state.pages = action.payload.data.pages\r\n        state.page = action.payload.data.page\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(products.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get admin products\r\n      .addCase(adminProducts.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(adminProducts.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.adminProducts = action.payload.data.products\r\n        state.pages = action.payload.data.pages\r\n        state.page = action.payload.data.page\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(adminProducts.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get product\r\n      .addCase(product.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(product.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.product = action.payload.data.product\r\n        state.productImages = action.payload.data.images\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(product.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //upload product images\r\n      .addCase(productImageUpload.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(productImageUpload.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.product = action.payload.data.product\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(\r\n        productImageUpload.rejected,\r\n        (state, action: PayloadAction<any>) => {\r\n          state.loading = false\r\n          action.payload.errors\r\n            ? (state.errorMessage = action.payload.errors[0].msg)\r\n            : (state.errorMessage = action.payload.message)\r\n        }\r\n      )\r\n      //delete product image\r\n      .addCase(productImageDelete.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(productImageDelete.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.product = action.payload.data.product\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(\r\n        productImageDelete.rejected,\r\n        (state, action: PayloadAction<any>) => {\r\n          state.loading = false\r\n          action.payload.errors\r\n            ? (state.errorMessage = action.payload.errors[0].msg)\r\n            : (state.errorMessage = action.payload.message)\r\n        }\r\n      )\r\n      //update product details\r\n      .addCase(update.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(update.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(update.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //delete product\r\n      .addCase(remove.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(remove.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(remove.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get random products\r\n      .addCase(randomProducts.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(randomProducts.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.randomProducts = action.payload\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(randomProducts.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //add product to wishlist\r\n      .addCase(addToWishlist.pending, (state, action) => {\r\n        state.wishlistLoading = true\r\n      })\r\n      .addCase(addToWishlist.fulfilled, (state, action) => {\r\n        state.wishlistLoading = false\r\n        state.addToWishlistSuccess = action.payload.data.message\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(addToWishlist.rejected, (state, action: PayloadAction<any>) => {\r\n        state.wishlistLoading = false\r\n        state.addToWishlistError = action.payload.message\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  resetSuccessMessage,\r\n  setErrorMessage,\r\n  setProductToUpdate,\r\n  setPage,\r\n  setCategory,\r\n  resetQueryObj,\r\n  setSort,\r\n  setProductToDisplay,\r\n  resetCreatedProductId,\r\n  resetAddToWishlistSuccess,\r\n} = productSlice.actions\r\n\r\nexport default productSlice.reducer\r\n","import { Button } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\nimport { categories as getCategories } from '../../redux/actions/categories'\r\nimport Loader from '../loader'\r\nimport { useHistory } from 'react-router'\r\nimport { setCategory } from '../../redux/reducers/productSlice'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst Categories = () => {\r\n  const classes = styles()\r\n  const { categories, loading } = useSelector(\r\n    (state: RootState) => state.category\r\n  )\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories())\r\n  }, [])\r\n\r\n  type Category = {\r\n    _id: string\r\n  }\r\n\r\n  const handleClick = (category: Category) => {\r\n    dispatch(setCategory(category._id))\r\n    history.push('/shop')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography className={classes.header} align='center' variant='h4'>\r\n        Categories\r\n      </Typography>\r\n      <div className={classes.container}>\r\n        {loading && <Loader />}\r\n        {categories.length > 0 &&\r\n          categories.map((c, i) => (\r\n            <Button\r\n              onClick={() => handleClick(c)}\r\n              key={i}\r\n              className={classes.element}\r\n              color='primary'\r\n            >\r\n              {c.name}\r\n            </Button>\r\n          ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Categories\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  main: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n\r\n  mainContainer: {\r\n    width: '450px',\r\n    maxWidth: '100%',\r\n    margin: '30px auto',\r\n    height: 'fit-content',\r\n    padding: '10px',\r\n    position: 'relative',\r\n  },\r\n\r\n  paperContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    height: 'fit-content',\r\n    minHeight: '350px',\r\n  },\r\n\r\n  formElement: {\r\n    margin: '18px 0',\r\n    width: '300px',\r\n    maxWidth: '95%',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n    fontSize: '16px',\r\n  },\r\n\r\n  iconDiv: {\r\n    fontSize: '50px',\r\n    margin: '15px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  myIcons: {\r\n    color: '#424242',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    textDecoration: 'none',\r\n  },\r\n\r\n  flexDiv: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  span: {\r\n    fontSize: '18px',\r\n    fontWeight: 600,\r\n    marginLeft: '15px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","const HandleChange = (\r\n  e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\r\n  values: any,\r\n  setValues: any\r\n) => {\r\n  return setValues({ ...values, [e.target.name]: e.target.value })\r\n}\r\n\r\nexport default HandleChange\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\ntype messageValues = {\r\n  text: string\r\n  email: string\r\n}\r\n\r\nexport const createMessage = async (values: messageValues) =>\r\n  await axios.post(`${server_url}/message/create`, values)\r\n\r\nexport const getMessages = async (page: number) =>\r\n  await axios.get(`${server_url}/message/get-messages?page=${page}`)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { AxiosResponse } from 'axios'\r\nimport { createMessage, getMessages } from '../api/message'\r\n\r\ntype messageValues = {\r\n  text: string\r\n  email: string\r\n}\r\n\r\nexport const create = createAsyncThunk(\r\n  'message/create',\r\n  async (values: messageValues, { rejectWithValue }) => {\r\n    type createMessageResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<createMessageResponse> =\r\n        await createMessage(values)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const messages = createAsyncThunk(\r\n  'message/messages',\r\n  async (page: number, { rejectWithValue }) => {\r\n    type Message = {\r\n      email: string\r\n      text: string\r\n      createdAt: string\r\n      updatedAt: string\r\n    }\r\n    type getMessagesResponse = {\r\n      messages: Message[]\r\n      pages: number\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getMessagesResponse> = await getMessages(\r\n        page\r\n      )\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { create, messages } from '../actions/message'\r\n\r\ntype Message = {\r\n  email: string\r\n  text: string\r\n  createdAt: string\r\n  updatedAt: string\r\n}\r\n\r\ninterface initialStateI {\r\n  loading: boolean\r\n  errorMessage: boolean | string\r\n  successMessage: boolean | string\r\n  messages: null | Message[]\r\n  pages: number\r\n  page: number\r\n  clearValues: boolean\r\n}\r\n\r\nconst initialState: initialStateI = {\r\n  loading: false,\r\n  errorMessage: false,\r\n  successMessage: false,\r\n  messages: null,\r\n  pages: 0,\r\n  page: 1,\r\n  clearValues: false,\r\n}\r\n\r\nconst messageSlice = createSlice({\r\n  name: 'message',\r\n  initialState,\r\n  reducers: {\r\n    resetSuccessMessage: (state) => {\r\n      state.successMessage = false\r\n    },\r\n    resetErrorMessage: (state) => {\r\n      state.errorMessage = false\r\n    },\r\n    resetClearValues: (state) => {\r\n      state.clearValues = false\r\n    },\r\n    setPage: (state, action) => {\r\n      state.page = action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      //create message\r\n      .addCase(create.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(create.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.clearValues = true\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(create.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get messages\r\n      .addCase(messages.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(messages.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.messages = action.payload.data.messages\r\n        state.pages = action.payload.data.pages\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(messages.rejected, (state, action: PayloadAction<any>) => {\r\n        if (action.payload === 'Unauthorized') {\r\n          state.loading = false\r\n          state.errorMessage = action.payload\r\n        } else {\r\n          state.loading = false\r\n          action.payload.errors\r\n            ? (state.errorMessage = action.payload.errors[0].msg)\r\n            : (state.errorMessage = action.payload.message)\r\n        }\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  resetClearValues,\r\n  resetSuccessMessage,\r\n  resetErrorMessage,\r\n  setPage,\r\n} = messageSlice.actions\r\n\r\nexport default messageSlice.reducer\r\n","import { Alert } from '@material-ui/lab'\r\n\r\nconst ShowSuccess = (text: string | boolean) => {\r\n  return (\r\n    <div style={{ margin: '15px auto' }}>\r\n      <Alert severity='success'>{text}</Alert>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowSuccess\r\n","import { Alert } from '@material-ui/lab'\r\n\r\nconst ShowError = (text: string | boolean) => {\r\n  return (\r\n    <div style={{ margin: '15px auto' }}>\r\n      <Alert severity='error'>{text}</Alert>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowError\r\n","import styles from './styles'\r\nimport { TextField, Button, Paper } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useState } from 'react'\r\nimport HandleChange from '../../hooks/HandleChange'\r\nimport { create } from '../../redux/actions/message'\r\nimport {\r\n  resetClearValues,\r\n  resetErrorMessage,\r\n  resetSuccessMessage,\r\n} from '../../redux/reducers/messageSlice'\r\nimport ShowSuccess from '../../hooks/ShowSuccess'\r\nimport ShowError from '../../hooks/ShowError'\r\nimport { useEffect } from 'react'\r\n\r\nconst ContactForm = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { loading, successMessage, errorMessage, clearValues } = useSelector(\r\n    (state: RootState) => state.message\r\n  )\r\n\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    text: '',\r\n  })\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(create(values))\r\n  }\r\n\r\n  if (clearValues === true) {\r\n    setValues({\r\n      email: '',\r\n      text: '',\r\n    })\r\n\r\n    dispatch(resetClearValues())\r\n  }\r\n\r\n  const handleResetAll = () => {\r\n    dispatch(resetSuccessMessage())\r\n    dispatch(resetErrorMessage())\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => handleResetAll()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <form onSubmit={handleSubmit}>\r\n        <Paper className={classes.paperContainer}>\r\n          <TextField\r\n            className={classes.formElement}\r\n            label='Email'\r\n            name='email'\r\n            type='email'\r\n            required={true}\r\n            onChange={(e) => HandleChange(e, values, setValues)}\r\n          />\r\n\r\n          <TextField\r\n            className={classes.formElement}\r\n            label='Your Message'\r\n            name='text'\r\n            type='text'\r\n            multiline={true}\r\n            rows={5}\r\n            required={true}\r\n            onChange={(e) => HandleChange(e, values, setValues)}\r\n          />\r\n\r\n          {successMessage && ShowSuccess(successMessage)}\r\n          {errorMessage && ShowError(errorMessage)}\r\n\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n            className={classes.formElement}\r\n          >\r\n            {loading ? 'Loading' : 'Send message'}\r\n          </Button>\r\n        </Paper>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import styles from './styles'\r\n\r\nconst SocialMediaSection = () => {\r\n  const classes = styles()\r\n\r\n  return (\r\n    <div className={classes.flexDiv}>\r\n      <div className={classes.iconDiv}>\r\n        <a\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          href='https://www.instagram.com/odartshop/'\r\n          className={classes.myIcons}\r\n        >\r\n          <i className='fab fa-instagram '></i>\r\n          <span className={classes.span}>Instagram</span>\r\n        </a>\r\n      </div>\r\n\r\n      <div className={classes.iconDiv}>\r\n        <a\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          href='https://www.facebook.com/Olga.Don.art'\r\n          className={classes.myIcons}\r\n        >\r\n          <i className='fab fa-facebook-square '></i>\r\n          <span className={classes.span}>Facebook</span>\r\n        </a>\r\n      </div>\r\n      <div className={classes.iconDiv}>\r\n        <a\r\n          href='https://wa.me/972546659069'\r\n          className={classes.myIcons}\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <i style={{ color: 'green' }} className='fab fa-whatsapp'></i>\r\n          <span className={classes.span}>054-665-9069</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SocialMediaSection\r\n","import { Paper } from '@material-ui/core'\r\nimport SocialMediaSection from './SocialMediaSection'\r\nimport styles from './styles'\r\n\r\nconst SocialMedia = () => {\r\n  const classes = styles()\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Paper className={classes.paperContainer}>\r\n        <SocialMediaSection />\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SocialMedia\r\n","import { Grid } from '@material-ui/core'\r\nimport ContactForm from './ContactForm'\r\nimport SocialMedia from './SocialMedia'\r\nimport styles from './styles'\r\n\r\nconst Contact = () => {\r\n  const classes = styles()\r\n\r\n  return (\r\n    <Grid className={classes.main} container>\r\n      <Grid item xs={12} sm={5}>\r\n        <h1 className={classes.title}>Send Me a Message</h1>\r\n\r\n        <ContactForm />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={5}>\r\n        <h1 className={classes.title}>My Social Media</h1>\r\n        <SocialMedia />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  container: {\r\n    margin: '5px 0',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n    color: 'gray',\r\n    textAlign: 'center',\r\n  },\r\n  leftContainer: {\r\n    padding: '10px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { Grid } from '@material-ui/core'\r\nimport ImageGallery from 'react-image-gallery'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\nimport { randomProducts as getRandomProducs } from '../../redux/actions/product'\r\nimport Loader from '../loader'\r\nimport { useHistory } from 'react-router'\r\nimport styles from './styles'\r\n\r\nconst HomeCarousel: React.FC = () => {\r\n  const { loading, randomProducts } = useSelector(\r\n    (state: RootState) => state.product\r\n  )\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const classes = styles()\r\n\r\n  useEffect(() => {\r\n    dispatch(getRandomProducs())\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <Grid className={classes.leftContainer} item xs={12} sm={5}>\r\n        <h1 className={classes.title}>Random Products</h1>\r\n        <p className={classes.text}>\r\n          Note: Click on the Image in order to see the product\r\n        </p>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={5}>\r\n        {loading && <Loader />}\r\n        {!loading && randomProducts.length > 0 && (\r\n          <div style={{ cursor: 'pointer' }}>\r\n            <ImageGallery\r\n              showPlayButton={false}\r\n              autoPlay={true}\r\n              slideInterval={5000}\r\n              slideDuration={500}\r\n              showThumbnails={false}\r\n              items={randomProducts}\r\n              showBullets={true}\r\n              showNav={true}\r\n              onClick={(e: any) => {\r\n                const foundProduct = randomProducts.find(\r\n                  (p) => p.original === e.target.src\r\n                )\r\n                history.push(`/product/${foundProduct?.productId}`)\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default HomeCarousel\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  container: {\r\n    width: '100%',\r\n    margin: '10px 0 30px 0',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  img: {\r\n    width: '100%',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { banner } from '../../redux/actions/admin'\r\nimport { RootState } from '../../redux/store'\r\nimport Loader from '../loader'\r\nimport styles from './styles'\r\n\r\nconst Banner: React.FC = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { bannerImage, loading } = useSelector(\r\n    (state: RootState) => state.admin\r\n  )\r\n\r\n  useEffect(() => {\r\n    dispatch(banner())\r\n  }, [])\r\n  return (\r\n    <div className={classes.container}>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <img className={classes.img} src={bannerImage} alt='banner' />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Banner\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    marginBottom: '15vh',\r\n  },\r\n\r\n  title: {\r\n    textAlign: 'center',\r\n    margin: '10px 0',\r\n  },\r\n\r\n  button: {\r\n    fontSize: '16px',\r\n    width: '300px',\r\n    maxWidth: '95%',\r\n    margin: '10px auto',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\ninterface initialStateI {\r\n  siteRulesModal: boolean\r\n  adminMenuModal: boolean\r\n  navigationModal: boolean\r\n}\r\n\r\nconst initialState: initialStateI = {\r\n  siteRulesModal: false,\r\n  adminMenuModal: false,\r\n  navigationModal: false,\r\n}\r\n\r\nconst modalSlice = createSlice({\r\n  name: 'modal',\r\n  initialState,\r\n  reducers: {\r\n    openSiteRulesModal: (state) => {\r\n      state.siteRulesModal = true\r\n    },\r\n    closeSiteRulesModal: (state) => {\r\n      state.siteRulesModal = false\r\n    },\r\n    openAdminMenuModal: (state) => {\r\n      state.adminMenuModal = true\r\n    },\r\n    closeAdminMenuModal: (state) => {\r\n      state.adminMenuModal = false\r\n    },\r\n    openNavigationModal: (state) => {\r\n      state.navigationModal = true\r\n    },\r\n    closeNavigationModal: (state) => {\r\n      state.navigationModal = false\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  openSiteRulesModal,\r\n  closeSiteRulesModal,\r\n  openAdminMenuModal,\r\n  closeAdminMenuModal,\r\n  openNavigationModal,\r\n  closeNavigationModal,\r\n} = modalSlice.actions\r\n\r\nexport default modalSlice.reducer\r\n","import styles from './styles'\r\nimport { Button } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openSiteRulesModal } from '../../redux/reducers/modalSlice'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\nimport { siteRules as getSiteRules } from '../../redux/actions/admin'\r\n\r\nconst PolicyRules = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const { siteRules } = useSelector((state: RootState) => state.admin)\r\n\r\n  const handleOpen = () => {\r\n    dispatch(openSiteRulesModal())\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getSiteRules())\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <h1 className={classes.title}>Our Site Policy Rules</h1>\r\n      <Button\r\n        onClick={handleOpen}\r\n        className={classes.button}\r\n        variant='contained'\r\n        color='primary'\r\n        disabled={!siteRules}\r\n      >\r\n        View our site rules\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PolicyRules\r\n","const StyledHr = () => {\r\n  return (\r\n    <hr\r\n      style={{\r\n        borderTop: '3px dotted #FF69B4',\r\n        margin: '30px auto',\r\n        width: '600px',\r\n        maxWidth: '95%',\r\n      }}\r\n    ></hr>\r\n  )\r\n}\r\n\r\nexport default StyledHr\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  linkSpan: {\r\n    color: '#FF69B4',\r\n    cursor: 'pointer',\r\n    margin: '0 7px',\r\n  },\r\n\r\n  title: {\r\n    margin: '20px 0',\r\n  },\r\n\r\n  name: {\r\n    fontWeight: 600,\r\n  },\r\n\r\n  flexCenterDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  image: {\r\n    width: '300px',\r\n    margin: '10px auto',\r\n    maxWidth: '90%',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","export default __webpack_public_path__ + \"static/media/logo.88adc1e8.png\";","import { Typography } from '@material-ui/core'\r\nimport { useHistory } from 'react-router'\r\nimport styles from './styles'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport logo from '../../utils/logo.png'\r\n\r\nconst WelcomeMessage: React.FC = () => {\r\n  const { user } = useSelector((state: RootState) => state.auth)\r\n  const history = useHistory()\r\n  const classes = styles()\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.flexCenterDiv}>\r\n        <img src={logo} alt='logo' className={classes.image} />\r\n      </div>\r\n\r\n      {!user ? (\r\n        <Typography className={classes.title} variant='h5' align='center'>\r\n          Hello guest click\r\n          <span\r\n            onClick={() => history.push('/login')}\r\n            className={classes.linkSpan}\r\n          >\r\n            here\r\n          </span>\r\n          to login.\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant='h5' align='center'>\r\n          Hello <span className={classes.name}>{user.email.split('@')[0]}</span>\r\n          , welcome back.\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WelcomeMessage\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport {\r\n  banner,\r\n  profileImage,\r\n  uploadBanner,\r\n  uploadProfile,\r\n  aboutMe,\r\n  updateAbout,\r\n  siteRules,\r\n  updateRules,\r\n} from '../actions/admin'\r\n\r\ninterface initialStateI {\r\n  bannerImage: string\r\n  profileImage: string\r\n  about: string\r\n  siteRules: string\r\n  loading: boolean\r\n  errorMessage: string | boolean\r\n  successMessage: string | boolean\r\n}\r\n\r\nconst initialState: initialStateI = {\r\n  bannerImage: 'https://via.placeholder.com/1280x300?text=Banner%20image',\r\n  profileImage: 'https://via.placeholder.com/700x700?text=Profile%20image',\r\n  about: '',\r\n  siteRules: '',\r\n  errorMessage: false,\r\n  successMessage: false,\r\n  loading: false,\r\n}\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'admin',\r\n  initialState,\r\n  reducers: {\r\n    resetErrorMessage: (state) => {\r\n      state.errorMessage = false\r\n    },\r\n    resetSuccessMessage: (state) => {\r\n      state.successMessage = false\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      //upload banner image\r\n      .addCase(uploadBanner.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(uploadBanner.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(uploadBanner.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //upload profile image\r\n      .addCase(uploadProfile.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(uploadProfile.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(uploadProfile.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get banner image\r\n      .addCase(banner.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(banner.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.bannerImage = action.payload\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(banner.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get profile image\r\n      .addCase(profileImage.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(profileImage.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.profileImage = action.payload\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(profileImage.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get about info\r\n      .addCase(aboutMe.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(aboutMe.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.about = action.payload\r\n        state.successMessage = true\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(aboutMe.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //update about info\r\n      .addCase(updateAbout.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(updateAbout.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(updateAbout.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get site rules\r\n      .addCase(siteRules.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(siteRules.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.siteRules = action.payload\r\n        state.successMessage = true\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(siteRules.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //update site rules\r\n      .addCase(updateRules.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(updateRules.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(updateRules.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n  },\r\n})\r\n\r\nexport const { resetErrorMessage, resetSuccessMessage } = adminSlice.actions\r\nexport default adminSlice.reducer\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  header: {\r\n    margin: '15px 0',\r\n  },\r\n\r\n  appLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: '#181818',\r\n    fontSize: '22px',\r\n    fontWeight: 500,\r\n    textDecoration: 'none',\r\n    padding: '0 3px',\r\n    textAlign: 'center',\r\n    margin: '10px auto',\r\n    width: '250px',\r\n    maxWidth: '95%',\r\n    border: '1px solid white',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      backgroundColor: '#D3D3D3',\r\n    },\r\n  },\r\n  navigationLink: {\r\n    color: '#181818',\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    fontSize: '28px',\r\n    fontWeight: 700,\r\n    textDecoration: 'none',\r\n    margin: '15px 0',\r\n    padding: '2px 10px',\r\n  },\r\n\r\n  appIcon: {\r\n    fontSize: '26px',\r\n    marginRight: '10px',\r\n  },\r\n\r\n  icon: {\r\n    marginRight: '5px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { Dialog, Typography } from '@material-ui/core'\r\nimport { closeSiteRulesModal } from '../../redux/reducers/modalSlice'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport parse from 'html-react-parser'\r\nimport styles from './styles'\r\nimport { DialogContent } from '@material-ui/core'\r\nimport { DialogTitle } from '@material-ui/core'\r\n\r\nconst SiteRulesModal = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = styles()\r\n  const { siteRules } = useSelector((state: RootState) => state.admin)\r\n\r\n  const { siteRulesModal: modal } = useSelector(\r\n    (state: RootState) => state.modal\r\n  )\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeSiteRulesModal())\r\n  }\r\n\r\n  return (\r\n    <Dialog open={modal} onClose={handleClose}>\r\n      <div style={{ width: '600px', maxWidth: '100%' }}>\r\n        <DialogTitle>\r\n          <Typography align='center' variant='h4' className={classes.header}>\r\n            Site Policy Rules\r\n          </Typography>\r\n        </DialogTitle>\r\n\r\n        <DialogContent style={{ padding: '10px' }}>\r\n          {parse(siteRules)}\r\n        </DialogContent>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default SiteRulesModal\r\n","import { Helmet } from 'react-helmet'\r\n\r\ninterface Props {\r\n  title?: string\r\n  name?: string\r\n  content?: string\r\n}\r\n\r\nconst Seo = ({ title, name, content }: Props) => {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>{`${title || 'Page Title'} | Olga Jewelry`}</title>\r\n        <meta name={name || 'Page name'} content={content || 'Content'} />\r\n      </Helmet>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import About from '../../components/about-section/About'\r\nimport Categories from '../../components/categories/Categories'\r\nimport Contact from '../../components/contact-us/Contact'\r\nimport HomeCarousel from '../../components/homepage-carousel/HomeCarousel'\r\nimport Banner from '../../components/news-banner/Banner'\r\nimport PolicyRules from '../../components/site-policy-rules/PolicyRules'\r\nimport StyledHr from '../../components/styled-hr/StyledHr'\r\nimport WelcomeMessage from '../../components/welcome-message/WelcomeMessage'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  resetErrorMessage,\r\n  resetSuccessMessage,\r\n} from '../../redux/reducers/adminSlice'\r\nimport { useEffect } from 'react'\r\nimport SiteRulesModal from '../../components/modals/SiteRulesModal'\r\nimport Seo from '../../hooks/Seo'\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const resetMessages = () => {\r\n    dispatch(resetErrorMessage())\r\n    dispatch(resetSuccessMessage())\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => resetMessages()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Seo title='Home page' name='Home' />\r\n      <WelcomeMessage />\r\n      <StyledHr />\r\n      <Banner />\r\n      <StyledHr />\r\n      <Categories />\r\n      <StyledHr />\r\n      <HomeCarousel />\r\n      <StyledHr />\r\n      <About />\r\n      <StyledHr />\r\n      <Contact />\r\n      <StyledHr />\r\n      <PolicyRules />\r\n\r\n      {/* modal */}\r\n      <SiteRulesModal />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  mainContainer: {\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    position: 'relative',\r\n  },\r\n\r\n  container: {\r\n    margin: '0 auto',\r\n    width: '1280px',\r\n    maxWidth: '100%',\r\n    minHeight: 'calc(100vh - 134px)',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  appBar: {\r\n    backgroundColor: '#181818',\r\n  },\r\n\r\n  tooBar: {\r\n    width: '1280px',\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n  },\r\n\r\n  appLink: {\r\n    color: 'white',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    fontSize: '20px',\r\n    fontWeight: 500,\r\n    textDecoration: 'none',\r\n    marginRight: '20px',\r\n    padding: '0 3px',\r\n    borderBottom: '2px solid #181818',\r\n    '&:hover': {\r\n      borderBottom: '2px solid white',\r\n    },\r\n  },\r\n\r\n  appIcon: {\r\n    fontSize: '26px',\r\n    marginRight: '5px',\r\n  },\r\n\r\n  flex1: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import axios from 'axios'\r\nimport { UserInfo } from '../reducers/authSlice'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport type registerObj = {\r\n  email: string\r\n  password: string\r\n  confirmPassword: string\r\n}\r\n\r\nexport type loginObj = {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nexport type passwordResetObj = {\r\n  password: string\r\n  confirmPassword: string\r\n  resetPasswordToken: string\r\n}\r\n\r\nexport const registerUser = async (obj: registerObj) =>\r\n  await axios.post(`${server_url}/auth/register`, obj)\r\n\r\nexport const loginUser = async (obj: loginObj) =>\r\n  await axios.post(`${server_url}/auth/login`, obj)\r\n\r\nexport const forgotPasswordEmail = async (email: string) =>\r\n  await axios.post(`${server_url}/auth/forgot-password`, { email })\r\n\r\nexport const logoutUser = async () =>\r\n  await axios.get(`${server_url}/auth/logout`)\r\n\r\nexport const getUsers = async (page: number) =>\r\n  await axios.get(`${server_url}/auth/users?page=${page}`)\r\n\r\nexport const updateUserDetails = async (userInfo: UserInfo) =>\r\n  await axios.post(`${server_url}/auth/update-details`, { userInfo })\r\n\r\nexport const resetPasswordValidation = async (id: string) =>\r\n  await axios.get(`${server_url}/auth/password-reset-validation/${id}`)\r\n\r\nexport const resetPasswordAction = async (obj: passwordResetObj) =>\r\n  await axios.post(`${server_url}/auth/password-reset`, obj)\r\n\r\nexport const getPaypalClientId = async () =>\r\n  await axios.get(`${server_url}/auth/get-paypal-client-id`)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n  registerUser,\r\n  registerObj,\r\n  loginObj,\r\n  loginUser,\r\n  logoutUser,\r\n  getUsers,\r\n  updateUserDetails,\r\n  forgotPasswordEmail,\r\n  resetPasswordValidation,\r\n  passwordResetObj,\r\n  resetPasswordAction,\r\n} from '../api/auth'\r\nimport { AxiosResponse } from 'axios'\r\nimport { UserI, UserInfo } from '../reducers/authSlice'\r\n\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async (obj: loginObj, { rejectWithValue }) => {\r\n    type loginResponse = {\r\n      message: string\r\n      user: UserI\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<loginResponse> = await loginUser(obj)\r\n\r\n      // cookie.set('user', response.data.user)\r\n      window.localStorage.setItem('user', JSON.stringify(response.data.user))\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (obj: registerObj, { rejectWithValue }) => {\r\n    type registerResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<registerResponse> = await registerUser(obj)\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const logout = createAsyncThunk(\r\n  'auth/logout',\r\n  async (obj, { rejectWithValue }) => {\r\n    type logoutResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<logoutResponse> = await logoutUser()\r\n\r\n      window.localStorage.removeItem('user')\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const users = createAsyncThunk(\r\n  'auth/users',\r\n  async (page: number, { rejectWithValue }) => {\r\n    type User = {\r\n      email: string\r\n      verified: boolean\r\n      role: string\r\n      createdAt: string\r\n    }\r\n\r\n    type usersResponse = {\r\n      users: User[]\r\n      pages: number\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<usersResponse> = await getUsers(page)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateDetails = createAsyncThunk(\r\n  'auth/updateDetails',\r\n  async (userInfo: UserInfo, { rejectWithValue }) => {\r\n    type updateDetailResponse = {\r\n      message: string\r\n      user: UserI\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<updateDetailResponse> =\r\n        await updateUserDetails(userInfo)\r\n\r\n      window.localStorage.setItem('user', JSON.stringify(response.data.user))\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const forgotPassowrd = createAsyncThunk(\r\n  'auth/forgotPassowrd',\r\n  async (email: string, { rejectWithValue }) => {\r\n    type forgotPassowrdResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<forgotPassowrdResponse> =\r\n        await forgotPasswordEmail(email)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const passwordValidation = createAsyncThunk(\r\n  'auth/passwordValidation',\r\n  async (id: string, { rejectWithValue }) => {\r\n    type passwordValidationResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<passwordValidationResponse> =\r\n        await resetPasswordValidation(id)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const passwordAction = createAsyncThunk(\r\n  'auth/passwordAction',\r\n  async (obj: passwordResetObj, { rejectWithValue }) => {\r\n    type passwordActionResponse = {\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<passwordActionResponse> =\r\n        await resetPasswordAction(obj)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { Dialog, Toolbar, IconButton, Badge } from '@material-ui/core'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { closeNavigationModal } from '../../redux/reducers/modalSlice'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './styles'\r\nimport { logout } from '../../redux/actions/auth'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst NavigationModal = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const { navigationModal: modal } = useSelector(\r\n    (state: RootState) => state.modal\r\n  )\r\n  const { user } = useSelector((state: RootState) => state.auth)\r\n  const { products } = useSelector((state: RootState) => state.cart)\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeNavigationModal())\r\n  }\r\n\r\n  const activeLinkStyles = {\r\n    borderBottom: '2px solid',\r\n  }\r\n\r\n  const classes = styles()\r\n\r\n  const handleLogout = () => {\r\n    history.push('/')\r\n    dispatch(logout())\r\n    dispatch(closeNavigationModal())\r\n  }\r\n\r\n  return (\r\n    <Dialog open={modal} onClose={handleClose} fullScreen>\r\n      <Toolbar style={{ backgroundColor: '#181818' }}>\r\n        <IconButton\r\n          style={{ color: 'white' }}\r\n          edge='start'\r\n          onClick={handleClose}\r\n          aria-label='close'\r\n        >\r\n          <CloseIcon /> Close\r\n        </IconButton>\r\n      </Toolbar>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <NavLink\r\n          onClick={handleClose}\r\n          exact\r\n          activeStyle={activeLinkStyles}\r\n          className={classes.navigationLink}\r\n          to='/'\r\n        >\r\n          Home\r\n        </NavLink>\r\n        <NavLink\r\n          onClick={handleClose}\r\n          exact\r\n          activeStyle={activeLinkStyles}\r\n          className={classes.navigationLink}\r\n          to='/shop'\r\n        >\r\n          Shop\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          onClick={handleClose}\r\n          exact\r\n          activeStyle={activeLinkStyles}\r\n          className={classes.navigationLink}\r\n          to='/cart'\r\n        >\r\n          {products?.length !== undefined ? (\r\n            <Badge color='secondary' badgeContent={products.length}>\r\n              Cart\r\n            </Badge>\r\n          ) : (\r\n            <>Cart</>\r\n          )}\r\n        </NavLink>\r\n\r\n        {user && user.role === 'admin' ? (\r\n          <NavLink\r\n            onClick={handleClose}\r\n            exact\r\n            activeStyle={activeLinkStyles}\r\n            className={classes.navigationLink}\r\n            to='/admin/dashboard'\r\n          >\r\n            Admin Dashboard\r\n          </NavLink>\r\n        ) : user && user.role === 'subscriber' ? (\r\n          <>\r\n            <NavLink\r\n              onClick={handleClose}\r\n              exact\r\n              activeStyle={activeLinkStyles}\r\n              className={classes.navigationLink}\r\n              to='/user/dashboard'\r\n            >\r\n              User Dashboard\r\n            </NavLink>\r\n\r\n            <span onClick={handleLogout} className={classes.navigationLink}>\r\n              Logout\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <NavLink\r\n            onClick={handleClose}\r\n            exact\r\n            activeStyle={activeLinkStyles}\r\n            className={classes.navigationLink}\r\n            to='/login'\r\n          >\r\n            Login\r\n          </NavLink>\r\n        )}\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default NavigationModal\r\n","import styles from './styles'\r\nimport { useDispatch } from 'react-redux'\r\nimport { openNavigationModal } from '../../redux/reducers/modalSlice'\r\nimport NavigationModal from '../modals/NavigationModal'\r\n\r\nconst MobileNavigation = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = styles()\r\n  const handleOpen = () => {\r\n    dispatch(openNavigationModal())\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span\r\n        onClick={handleOpen}\r\n        style={{ cursor: 'pointer' }}\r\n        className={classes.appLink}\r\n      >\r\n        Navigation Menu\r\n      </span>\r\n\r\n      <NavigationModal />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MobileNavigation\r\n","import AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport styles from './styles'\r\nimport { NavLink } from 'react-router-dom'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport ShopIcon from '@material-ui/icons/Shop'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport { Badge } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport MobileNavigation from './MobileNavigation'\r\n\r\nconst NavBar = () => {\r\n  const classes = styles()\r\n  const { user } = useSelector((state: RootState) => state.auth)\r\n  const { products } = useSelector((state: RootState) => state.cart)\r\n\r\n  const activeLinkStyles = {\r\n    borderBottom: '2px solid #FFB6C1',\r\n    color: '#FFB6C1',\r\n  }\r\n\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n\r\n  const handleWithChange = () => {\r\n    setWidth(window.innerWidth)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleWithChange)\r\n    return () => window.removeEventListener('resize', handleWithChange)\r\n  }, [])\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position='sticky'>\r\n      <Toolbar className={classes.tooBar}>\r\n        {width > 700 ? (\r\n          <>\r\n            <div className={classes.flex1}>\r\n              <NavLink\r\n                exact\r\n                activeStyle={activeLinkStyles}\r\n                className={classes.appLink}\r\n                to='/'\r\n              >\r\n                <HomeIcon className={classes.appIcon} /> Home\r\n              </NavLink>\r\n              <NavLink\r\n                exact\r\n                activeStyle={activeLinkStyles}\r\n                className={classes.appLink}\r\n                to='/shop'\r\n              >\r\n                <ShopIcon className={classes.appIcon} /> Shop\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                exact\r\n                activeStyle={activeLinkStyles}\r\n                className={classes.appLink}\r\n                to='/cart'\r\n              >\r\n                {products?.length !== undefined ? (\r\n                  <Badge color='secondary' badgeContent={products.length}>\r\n                    <ShoppingCartIcon className={classes.appIcon} />\r\n                    Cart\r\n                  </Badge>\r\n                ) : (\r\n                  <>\r\n                    <ShoppingCartIcon className={classes.appIcon} />\r\n                    Cart\r\n                  </>\r\n                )}\r\n              </NavLink>\r\n            </div>\r\n\r\n            <div>\r\n              {user && user.role === 'admin' ? (\r\n                <NavLink\r\n                  exact\r\n                  activeStyle={activeLinkStyles}\r\n                  className={classes.appLink}\r\n                  to='/admin/dashboard'\r\n                >\r\n                  Admin Dashboard\r\n                </NavLink>\r\n              ) : user && user.role === 'subscriber' ? (\r\n                <NavLink\r\n                  exact\r\n                  activeStyle={activeLinkStyles}\r\n                  className={classes.appLink}\r\n                  to='/user/dashboard'\r\n                >\r\n                  User Dashboard\r\n                </NavLink>\r\n              ) : (\r\n                <NavLink\r\n                  exact\r\n                  activeStyle={activeLinkStyles}\r\n                  className={classes.appLink}\r\n                  to='/login'\r\n                >\r\n                  Login\r\n                </NavLink>\r\n              )}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <MobileNavigation />\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  mainContainer: {\r\n    width: '500px',\r\n    maxWidth: '95%',\r\n    margin: '30px auto',\r\n    minHeight: '500px',\r\n    height: 'fit-content',\r\n    padding: '10px',\r\n    position: 'relative',\r\n  },\r\n\r\n  formContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  formElement: {\r\n    margin: '18px 0',\r\n    width: '300px',\r\n    maxWidth: '95%',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n    fontSize: '16px',\r\n  },\r\n\r\n  footerDiv: { marginTop: '30px' },\r\n\r\n  linkSpan: {\r\n    color: '#FF69B4',\r\n    cursor: 'pointer',\r\n    margin: '0 4px',\r\n  },\r\n\r\n  title: {\r\n    textAlign: 'center',\r\n    margin: '15px 0',\r\n  },\r\n\r\n  text: {\r\n    textAlign: 'center',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport {\r\n  forgotPassowrd,\r\n  login,\r\n  logout,\r\n  passwordAction,\r\n  passwordValidation,\r\n  register,\r\n  updateDetails,\r\n  users,\r\n} from '../actions/auth'\r\n\r\ntype User = {\r\n  email: string\r\n  verified: boolean\r\n  role: string\r\n  createdAt: string\r\n}\r\n\r\nexport type UserInfo = {\r\n  email: string\r\n  name: string\r\n  phone: string\r\n  country: string\r\n  city: string\r\n  street: string\r\n  zipCode: string\r\n  homeNumber: string\r\n  apartment: string\r\n}\r\n\r\nexport interface UserI {\r\n  role: 'admin' | 'subscriber'\r\n  verified: boolean\r\n  _id: string\r\n  email: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  userInfo?: UserInfo\r\n}\r\n\r\ninterface initialStateI {\r\n  user?: UserI\r\n  loading: boolean\r\n  successMessage: boolean | string\r\n  errorMessage: boolean | string\r\n  page: number\r\n  pages: number\r\n  users: null | User[]\r\n  passwordValidatorError: boolean | string\r\n  passwordValidatorSuccess: boolean | string\r\n  resetPasswordError: boolean | string\r\n  resetPasswordSuccess: boolean | string\r\n}\r\n\r\nconst initialState: initialStateI = {\r\n  user: window.localStorage.getItem('user')\r\n    ? JSON.parse(window.localStorage.getItem('user') as string)\r\n    : undefined,\r\n  loading: false,\r\n  successMessage: false,\r\n  errorMessage: false,\r\n  page: 1,\r\n  pages: 0,\r\n  users: null,\r\n  passwordValidatorError: false,\r\n  passwordValidatorSuccess: false,\r\n  resetPasswordError: false,\r\n  resetPasswordSuccess: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    resetError: (state) => {\r\n      state.errorMessage = false\r\n    },\r\n    setPage: (state, action) => {\r\n      state.page = action.payload\r\n    },\r\n    successReset: (state) => {\r\n      state.successMessage = false\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      //register\r\n      .addCase(register.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(register.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //login\r\n      .addCase(login.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.user = action.payload.data.user\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(login.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //logout\r\n      .addCase(logout.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(logout.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.user = undefined\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(logout.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get users\r\n      .addCase(users.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(users.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.users = action.payload.data.users\r\n        state.pages = action.payload.data.pages\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(users.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //update details\r\n      .addCase(updateDetails.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(updateDetails.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.user = action.payload.data.user\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(updateDetails.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //update details\r\n      .addCase(forgotPassowrd.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(forgotPassowrd.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(forgotPassowrd.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //reset password validation\r\n      .addCase(passwordValidation.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(passwordValidation.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.passwordValidatorSuccess = action.payload.data.message\r\n        state.passwordValidatorError = false\r\n      })\r\n      .addCase(\r\n        passwordValidation.rejected,\r\n        (state, action: PayloadAction<any>) => {\r\n          state.loading = false\r\n          action.payload.errors\r\n            ? (state.passwordValidatorError = action.payload.errors[0].msg)\r\n            : (state.passwordValidatorError = action.payload.message)\r\n        }\r\n      )\r\n      //reset password action\r\n      .addCase(passwordAction.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(passwordAction.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.resetPasswordSuccess = action.payload.data.message\r\n        state.resetPasswordError = false\r\n      })\r\n      .addCase(passwordAction.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.resetPasswordError = action.payload.errors[0].msg)\r\n          : (state.resetPasswordError = action.payload.message)\r\n      })\r\n  },\r\n})\r\n\r\nexport const { resetError, setPage, successReset } = authSlice.actions\r\nexport default authSlice.reducer\r\n","import { Paper } from '@material-ui/core'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport { useHistory } from 'react-router'\r\nimport HandleChange from '../../hooks/HandleChange'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../../redux/actions/auth'\r\nimport { useState } from 'react'\r\nimport ShowError from '../../hooks/ShowError'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\nimport { resetError } from '../../redux/reducers/authSlice'\r\nimport Seo from '../../hooks/Seo'\r\n\r\ntype Values = {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst Login = () => {\r\n  const classes = styles()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { user, errorMessage, loading } = useSelector(\r\n    (state: RootState) => state.auth\r\n  )\r\n\r\n  const [values, setValues] = useState<Values>({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const { email, password } = values\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(login(values))\r\n  }\r\n\r\n  if (user && user.role === 'subscriber') {\r\n    history.push('/user/dashboard')\r\n  }\r\n\r\n  if (user && user.role === 'admin') {\r\n    history.push('/admin/dashboard')\r\n  }\r\n\r\n  const resetAuthError = () => {\r\n    dispatch(resetError())\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => resetAuthError()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Seo title='Login page' name='Login' />\r\n      <Paper className={classes.mainContainer}>\r\n        <h1 className={classes.title}>Login Page</h1>\r\n\r\n        <form className={classes.formContainer} onSubmit={handleSubmit}>\r\n          <TextField\r\n            className={classes.formElement}\r\n            label='Email'\r\n            name='email'\r\n            type='email'\r\n            required={true}\r\n            value={email}\r\n            onChange={(e) => HandleChange(e, values, setValues)}\r\n          />\r\n          <TextField\r\n            className={classes.formElement}\r\n            label='Password'\r\n            name='password'\r\n            type='password'\r\n            required={true}\r\n            value={password}\r\n            onChange={(e) => HandleChange(e, values, setValues)}\r\n          />\r\n\r\n          <Button\r\n            className={classes.formElement}\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Loading...' : 'Login'}\r\n          </Button>\r\n        </form>\r\n\r\n        {errorMessage && ShowError(errorMessage)}\r\n\r\n        <div className={classes.footerDiv}>\r\n          <p className={classes.text}>\r\n            Don't have an account? click\r\n            <span\r\n              onClick={() => history.push('/register')}\r\n              className={classes.linkSpan}\r\n            >\r\n              here\r\n            </span>\r\n            to register\r\n          </p>\r\n          <p className={classes.text}>\r\n            Forgot password? click\r\n            <span\r\n              onClick={() => history.push('/forgot-password')}\r\n              className={classes.linkSpan}\r\n            >\r\n              here\r\n            </span>\r\n            to get password reset link\r\n          </p>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  mainContainer: {\r\n    width: '500px',\r\n    maxWidth: '95%',\r\n    margin: '30px auto',\r\n    minHeight: '500px',\r\n\r\n    padding: '10px',\r\n    position: 'relative',\r\n  },\r\n\r\n  formContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  formElement: {\r\n    margin: '18px 0',\r\n    width: '300px',\r\n    maxWidth: '95%',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n    fontSize: '16px',\r\n  },\r\n\r\n  footerDiv: {\r\n    marginTop: '30px',\r\n  },\r\n\r\n  linkSpan: {\r\n    color: '#FF69B4',\r\n    cursor: 'pointer',\r\n    margin: '0 4px',\r\n  },\r\n\r\n  title: {\r\n    textAlign: 'center',\r\n    margin: '15px 0',\r\n  },\r\n\r\n  text: {\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { Paper } from '@material-ui/core'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport { useHistory } from 'react-router'\r\nimport { useEffect, useState } from 'react'\r\nimport { register } from '../../redux/actions/auth'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport HandleChange from '../../hooks/HandleChange'\r\nimport { RootState } from '../../redux/store'\r\nimport ShowSuccess from '../../hooks/ShowSuccess'\r\nimport ShowError from '../../hooks/ShowError'\r\nimport { resetError } from '../../redux/reducers/authSlice'\r\nimport Seo from '../../hooks/Seo'\r\n\r\nconst Register = () => {\r\n  const classes = styles()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { auth } = useSelector((state: RootState) => state)\r\n  const { loading, successMessage, errorMessage, user } = auth\r\n\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  })\r\n\r\n  const { email, password, confirmPassword } = values\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(register(values))\r\n  }\r\n\r\n  if (email !== '' && successMessage) {\r\n    setValues({ email: '', password: '', confirmPassword: '' })\r\n  }\r\n\r\n  if (user) {\r\n    history.push('/dashboard')\r\n  }\r\n\r\n  const resetAuthError = () => {\r\n    dispatch(resetError())\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => resetAuthError()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Seo title='Register page' name='Register' />\r\n\r\n      <Paper className={classes.mainContainer}>\r\n        <h1 className={classes.title}>Register Page</h1>\r\n\r\n        <form className={classes.formContainer} onSubmit={handleSubmit}>\r\n          <TextField\r\n            className={classes.formElement}\r\n            label='Email'\r\n            name='email'\r\n            type='email'\r\n            required={true}\r\n            value={email}\r\n            onChange={(e) => HandleChange(e, values, setValues)}\r\n          />\r\n          <TextField\r\n            className={classes.formElement}\r\n            label='Password'\r\n            name='password'\r\n            type='password'\r\n            required={true}\r\n            value={password}\r\n            onChange={(e) => HandleChange(e, values, setValues)}\r\n          />\r\n\r\n          <TextField\r\n            className={classes.formElement}\r\n            label='Confirm password'\r\n            name='confirmPassword'\r\n            type='password'\r\n            required={true}\r\n            value={confirmPassword}\r\n            onChange={(e) => HandleChange(e, values, setValues)}\r\n          />\r\n\r\n          <Button\r\n            className={classes.formElement}\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Loading...' : 'Register'}\r\n          </Button>\r\n        </form>\r\n\r\n        {successMessage && ShowSuccess(successMessage)}\r\n        {errorMessage && ShowError(errorMessage)}\r\n\r\n        <div className={classes.footerDiv}>\r\n          <p className={classes.text}>\r\n            Already have a user? click\r\n            <span\r\n              onClick={() => history.push('/login')}\r\n              className={classes.linkSpan}\r\n            >\r\n              here\r\n            </span>\r\n            to Login\r\n          </p>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  main: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: '20px 0',\r\n  },\r\n\r\n  FiltersContainer: {\r\n    maxWidth: '95%',\r\n    width: '1280px',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    padding: '7px',\r\n    marign: '15px auto',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  textField: {\r\n    width: '95%',\r\n    maxWidth: '250px',\r\n    margin: '15px',\r\n  },\r\n\r\n  radioButtonsContainer: {\r\n    width: '95%',\r\n    maxWidth: '400px',\r\n    margin: '15px 20px',\r\n  },\r\n\r\n  radiosDiv: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n} from '@material-ui/core'\r\nimport { Paper } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport styles from './styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { categories as GetCategories } from '../../redux/actions/categories'\r\nimport {\r\n  setCategory,\r\n  setProductToDisplay,\r\n  setSort,\r\n} from '../../redux/reducers/productSlice'\r\n\r\nconst Filters = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { queryObj } = useSelector((state: RootState) => state.product)\r\n  const { categories, loading } = useSelector(\r\n    (state: RootState) => state.category\r\n  )\r\n\r\n  useEffect(() => {\r\n    dispatch(GetCategories())\r\n  }, [])\r\n\r\n  return (\r\n    <main className={classes.main}>\r\n      <Paper elevation={3} className={classes.FiltersContainer}>\r\n        <FormControl className={classes.textField}>\r\n          <InputLabel id='category'>Categories</InputLabel>\r\n          <Select\r\n            value={queryObj.category ? queryObj.category : 'all'}\r\n            name='category'\r\n            labelId='category'\r\n            onChange={(e) =>\r\n              dispatch(\r\n                setCategory(e.target.value === 'all' ? '' : e.target.value)\r\n              )\r\n            }\r\n          >\r\n            <MenuItem disabled>Select Category</MenuItem>\r\n            <MenuItem value={'all'}>All Products (Default)</MenuItem>\r\n            {!loading &&\r\n              categories.map((c, i) => (\r\n                <MenuItem key={i} value={c._id}>\r\n                  {c.name}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.textField}>\r\n          <InputLabel id='sort'>Sort By</InputLabel>\r\n          <Select\r\n            onChange={(e) => dispatch(setSort(e.target.value))}\r\n            value={queryObj.sort}\r\n            name='sort'\r\n            labelId='sort'\r\n          >\r\n            <MenuItem disabled>Select Sorting</MenuItem>\r\n            <MenuItem value='createdAt'>Newest Products (Default)</MenuItem>\r\n            <MenuItem value='high price'>Highest Price</MenuItem>\r\n            <MenuItem value='low price'>Lowest Price</MenuItem>\r\n            <MenuItem value='sold'>Best Sellers</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <div className={classes.radioButtonsContainer}>\r\n          <h5>Display:</h5>\r\n          <RadioGroup\r\n            value={queryObj.productsToDisplay}\r\n            onChange={(e) => dispatch(setProductToDisplay(e.target.value))}\r\n            aria-label='display'\r\n            name='display'\r\n          >\r\n            <div className={classes.radiosDiv}>\r\n              <FormControlLabel\r\n                value='all'\r\n                control={<Radio />}\r\n                label='All Products'\r\n              />\r\n              <FormControlLabel\r\n                value='inStock'\r\n                control={<Radio />}\r\n                label='In Stock'\r\n              />\r\n              <FormControlLabel\r\n                value='outStock'\r\n                control={<Radio />}\r\n                label='Out of Stock'\r\n              />\r\n            </div>\r\n          </RadioGroup>\r\n        </div>\r\n      </Paper>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  linkSpan: {\r\n    color: '#20B2AA',\r\n    cursor: 'pointer',\r\n    margin: '0 7px',\r\n  },\r\n\r\n  title: {\r\n    margin: '30px 0',\r\n    textDecoration: 'underline',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { Typography } from '@material-ui/core'\r\nimport styles from './styles'\r\n\r\ntype Props = {\r\n  content: string\r\n}\r\n\r\nconst Title: React.FC<Props> = ({ content }) => {\r\n  const classes = styles()\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h5' align='center' className={classes.title}>\r\n        {content}\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Title\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  productsContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    padding: '10px',\r\n    justifyContent: 'center',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  root: {\r\n    width: 350,\r\n    maxWidth: '95%',\r\n    height: 'fit-content',\r\n    backgroundColor: 'white',\r\n    boxShadow: '',\r\n    margin: '15px 10px',\r\n    border: '1px solid ',\r\n    borderColor: '#e1f5fe',\r\n    '&:hover': {\r\n      boxShadow:\r\n        'rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px',\r\n    },\r\n  },\r\n\r\n  productName: {\r\n    padding: '7px',\r\n    cursor: 'pointer',\r\n  },\r\n\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n  },\r\n\r\n  button: {\r\n    width: '95%',\r\n    maxWidth: '250px',\r\n    margin: '7px auto',\r\n  },\r\n\r\n  productInfo: {\r\n    padding: '5px',\r\n    margin: '2px 0',\r\n  },\r\n\r\n  productSpan: {\r\n    fontWeight: 600,\r\n    marginLeft: '7px',\r\n    color: 'black',\r\n  },\r\n\r\n  inStockSpan: {\r\n    fontWeight: 600,\r\n    marginLeft: '7px',\r\n    color: 'green',\r\n  },\r\n\r\n  outStockSpan: {\r\n    fontWeight: 600,\r\n    marginLeft: '7px',\r\n    color: 'crimson',\r\n  },\r\n\r\n  text: {\r\n    color: 'grayText',\r\n    fontSize: '16px',\r\n    textAlign: 'center',\r\n  },\r\n\r\n  productLink: {\r\n    cursor: 'pointer',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport styles from './styles'\r\n\r\ntype Category = {\r\n  _id: string\r\n  name: string\r\n}\r\n\r\ntype Props = {\r\n  category: Category\r\n  price: number\r\n  qty: number\r\n}\r\n\r\nconst CardInfo: React.FC<Props> = (props: Props) => {\r\n  const { category, price, qty } = props\r\n  const classes = styles()\r\n\r\n  return (\r\n    <div className={classes.productInfo}>\r\n      <p className={classes.text}>\r\n        Price:{<span className={classes.productSpan}>₪{price}</span>}\r\n      </p>\r\n      <p className={classes.text}>\r\n        Category:{<span className={classes.productSpan}>{category.name}</span>}\r\n      </p>\r\n      <p className={classes.text}>\r\n        Status:\r\n        {qty > 0 ? (\r\n          <span className={classes.inStockSpan}>In stock</span>\r\n        ) : (\r\n          <span className={classes.outStockSpan}>Out of stock</span>\r\n        )}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardInfo\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport type cartObj = {\r\n  products: any[]\r\n  delivery: string\r\n  paymentMethod: string\r\n}\r\n\r\nexport const saveCartToDB = async (cart: cartObj) =>\r\n  await axios.post(`${server_url}/cart/save-cart`, { cart })\r\n\r\nexport const getCartFromDb = async (id: string) =>\r\n  await axios.get(`${server_url}/cart/get-cart/${id}`)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { cartObj, getCartFromDb, saveCartToDB } from '../api/cart'\r\nimport { AxiosResponse } from 'axios'\r\nimport { CartFromDb } from '../reducers/cartSlice'\r\n\r\nexport const saveCart = createAsyncThunk(\r\n  'auth/saveCart',\r\n  async (obj: cartObj, { rejectWithValue }) => {\r\n    type registerResponse = {\r\n      message: string\r\n      cartId: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<registerResponse> = await saveCartToDB(obj)\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getCart = createAsyncThunk(\r\n  'auth/getCart',\r\n  async (id: string, { rejectWithValue }) => {\r\n    type registerResponse = {\r\n      cart: CartFromDb\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<registerResponse> = await getCartFromDb(id)\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { getCart, saveCart } from '../actions/cart'\r\n\r\ntype Image = {\r\n  url: string\r\n  public_id: string\r\n}\r\n\r\ntype Category = {\r\n  _id: string\r\n  name: string\r\n}\r\n\r\nexport type Product = {\r\n  _id: string\r\n  name: string\r\n  images?: Image[]\r\n  price: number\r\n  quantity: number\r\n  sold: number\r\n  description: string\r\n  category: Category\r\n  createdAt: string\r\n  updatedAt: string\r\n  count: number\r\n}\r\n\r\nexport type ProductFromDb = {\r\n  product: Product\r\n  price: number\r\n  count: number\r\n}\r\n\r\nexport type Cart = {\r\n  products: Product[]\r\n  deliveryOption: string\r\n  paymentMethod: string\r\n  cartTotal: number\r\n  orderedBy: string\r\n}\r\n\r\nexport type CartFromDb = {\r\n  products: ProductFromDb[]\r\n  deliveryOption: string\r\n  paymentMethod: string\r\n  cartTotal: number\r\n  orderedBy: string\r\n}\r\n\r\ninterface InitialStateI {\r\n  products: Product[] | null\r\n  delivery: string\r\n  paymentMethod: string\r\n  loading: boolean\r\n  successMessage: boolean | string\r\n  errorMessage: boolean | string\r\n  cartFromDb: CartFromDb | undefined\r\n  cartId: string\r\n}\r\n\r\nlet cartFromLocalstorage = localStorage.getItem('cart')\r\n\r\nconst initialState: InitialStateI = {\r\n  products:\r\n    cartFromLocalstorage !== null ? JSON.parse(cartFromLocalstorage) : null,\r\n  delivery: '',\r\n  paymentMethod: '',\r\n  loading: false,\r\n  successMessage: false,\r\n  errorMessage: false,\r\n  cartFromDb: undefined,\r\n  cartId: '',\r\n}\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    setCart: (state, action) => {\r\n      state.products = action.payload\r\n    },\r\n    setDelivey: (state, action) => {\r\n      state.delivery = action.payload\r\n    },\r\n    setPaymentMethod: (state, action) => {\r\n      state.paymentMethod = action.payload\r\n    },\r\n    clearSuccess: (state) => {\r\n      state.successMessage = false\r\n    },\r\n    resetCart: (state) => {\r\n      state.products = null\r\n      state.cartFromDb = undefined\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      //save cart to db\r\n      .addCase(saveCart.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(saveCart.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = action.payload.data.message\r\n        state.cartId = action.payload.data.cartId\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(saveCart.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      // get cart from backend\r\n      .addCase(getCart.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(getCart.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.cartFromDb = action.payload.data.cart\r\n        state.successMessage = action.payload.data.message\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(getCart.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  setCart,\r\n  setDelivey,\r\n  setPaymentMethod,\r\n  clearSuccess,\r\n  resetCart,\r\n} = cartSlice.actions\r\n\r\nexport default cartSlice.reducer\r\n","import { Button, Tooltip } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { setCart } from '../../redux/reducers/cartSlice'\r\nimport _ from 'lodash'\r\nimport { useState } from 'react'\r\nimport { addToWishlist } from '../../redux/actions/product'\r\n\r\ntype Image = {\r\n  url: string | undefined\r\n}\r\n\r\ninterface Product {\r\n  _id: string\r\n  name: string\r\n  images: Image[]\r\n  category: {\r\n    _id: string\r\n    name: string\r\n  }\r\n  price: number\r\n  quantity: number\r\n  sold: number\r\n  description: string\r\n  wishlist: string[]\r\n}\r\n\r\ninterface Props {\r\n  product: Product\r\n}\r\n\r\nconst ActionButtons: React.FC<Props> = ({ product }) => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const { user } = useSelector((state: RootState) => state.auth)\r\n\r\n  const handleAddToCart = () => {\r\n    setOpen(true)\r\n    let cart = []\r\n    let cartVariable = window.localStorage.getItem('cart')\r\n    if (cartVariable !== null) {\r\n      cart = JSON.parse(cartVariable)\r\n    }\r\n\r\n    cart.push({ ...product, count: 1 })\r\n    //remove duplicates\r\n    let uniqueItems = _.uniqWith(cart, _.isEqual)\r\n\r\n    window.localStorage.setItem('cart', JSON.stringify(uniqueItems))\r\n    dispatch(setCart(uniqueItems))\r\n  }\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [wishlistStatus, setWishlistStatus] = useState(\r\n    user && product.wishlist.includes(user._id)\r\n  )\r\n\r\n  const handleLeave = () => {\r\n    setTimeout(() => setOpen(false), 1000)\r\n  }\r\n\r\n  const handleAddToWishlist = () => {\r\n    dispatch(addToWishlist(product._id))\r\n    setWishlistStatus(!wishlistStatus)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        paddingBottom: '20px',\r\n      }}\r\n    >\r\n      <Tooltip\r\n        PopperProps={{\r\n          disablePortal: true,\r\n        }}\r\n        onMouseLeave={handleLeave}\r\n        open={open}\r\n        disableFocusListener\r\n        disableHoverListener\r\n        disableTouchListener\r\n        title={\r\n          <>\r\n            <p style={{ padding: '5px 10px', fontSize: '16px' }}>\r\n              Product Added to cart\r\n            </p>\r\n          </>\r\n        }\r\n        placement='top-start'\r\n      >\r\n        <Button\r\n          endIcon={<ShoppingCartIcon />}\r\n          className={classes.button}\r\n          variant='contained'\r\n          color='primary'\r\n          onClick={handleAddToCart}\r\n          disabled={product.quantity === 0}\r\n        >\r\n          Add to cart\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      <Button\r\n        onClick={handleAddToWishlist}\r\n        endIcon={<FavoriteBorderIcon />}\r\n        className={classes.button}\r\n        variant={wishlistStatus ? 'contained' : 'outlined'}\r\n        color='secondary'\r\n        disabled={!user}\r\n      >\r\n        {wishlistStatus ? 'Remove from Wishlist' : 'Add to Wishlist'}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActionButtons\r\n","import styles from './styles'\r\nimport CardInfo from './CardInfo'\r\nimport { Typography } from '@material-ui/core'\r\nimport ActionButtons from './ActionButtons'\r\nimport { useHistory } from 'react-router'\r\n\r\ntype Image = {\r\n  url: string | undefined\r\n}\r\n\r\ninterface IProduct {\r\n  _id: string\r\n  name: string\r\n  images: Image[]\r\n  category: {\r\n    _id: string\r\n    name: string\r\n  }\r\n  price: number\r\n  quantity: number\r\n  sold: number\r\n  description: string\r\n  wishlist: string[]\r\n}\r\n\r\ninterface IProps {\r\n  product: IProduct\r\n}\r\n\r\nconst ProductCard: React.FC<IProps> = ({ product }) => {\r\n  const classes = styles()\r\n  const productFromProps = product\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <img\r\n        onClick={() => history.push(`/product/${product._id}`)}\r\n        className={classes.productLink}\r\n        src={\r\n          !product.images.length\r\n            ? `https://via.placeholder.com/500x500?text=No+Images+Yet..`\r\n            : product.images[0].url\r\n        }\r\n        alt='Product img'\r\n        style={{ width: '100%' }}\r\n      />\r\n      <Typography\r\n        onClick={() => history.push(`/product/${product._id}`)}\r\n        className={classes.productName}\r\n        variant='h5'\r\n        align='center'\r\n      >\r\n        {product.name}\r\n      </Typography>\r\n      <CardInfo\r\n        category={product.category}\r\n        price={product.price}\r\n        qty={product.quantity}\r\n      />\r\n      <ActionButtons product={productFromProps} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '20px',\r\n    alignItems: 'center',\r\n    margin: '10px 0',\r\n  },\r\n}))\r\n\r\ninterface Props {\r\n  page: number\r\n  pages: number\r\n  setPage: (value: number) => void\r\n}\r\n\r\nexport default function PaginationControll({ page, pages, setPage }: Props) {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    dispatch(setPage(value))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination count={pages} page={page} onChange={handleChange} />\r\n    </div>\r\n  )\r\n}\r\n","import styles from '../styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../../redux/store'\r\nimport ProductCard from '../../../components/product-card/ProductCard'\r\nimport Loader from '../../../components/loader'\r\nimport { useEffect } from 'react'\r\nimport { products as getProducts } from '../../../redux/actions/product'\r\nimport PaginationControll from '../../../components/pagination/PaginationControll'\r\nimport { setPage } from '../../../redux/reducers/productSlice'\r\n\r\nconst ProductsContainer = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const { products, pages, page, loading, queryObj } = useSelector(\r\n    (state: RootState) => state.product\r\n  )\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts({ page, queryObj }))\r\n    window.scrollTo(0, 0)\r\n  }, [page, queryObj])\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.productsContainer}>\r\n        {loading && <Loader />}\r\n        {!loading && products.length === 0 && <p>No products found...</p>}\r\n        {!loading &&\r\n          products.length > 0 &&\r\n          products.map((p, i) => <ProductCard key={i} product={p} />)}\r\n      </div>\r\n\r\n      {!loading && pages > 1 && (\r\n        <div>\r\n          <PaginationControll page={page} pages={pages} setPage={setPage} />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductsContainer\r\n","import Filters from '../../components/filters-canvas/Filters'\r\nimport Title from '../../components/titles/Title'\r\nimport ProductsContainer from './components/ProductsContainer'\r\nimport Seo from '../../hooks/Seo'\r\n\r\nconst Shop = () => {\r\n  return (\r\n    <div>\r\n      <Seo title='Shop page' name='Shop' />\r\n      <Title content='Categories and Filters' />\r\n      <Filters />\r\n\r\n      <ProductsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Shop\r\n","import { Typography } from '@material-ui/core'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '55px',\r\n        backgroundColor: '#181818',\r\n        position: 'sticky',\r\n        top: '100%',\r\n        boxShadow:\r\n          'rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px',\r\n      }}\r\n    >\r\n      <Typography\r\n        align='center'\r\n        variant='subtitle1'\r\n        style={{ color: 'white', padding: '5px' }}\r\n      >\r\n        Copyright © by Michael Donchenko\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  mainTitle: {\r\n    margin: '30px',\r\n  },\r\n\r\n  mainContainer: {\r\n    margin: '30px 0',\r\n    width: '100%',\r\n  },\r\n\r\n  titleIcon: {\r\n    fontSize: '34px',\r\n    marginLeft: '10px',\r\n  },\r\n\r\n  title: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginBottom: '15px',\r\n    color: 'gray',\r\n  },\r\n\r\n  gridItem: {\r\n    padding: '7px',\r\n  },\r\n\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: '#FF69B4',\r\n  },\r\n\r\n  optionsSection: {\r\n    margin: '20px 0 10px 0',\r\n    padding: '10px',\r\n  },\r\n\r\n  cartSummary: {\r\n    padding: '10px 15px',\r\n  },\r\n\r\n  paragraph: {\r\n    padding: '2px 5px',\r\n    fontSize: '18px',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n\r\n  checkoutButton: {\r\n    margin: '25px auto',\r\n    maxWidth: '100%',\r\n    width: '300px',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n    backgroundColor: 'green',\r\n    fontSize: '16px',\r\n    color: 'white',\r\n    '&:hover': {\r\n      backgroundColor: 'forestGreen',\r\n    },\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  table: {\r\n    maxWidth: '98%',\r\n    margin: '10px auto',\r\n  },\r\n\r\n  image: {\r\n    height: '80px',\r\n  },\r\n\r\n  deleteButton: {\r\n    color: 'white',\r\n    backgroundColor: '#c62828',\r\n    '&:hover': {\r\n      backgroundColor: '#b71c1c',\r\n    },\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import styles from './styles'\r\nimport {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TableCell,\r\n  TableBody,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { Button } from '@material-ui/core'\r\nimport { setCart } from '../../redux/reducers/cartSlice'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\ninterface Product {\r\n  _id: string\r\n  name: string\r\n  category: {\r\n    _id: string\r\n    name: string\r\n  }\r\n  price: number\r\n  quantity: number\r\n  sold: number\r\n  description: string\r\n  count: number\r\n}\r\n\r\nconst CartTable = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { products } = useSelector((state: RootState) => state.cart)\r\n\r\n  const handleRemove = (product: Product) => {\r\n    const filtered = products?.filter((item) => item._id !== product._id)\r\n\r\n    if (!filtered?.length) {\r\n      window.localStorage.removeItem('cart')\r\n      dispatch(setCart(null))\r\n    } else {\r\n      window.localStorage.setItem('cart', JSON.stringify(filtered))\r\n      dispatch(setCart(filtered))\r\n    }\r\n  }\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\r\n    p: Product\r\n  ) => {\r\n    let cart = localStorage.getItem('cart')\r\n    let parsedCart: any[] = []\r\n\r\n    if (typeof cart === 'string') {\r\n      parsedCart = JSON.parse(cart)\r\n    }\r\n\r\n    parsedCart.map((product, i) => {\r\n      if (product._id === p._id) {\r\n        parsedCart[i].count = Number(e.target.value)\r\n\r\n        if (parsedCart[i].count > p.quantity) {\r\n          return //count cannot be bigger than quantity\r\n        }\r\n\r\n        if (parsedCart[i].count < 1) {\r\n          return //count cannt be less than 1\r\n        }\r\n\r\n        localStorage.setItem('cart', JSON.stringify(parsedCart))\r\n\r\n        dispatch(setCart(parsedCart))\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <TableContainer className={classes.table} component={Paper}>\r\n      <Table aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Image</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Category</TableCell>\r\n            <TableCell>Price</TableCell>\r\n            <TableCell>Quantity</TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {products?.map((p, i) => (\r\n            <TableRow key={i}>\r\n              <TableCell>\r\n                {!p.images?.length ? (\r\n                  'No yet images'\r\n                ) : (\r\n                  <img\r\n                    className={classes.image}\r\n                    src={p.images[0].url}\r\n                    alt='error'\r\n                  />\r\n                )}\r\n              </TableCell>\r\n              <TableCell>{p.name}</TableCell>\r\n              <TableCell>{p.category.name}</TableCell>\r\n              <TableCell>{p.price}₪</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  onChange={(e) => handleChange(e, p)}\r\n                  value={p.count}\r\n                  type='number'\r\n                ></TextField>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Button\r\n                  className={classes.deleteButton}\r\n                  startIcon={<DeleteIcon />}\r\n                  onClick={(e) => handleRemove(p)}\r\n                  variant='contained'\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default CartTable\r\n","import {\r\n  Typography,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from '@material-ui/core'\r\nimport styles from '../styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../redux/store'\r\nimport { setDelivey } from '../../../redux/reducers/cartSlice'\r\n\r\nconst DeliveryOptions = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { delivery } = useSelector((state: RootState) => state.cart)\r\n\r\n  return (\r\n    <div className={classes.optionsSection}>\r\n      <Typography align='center' variant='h5'>\r\n        Delivery Options\r\n      </Typography>\r\n\r\n      <div className={classes.optionsSection}>\r\n        <FormControl component='fieldset'>\r\n          <RadioGroup value={delivery} aria-label='delivery'>\r\n            <FormControlLabel\r\n              value='regular'\r\n              control={\r\n                <Radio onChange={(e) => dispatch(setDelivey(e.target.value))} />\r\n              }\r\n              label='Regular, registered with tracking number: ₪ 16'\r\n            />\r\n            <FormControlLabel\r\n              value='boxit'\r\n              control={\r\n                <Radio onChange={(e) => dispatch(setDelivey(e.target.value))} />\r\n              }\r\n              label='Boxit: ₪ 26'\r\n            />\r\n            <FormControlLabel\r\n              value='express'\r\n              control={\r\n                <Radio onChange={(e) => dispatch(setDelivey(e.target.value))} />\r\n              }\r\n              label='Express delivery (Two days delivery to your house, after the package is sent): ₪ 59'\r\n            />\r\n            <FormControlLabel\r\n              value='self-pick'\r\n              control={\r\n                <Radio onChange={(e) => dispatch(setDelivey(e.target.value))} />\r\n              }\r\n              label='Self Pickup (Tel-Aviv Israel)'\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeliveryOptions\r\n","import {\r\n  Typography,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from '@material-ui/core'\r\nimport styles from '../styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../redux/store'\r\nimport { setPaymentMethod } from '../../../redux/reducers/cartSlice'\r\n\r\nconst PaymentOptions = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { paymentMethod } = useSelector((state: RootState) => state.cart)\r\n\r\n  return (\r\n    <div className={classes.optionsSection}>\r\n      <Typography align='center' variant='h5'>\r\n        Payment Options\r\n      </Typography>\r\n\r\n      <div className={classes.optionsSection}>\r\n        <FormControl component='fieldset'>\r\n          <RadioGroup value={paymentMethod} aria-label='delivery'>\r\n            <FormControlLabel\r\n              value='bank'\r\n              control={\r\n                <Radio\r\n                  onChange={(e) => dispatch(setPaymentMethod(e.target.value))}\r\n                />\r\n              }\r\n              label='Direct bank transfer'\r\n            />\r\n            <FormControlLabel\r\n              value='phone'\r\n              control={\r\n                <Radio\r\n                  onChange={(e) => dispatch(setPaymentMethod(e.target.value))}\r\n                />\r\n              }\r\n              label='Pay by phone (credit card, bit or any other)'\r\n            />\r\n            <FormControlLabel\r\n              value='paypal'\r\n              control={\r\n                <Radio\r\n                  onChange={(e) => dispatch(setPaymentMethod(e.target.value))}\r\n                />\r\n              }\r\n              label='PayPal (+5% to total price)'\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PaymentOptions\r\n","import { Typography, Button } from '@material-ui/core'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { saveCart } from '../../../redux/actions/cart'\r\nimport { RootState } from '../../../redux/store'\r\nimport styles from '../styles'\r\nimport { useHistory } from 'react-router'\r\nimport { useEffect } from 'react'\r\nimport { clearSuccess } from '../../../redux/reducers/cartSlice'\r\n\r\nconst CartSummary = () => {\r\n  const { products, delivery, paymentMethod, successMessage, loading, cartId } =\r\n    useSelector((state: RootState) => state.cart)\r\n  const { user } = useSelector((state: RootState) => state.auth)\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const getProductsTotal = () => {\r\n    let productsTotal = 0\r\n    let total = 0\r\n    let deliveyPrice =\r\n      delivery === 'regular'\r\n        ? 16\r\n        : delivery === 'boxit'\r\n        ? 26\r\n        : delivery === 'express'\r\n        ? 59\r\n        : 0\r\n\r\n    products &&\r\n      products.reduce((currentValue, nextValue) => {\r\n        return (productsTotal = Number(\r\n          currentValue + nextValue.price * nextValue.count\r\n        ))\r\n      }, 0)\r\n\r\n    if (delivery) {\r\n      total = productsTotal + deliveyPrice\r\n    }\r\n\r\n    if (paymentMethod === 'paypal') {\r\n      total = total * 1.05\r\n    }\r\n\r\n    return Math.round(total)\r\n  }\r\n\r\n  const handleClear = () => {\r\n    dispatch(clearSuccess())\r\n  }\r\n\r\n  const handelSubmit = () => {\r\n    if (products !== null) {\r\n      dispatch(saveCart({ products, delivery, paymentMethod }))\r\n    }\r\n  }\r\n\r\n  if (successMessage === 'Cart created succefully on DB' && cartId !== '') {\r\n    history.push(`/checkout/${cartId}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => handleClear()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.cartSummary}>\r\n      <Typography className={classes.mainTitle} align='center' variant='h4'>\r\n        Cart Summary:\r\n      </Typography>\r\n      <hr></hr>\r\n\r\n      <Typography className={classes.title} variant='h5' align='center'>\r\n        Products:\r\n      </Typography>\r\n\r\n      {products?.map((p, i) => (\r\n        <p className={classes.paragraph} key={i}>\r\n          {`${p.name} X ${p.count} = ${Math.round(p.price * p.count)} ₪`}\r\n        </p>\r\n      ))}\r\n\r\n      <hr></hr>\r\n      <Typography className={classes.title} variant='h5' align='center'>\r\n        Deliver Price:\r\n      </Typography>\r\n\r\n      {delivery && (\r\n        <p className={classes.paragraph}>\r\n          {delivery === 'regular'\r\n            ? '16 ₪'\r\n            : delivery === 'boxit'\r\n            ? '26 ₪'\r\n            : delivery === 'express'\r\n            ? '59 ₪'\r\n            : 'Free'}\r\n        </p>\r\n      )}\r\n\r\n      <hr></hr>\r\n\r\n      <Typography className={classes.title} variant='h5' align='center'>\r\n        Payment Fee:\r\n      </Typography>\r\n\r\n      {paymentMethod && (\r\n        <p className={classes.paragraph}>\r\n          {paymentMethod === 'paypal' ? '+ 5%' : 'No payment fee'}\r\n        </p>\r\n      )}\r\n\r\n      <hr></hr>\r\n\r\n      <Typography variant='h5' align='center'>\r\n        Total: {getProductsTotal()} ₪\r\n      </Typography>\r\n\r\n      {!user ? (\r\n        <p className={classes.paragraph}>\r\n          Note: Please <Link to='/login'>Login</Link> in order to continue to\r\n          checkout\r\n        </p>\r\n      ) : (\r\n        <Button\r\n          variant='contained'\r\n          className={classes.checkoutButton}\r\n          disabled={!products?.length || !paymentMethod || !delivery}\r\n          onClick={handelSubmit}\r\n        >\r\n          {loading ? 'Loading...' : 'Continue to checkout'}\r\n        </Button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartSummary\r\n","import { Grid, Typography } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport CartTable from '../../components/tables/CartTable'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { Link } from 'react-router-dom'\r\nimport DeliveryOptions from './components/DeliveryOptions'\r\nimport PaymentOptions from './components/PaymentOptions'\r\nimport CartSummary from './components/CartSummary'\r\nimport Seo from '../../hooks/Seo'\r\n\r\nconst Cart = () => {\r\n  const classes = styles()\r\n  const { products } = useSelector((state: RootState) => state.cart)\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Seo title='Cart page' name='Cart' />\r\n\r\n      <Typography align='center' className={classes.mainTitle} variant='h4'>\r\n        Your Cart <ShoppingCartIcon className={classes.titleIcon} />\r\n      </Typography>\r\n\r\n      <Grid container>\r\n        <Grid item xs={12} md={8}>\r\n          {products === null ? (\r\n            <Typography variant='h6' align='center'>\r\n              Your cart is empty, click{' '}\r\n              <Link className={classes.link} to='/shop'>\r\n                here\r\n              </Link>{' '}\r\n              in order to continue shopping\r\n            </Typography>\r\n          ) : (\r\n            <>\r\n              <CartTable />\r\n              <DeliveryOptions />\r\n              <PaymentOptions />\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <CartSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  mainContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    maxWidth: '100%',\r\n  },\r\n\r\n  contentDiv: {\r\n    margin: '20px 0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n    padding: '12px',\r\n  },\r\n\r\n  mainHeader: {\r\n    margin: '15px 0',\r\n  },\r\n\r\n  successText: { textAlign: 'center', color: 'green' },\r\n  errorText: { textAlign: 'center', color: 'crimson' },\r\n})\r\n\r\nexport default styles\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  appLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: '#181818',\r\n    fontSize: '22px',\r\n    fontWeight: 500,\r\n    textDecoration: 'none',\r\n    padding: '0 3px',\r\n    textAlign: 'center',\r\n    margin: '10px auto',\r\n    width: '250px',\r\n    maxWidth: '95%',\r\n    border: '1px solid white',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      backgroundColor: '#D3D3D3',\r\n    },\r\n  },\r\n\r\n  logout: {},\r\n\r\n  icon: {\r\n    marginRight: '5px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { Typography } from '@material-ui/core'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './styles'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../../redux/actions/auth'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst AdminSidenav = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleLogout = () => {\r\n    history.push('/')\r\n    dispatch(logout())\r\n  }\r\n\r\n  const activeLinkStyles = {\r\n    border: '1px solid #181818',\r\n    backgroundColor: '#D3D3D3',\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: 'calc(100vh - 104px)',\r\n        width: '220px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <Typography align='center' variant='h5' style={{ margin: '20px auto' }}>\r\n        Admin Pannel\r\n      </Typography>\r\n\r\n      <NavLink\r\n        activeStyle={activeLinkStyles}\r\n        to='/admin/dashboard'\r\n        exact\r\n        className={classes.appLink}\r\n      >\r\n        Dashboard\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeStyle={activeLinkStyles}\r\n        to='/admin/orders'\r\n        exact\r\n        className={classes.appLink}\r\n      >\r\n        Orders\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeStyle={activeLinkStyles}\r\n        to='/admin/users'\r\n        exact\r\n        className={classes.appLink}\r\n      >\r\n        Users\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeStyle={activeLinkStyles}\r\n        to='/admin/categories'\r\n        exact\r\n        className={classes.appLink}\r\n      >\r\n        Categories\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeStyle={activeLinkStyles}\r\n        to='/admin/products'\r\n        exact\r\n        className={classes.appLink}\r\n      >\r\n        Products\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeStyle={activeLinkStyles}\r\n        to='/admin/create-product'\r\n        exact\r\n        className={classes.appLink}\r\n      >\r\n        Create Product\r\n      </NavLink>\r\n\r\n      <span\r\n        onClick={() => handleLogout()}\r\n        className={`${classes.appLink} ${classes.logout}`}\r\n      >\r\n        <ExitToAppIcon className={classes.icon} /> Logout\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminSidenav\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    padding: '10px',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  title: {\r\n    color: 'grayText',\r\n    margin: '10px 0',\r\n  },\r\n\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '10px',\r\n    maxWidth: '95%',\r\n  },\r\n\r\n  formElement: {\r\n    width: '250px',\r\n    maxWidth: '95%',\r\n    margin: '10px auto',\r\n  },\r\n\r\n  spanStyle: {\r\n    fontSize: '18px',\r\n    margin: '10px',\r\n    fontWeight: 600,\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      color: '#FF69B4',\r\n    },\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { Button } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport styles from './styles'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uploadBanner } from '../../redux/actions/admin'\r\n\r\ntype File = FileList | null\r\n\r\nconst UploadBanner = () => {\r\n  const classes = styles()\r\n  const [image, setImage] = useState<File>()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setImage(e.target.files)\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    if (image) {\r\n      Resizer.imageFileResizer(\r\n        image[0],\r\n        700,\r\n        700,\r\n        'auto',\r\n        100,\r\n        0,\r\n        (uri: any) => {\r\n          dispatch(uploadBanner(uri))\r\n        },\r\n        'base64'\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={classes.container} onSubmit={handleSubmit}>\r\n      <h2>Site banner</h2>\r\n      <input\r\n        onChange={handleChange}\r\n        className={classes.formElement}\r\n        type='file'\r\n        accept='image/*'\r\n      />\r\n\r\n      <Button\r\n        className={classes.formElement}\r\n        type='submit'\r\n        variant='contained'\r\n        color='primary'\r\n      >\r\n        Upload\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UploadBanner\r\n","import { Button } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport styles from './styles'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uploadProfile } from '../../redux/actions/admin'\r\n\r\ntype File = FileList | null\r\n\r\nconst UploadProfile = () => {\r\n  const classes = styles()\r\n  const [image, setImage] = useState<File>()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setImage(e.target.files)\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    if (image) {\r\n      Resizer.imageFileResizer(\r\n        image[0],\r\n        700,\r\n        700,\r\n        'auto',\r\n        100,\r\n        0,\r\n        (uri: any) => {\r\n          dispatch(uploadProfile(uri))\r\n        },\r\n        'base64'\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={classes.container} onSubmit={handleSubmit}>\r\n      <h2>Profile Image</h2>\r\n      <input\r\n        onChange={handleChange}\r\n        className={classes.formElement}\r\n        type='file'\r\n        accept='image/*'\r\n      />\r\n\r\n      <Button\r\n        className={classes.formElement}\r\n        type='submit'\r\n        variant='contained'\r\n        color='primary'\r\n      >\r\n        Upload\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UploadProfile\r\n","import { Typography } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport UploadBanner from './UploadBanner'\r\nimport UploadProfile from './UploadProfile'\r\nimport { useHistory } from 'react-router'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport Loader from '../loader'\r\nimport ShowSuccess from '../../hooks/ShowSuccess'\r\nimport ShowError from '../../hooks/ShowError'\r\nimport { useEffect } from 'react'\r\nimport {\r\n  resetSuccessMessage,\r\n  resetErrorMessage,\r\n} from '../../redux/reducers/adminSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst AdminDetailsSection = () => {\r\n  const classes = styles()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, errorMessage, successMessage } = useSelector(\r\n    (state: RootState) => state.admin\r\n  )\r\n\r\n  const resetMessages = () => {\r\n    dispatch(resetErrorMessage())\r\n    dispatch(resetSuccessMessage())\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => resetMessages()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Typography className={classes.title} variant='h5' align='center'>\r\n        Site Details\r\n      </Typography>\r\n\r\n      {loading && <Loader />}\r\n      {successMessage && ShowSuccess(successMessage)}\r\n      {errorMessage && ShowError(errorMessage)}\r\n\r\n      <div className={classes.mainContainer}>\r\n        <UploadBanner />\r\n\r\n        <UploadProfile />\r\n\r\n        <div className={classes.container}>\r\n          <span\r\n            onClick={() => history.push('/admin/upload-about-me-details')}\r\n            className={classes.spanStyle}\r\n          >\r\n            Upload About me details\r\n          </span>\r\n          <span\r\n            onClick={() => history.push('/admin/upload-site-rules')}\r\n            className={classes.spanStyle}\r\n          >\r\n            Upload Site policy rules\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminDetailsSection\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  container: {\r\n    height: 500,\r\n    padding: '10px',\r\n    width: '100%',\r\n    overflowY: 'scroll',\r\n  },\r\n\r\n  title: {\r\n    color: 'grayText',\r\n    margin: '10px 0',\r\n  },\r\n\r\n  message: {\r\n    margin: '15px 0 ',\r\n    padding: '10px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import styles from './styles'\r\nimport { Paper } from '@material-ui/core'\r\nimport moment from 'moment'\r\n\r\ntype MessageType = {\r\n  text: string\r\n  email: string\r\n  createdAt: string\r\n}\r\n\r\ninterface Props {\r\n  message: MessageType\r\n}\r\n\r\nconst Message = ({ message }: Props) => {\r\n  const classes = styles()\r\n\r\n  return (\r\n    <Paper elevation={2} className={classes.message}>\r\n      <p>{message.text}</p>\r\n      <p>Posted by: {message.email}</p>\r\n      <p>{moment(message.createdAt).fromNow()}</p>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import { Typography } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport styles from './styles'\r\nimport Loader from '../loader'\r\nimport { messages as getMessages } from '../../redux/actions/message'\r\nimport Message from './Message'\r\nimport PaginationControll from '../pagination/PaginationControll'\r\nimport {\r\n  setPage,\r\n  resetErrorMessage,\r\n  resetSuccessMessage,\r\n} from '../../redux/reducers/messageSlice'\r\n\r\nconst UserMessages = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, messages, page, pages } = useSelector(\r\n    (state: RootState) => state.message\r\n  )\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSuccessMessage())\r\n    dispatch(resetErrorMessage())\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getMessages(page))\r\n\r\n    return () => handleReset()\r\n  }, [page])\r\n\r\n  return (\r\n    <div>\r\n      <Typography className={classes.title} align='center' variant='h5'>\r\n        User messages\r\n      </Typography>\r\n\r\n      <div className={classes.container}>\r\n        {loading && <Loader />}\r\n        {!loading && messages === null && <p>No messages to dispaly.</p>}\r\n        {!loading &&\r\n          messages?.length &&\r\n          messages.map((m, i) => <Message message={m} key={i} />)}\r\n      </div>\r\n\r\n      {!loading && pages > 1 && (\r\n        <PaginationControll page={page} pages={pages} setPage={setPage} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserMessages\r\n","import { Dialog, Toolbar, IconButton } from '@material-ui/core'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { closeAdminMenuModal } from '../../redux/reducers/modalSlice'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { Typography } from '@material-ui/core'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './styles'\r\nimport { logout } from '../../redux/actions/auth'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst AdminMenuModal = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { adminMenuModal: modal } = useSelector(\r\n    (state: RootState) => state.modal\r\n  )\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeAdminMenuModal())\r\n  }\r\n\r\n  const classes = styles()\r\n  const history = useHistory()\r\n\r\n  const handleLogout = () => {\r\n    history.push('/')\r\n    dispatch(logout())\r\n    dispatch(closeAdminMenuModal())\r\n  }\r\n\r\n  const activeLinkStyles = {\r\n    border: '1px solid black',\r\n    backgroundColor: '#D3D3D3',\r\n  }\r\n\r\n  return (\r\n    <Dialog open={modal} onClose={handleClose} fullScreen>\r\n      <Toolbar style={{ backgroundColor: '#181818' }}>\r\n        <IconButton\r\n          style={{ color: 'white' }}\r\n          edge='start'\r\n          onClick={handleClose}\r\n          aria-label='close'\r\n        >\r\n          <CloseIcon /> Close\r\n        </IconButton>\r\n      </Toolbar>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <div\r\n          style={{\r\n            height: 'calc(100vh - 104px)',\r\n            width: '220px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          <Typography\r\n            align='center'\r\n            variant='h5'\r\n            style={{ margin: '20px auto' }}\r\n          >\r\n            Admin Pannel\r\n          </Typography>\r\n\r\n          <NavLink\r\n            onClick={() => dispatch(closeAdminMenuModal())}\r\n            activeStyle={activeLinkStyles}\r\n            to='/admin/dashboard'\r\n            exact\r\n            className={classes.appLink}\r\n          >\r\n            Dashboard\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            onClick={() => dispatch(closeAdminMenuModal())}\r\n            activeStyle={activeLinkStyles}\r\n            to='/admin/orders'\r\n            exact\r\n            className={classes.appLink}\r\n          >\r\n            Orders\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            onClick={() => dispatch(closeAdminMenuModal())}\r\n            activeStyle={activeLinkStyles}\r\n            to='/admin/users'\r\n            exact\r\n            className={classes.appLink}\r\n          >\r\n            Users\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            onClick={() => dispatch(closeAdminMenuModal())}\r\n            activeStyle={activeLinkStyles}\r\n            to='/admin/categories'\r\n            exact\r\n            className={classes.appLink}\r\n          >\r\n            Categories\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            onClick={() => dispatch(closeAdminMenuModal())}\r\n            activeStyle={activeLinkStyles}\r\n            to='/admin/products'\r\n            exact\r\n            className={classes.appLink}\r\n          >\r\n            Products\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            onClick={() => dispatch(closeAdminMenuModal())}\r\n            activeStyle={activeLinkStyles}\r\n            to='/admin/create-product'\r\n            exact\r\n            className={classes.appLink}\r\n          >\r\n            Create Product\r\n          </NavLink>\r\n\r\n          <span onClick={() => handleLogout()} className={`${classes.appLink}`}>\r\n            <ExitToAppIcon className={classes.icon} /> Logout\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AdminMenuModal\r\n","import { Button } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { openAdminMenuModal } from '../../redux/reducers/modalSlice'\r\nimport AdminMenuModal from '../modals/AdminMenuModal'\r\n\r\nconst AdminMobileSidenav = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = () => {\r\n    dispatch(openAdminMenuModal())\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginBottom: '10px',\r\n        padding: '10px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Button\r\n        style={{ width: '350px', maxWidth: '95%' }}\r\n        color='primary'\r\n        variant='contained'\r\n        onClick={handleClick}\r\n      >\r\n        Admin pannel\r\n      </Button>\r\n\r\n      <AdminMenuModal />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminMobileSidenav\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport type UpdateOrderObj = {\r\n  id: string\r\n  isPaid?: boolean\r\n  orderStatus?: string\r\n  trackNumber?: string\r\n  url?: string\r\n}\r\n\r\nexport const createOrder = async () =>\r\n  await axios.post(`${server_url}/order/create-order`)\r\n\r\nexport const getOrder = async (id: string) =>\r\n  await axios.get(`${server_url}/order/get-order/${id}`)\r\n\r\nexport const getOrders = async (page: number, sort?: number) =>\r\n  await axios.get(`${server_url}/order/get-orders?page=${page}&sort=${sort}`)\r\n\r\nexport const getUserOrders = async (page: number) =>\r\n  await axios.get(`${server_url}/order/get-user-orders?page=${page}`)\r\n\r\nexport const updatePaypalPayment = async (id: string) =>\r\n  await axios.get(`${server_url}/order/paypal-payment/${id}`)\r\n\r\nexport const updateOrderStatus = async (obj: UpdateOrderObj) =>\r\n  await axios.put(`${server_url}/order/update-order/${obj.id}`, obj)\r\n","import { useEffect } from 'react'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts'\r\nimport moment from 'moment'\r\nimport { useState } from 'react'\r\nimport { getOrders } from '../../redux/api/order'\r\nimport { Order } from '../../redux/reducers/orderSlice'\r\nimport Loader from '../loader'\r\n\r\nconst AdminGraph = () => {\r\n  const [orders, setOrders] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const loadData = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const { data } = await getOrders(1, 1)\r\n\r\n      type AllOrders = any[]\r\n      let allOrders: AllOrders = []\r\n      let totalSum = 0\r\n\r\n      if (data.pages > 1) {\r\n        for (let i = 1; i < data.pages + 1; i++) {\r\n          const res = await getOrders(i, 1)\r\n          res.data.orders.forEach((order: Order) =>\r\n            allOrders.push({\r\n              value: order.cartTotal,\r\n              date: moment(order.createdAt).format('MMM Do YY'),\r\n              total: (totalSum += order.cartTotal),\r\n            })\r\n          )\r\n        }\r\n\r\n        setLoading(false)\r\n        return setOrders(allOrders)\r\n      }\r\n\r\n      data.orders.forEach((order: Order) =>\r\n        allOrders.push({\r\n          value: order.cartTotal,\r\n          date: moment(order.createdAt).format('MMM Do YY'),\r\n          total: (totalSum += order.cartTotal),\r\n        })\r\n      )\r\n      setLoading(false)\r\n      return setOrders(allOrders)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadData()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginBottom: '30px',\r\n      }}\r\n    >\r\n      {loading && <Loader />}\r\n      {!loading && orders.length === 0 ? (\r\n        <p style={{ textAlign: 'center', margin: '20px', fontSize: '18px' }}>\r\n          No Orders to display...\r\n        </p>\r\n      ) : (\r\n        <LineChart\r\n          width={900}\r\n          height={400}\r\n          data={orders}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray='3 3' />\r\n          <XAxis dataKey='date' />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            type='monotone'\r\n            dataKey='total'\r\n            stroke='#8884d8'\r\n            activeDot={{ r: 8 }}\r\n          />\r\n          <Line type='monotone' dataKey='value' stroke='#82ca9d' />\r\n        </LineChart>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminGraph\r\n","import styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport { Hidden } from '@material-ui/core'\r\nimport AdminDetailsSection from '../../components/admin-details-section/AdminDetailsSection'\r\nimport UserMessages from '../../components/user-messages/UserMessages'\r\nimport StyledHr from '../../components/styled-hr/StyledHr'\r\nimport AdminMobileSidenav from '../../components/admin-sidenav/AdminMobileSidenav'\r\nimport AdminGraph from '../../components/admin-graph/AdminGraph'\r\nimport Seo from '../../hooks/Seo'\r\nimport { useEffect } from 'react'\r\nimport { getMostWishedProducts } from '../../redux/api/product'\r\n\r\nconst Dashboard = () => {\r\n  const classes = styles()\r\n\r\n  const mostWished = async () => {\r\n    const { data } = await getMostWishedProducts()\r\n    return console.log(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    mostWished()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Seo title='Admin Dashboard' name='Admin Dashboard' />\r\n\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      <div className={classes.contentDiv}>\r\n        <Hidden smUp>\r\n          <AdminMobileSidenav />\r\n        </Hidden>\r\n\r\n        <AdminGraph />\r\n        <StyledHr />\r\n\r\n        <AdminDetailsSection />\r\n        <StyledHr />\r\n\r\n        <UserMessages />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../redux/store'\r\n\r\ninterface RouteProps {\r\n  component: React.ComponentType<any>\r\n  path: string\r\n  exact: boolean\r\n}\r\n\r\nconst PrivateRoute: React.FC<RouteProps> = ({\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  const { user } = useSelector((state: RootState) => state.auth)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !user ? <Redirect to='/login' /> : <Component {...props} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  mainContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n\r\n  contentDiv: {\r\n    margin: '20px 0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n    padding: '12px',\r\n  },\r\n\r\n  mainHeader: {\r\n    margin: '10px 0',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  appLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: '#FF69B4',\r\n    fontSize: '22px',\r\n    fontWeight: 500,\r\n    textDecoration: 'none',\r\n    padding: '0 3px',\r\n    textAlign: 'center',\r\n    margin: '10px auto',\r\n    width: '250px',\r\n    maxWidth: '95%',\r\n    border: '1px solid white',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      backgroundColor: '#fce4ec',\r\n    },\r\n  },\r\n\r\n  logout: {},\r\n\r\n  icon: {\r\n    marginRight: '5px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { Typography } from '@material-ui/core'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './styles'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../../redux/actions/auth'\r\n\r\nconst UserSidenav = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = async () => {\r\n    await dispatch(logout())\r\n  }\r\n\r\n  const activeLinkStyles = {\r\n    border: '1px solid #FFB6C1',\r\n    backgroundColor: '#fce4ec',\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: 'calc(100vh - 104px)',\r\n        width: '220px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <Typography align='center' variant='h5' style={{ margin: '20px auto' }}>\r\n        User Pannel\r\n      </Typography>\r\n\r\n      <NavLink\r\n        activeStyle={activeLinkStyles}\r\n        to='/user/dashboard'\r\n        exact\r\n        className={classes.appLink}\r\n      >\r\n        Dashboard\r\n      </NavLink>\r\n\r\n      <span\r\n        onClick={() => handleLogout()}\r\n        className={`${classes.appLink} ${classes.logout}`}\r\n      >\r\n        <ExitToAppIcon className={classes.icon} /> Logout\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserSidenav\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { AxiosResponse } from 'axios'\r\nimport {\r\n  createOrder,\r\n  getOrder,\r\n  getOrders,\r\n  getUserOrders,\r\n  UpdateOrderObj,\r\n  updateOrderStatus,\r\n  updatePaypalPayment,\r\n} from '../api/order'\r\nimport { Order } from '../reducers/orderSlice'\r\n\r\nexport const create = createAsyncThunk(\r\n  'order/create',\r\n  async (_, { rejectWithValue }) => {\r\n    type createOrderResponse = {\r\n      message: string\r\n      orderId: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<createOrderResponse> = await createOrder()\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const order = createAsyncThunk(\r\n  'order/order',\r\n  async (id: string, { rejectWithValue }) => {\r\n    type getOrderResponse = {\r\n      order: Order\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getOrderResponse> = await getOrder(id)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const orders = createAsyncThunk(\r\n  'order/orders',\r\n  async (page: number, { rejectWithValue }) => {\r\n    type getOrdersResponse = {\r\n      orders: Order[]\r\n      pages: number\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getOrdersResponse> = await getOrders(page)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const userOrders = createAsyncThunk(\r\n  'order/userOorders',\r\n  async (page: number, { rejectWithValue }) => {\r\n    type getOrdersResponse = {\r\n      orders: Order[]\r\n      pages: number\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getOrdersResponse> = await getUserOrders(\r\n        page\r\n      )\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const paypalPayment = createAsyncThunk(\r\n  'order/paypalPayment',\r\n  async (id: string, { rejectWithValue }) => {\r\n    type getPaypalPaymentResponse = {\r\n      order: Order\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<getPaypalPaymentResponse> =\r\n        await updatePaypalPayment(id)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateOrder = createAsyncThunk(\r\n  'order/updateOrder',\r\n  async (obj: UpdateOrderObj, { rejectWithValue }) => {\r\n    type updateOrderStatusResponse = {\r\n      order: Order\r\n      message: string\r\n    }\r\n\r\n    try {\r\n      const response: AxiosResponse<updateOrderStatusResponse> =\r\n        await updateOrderStatus(obj)\r\n\r\n      return response\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport {\r\n  create,\r\n  order,\r\n  orders,\r\n  paypalPayment,\r\n  updateOrder,\r\n  userOrders,\r\n} from '../actions/order'\r\nimport { UserInfo } from './authSlice'\r\nimport { ProductFromDb } from './cartSlice'\r\n\r\nexport type Order = {\r\n  _id: string\r\n  products: ProductFromDb[]\r\n  deliveryOption: string\r\n  paymentMethod: string\r\n  cartTotal: number\r\n  orderStatus: string\r\n  isPaid: boolean\r\n  userInfo: UserInfo\r\n  trackNumber: string\r\n  url: string\r\n  orderdBy: string\r\n  createdAt: string\r\n}\r\n\r\ninterface initialStateI {\r\n  loading: boolean\r\n  error: boolean | string\r\n  success: boolean | string\r\n  createdOrderId?: string\r\n  order?: Order\r\n  page: number\r\n  pages: number\r\n  orders?: Order[]\r\n}\r\n\r\nconst initialState: initialStateI = {\r\n  loading: false,\r\n  error: false,\r\n  success: false,\r\n  createdOrderId: undefined,\r\n  order: undefined,\r\n  page: 1,\r\n  pages: 0,\r\n  orders: undefined,\r\n}\r\n\r\nconst orderSlice = createSlice({\r\n  name: 'order',\r\n  initialState,\r\n  reducers: {\r\n    clearState: (state) => {\r\n      state.success = false\r\n      state.createdOrderId = undefined\r\n    },\r\n    setPage: (state, action) => {\r\n      state.page = action.payload\r\n    },\r\n    clearOrder: (state) => {\r\n      state.success = false\r\n      state.order = undefined\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // create order\r\n      .addCase(create.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(create.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.createdOrderId = action.payload.data.orderId\r\n        state.success = action.payload.data.message\r\n        state.error = false\r\n      })\r\n      .addCase(create.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      // get order\r\n      .addCase(order.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(order.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.order = action.payload.data.order\r\n        state.error = false\r\n      })\r\n      .addCase(order.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      // get orders\r\n      .addCase(orders.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(orders.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.orders = action.payload.data.orders\r\n        state.pages = action.payload.data.pages\r\n        state.error = false\r\n      })\r\n      .addCase(orders.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      // get user orders\r\n      .addCase(userOrders.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(userOrders.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.orders = action.payload.data.orders\r\n        state.pages = action.payload.data.pages\r\n        state.error = false\r\n      })\r\n      .addCase(userOrders.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      // update paypal payment\r\n      .addCase(paypalPayment.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(paypalPayment.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.order = action.payload.data.order\r\n        state.error = false\r\n      })\r\n      .addCase(paypalPayment.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      // update order status\r\n      .addCase(updateOrder.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(updateOrder.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.order = action.payload.data.order\r\n        state.success = action.payload.data.message\r\n        state.error = false\r\n      })\r\n      .addCase(updateOrder.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n  },\r\n})\r\n\r\nexport const { clearState, setPage, clearOrder } = orderSlice.actions\r\n\r\nexport default orderSlice.reducer\r\n","import styles from './styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport Loader from '../loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\nimport { userOrders } from '../../redux/actions/order'\r\nimport { setPage } from '../../redux/reducers/orderSlice'\r\nimport moment from 'moment'\r\nimport PaginationControll from '../pagination/PaginationControll'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst UserOrders = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const { loading, orders, pages, page } = useSelector(\r\n    (state: RootState) => state.order\r\n  )\r\n\r\n  const handleClick = (id: string) => {\r\n    history.push(`/user/order/${id}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(userOrders(page))\r\n  }, [page])\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      {!loading && !orders && <p>No orders found.</p>}\r\n      <TableContainer className={classes.table} component={Paper}>\r\n        <Table aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Created Date</TableCell>\r\n              <TableCell>Order Status</TableCell>\r\n              <TableCell>Is Paid</TableCell>\r\n              <TableCell>Payment method</TableCell>\r\n              <TableCell>Total price</TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders?.map((order, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  {moment(order.createdAt).format('MMM Do YY')}\r\n                </TableCell>\r\n                <TableCell>{order.orderStatus}</TableCell>\r\n                <TableCell>\r\n                  {order.isPaid === true ? (\r\n                    <span style={{ color: 'green' }}>Yes</span>\r\n                  ) : (\r\n                    <span style={{ color: 'red' }}>No</span>\r\n                  )}\r\n                </TableCell>\r\n\r\n                <TableCell>{order.paymentMethod}</TableCell>\r\n                <TableCell>{order.cartTotal} ₪</TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    onClick={() => handleClick(order._id)}\r\n                    style={{ minWidth: '150px' }}\r\n                    variant='outlined'\r\n                    color='primary'\r\n                  >\r\n                    View Full details\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {!loading && pages > 1 && (\r\n        <div>\r\n          <PaginationControll page={page} pages={pages} setPage={setPage} />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserOrders\r\n","import styles from './styles'\r\nimport UserSidenav from '../../components/user-sidenav/UserSidenav'\r\nimport { Hidden } from '@material-ui/core'\r\nimport UserOrders from '../../components/tables/UserOrders'\r\nimport { Typography } from '@material-ui/core'\r\nimport Seo from '../../hooks/Seo'\r\n\r\nconst UserDashboard = () => {\r\n  const classes = styles()\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Seo title='User Dashboard' name='user-dashboard' />\r\n\r\n      <Hidden xsDown>\r\n        <UserSidenav />\r\n      </Hidden>\r\n\r\n      <div className={classes.contentDiv}>\r\n        <Typography className={classes.mainHeader} variant='h5' align='center'>\r\n          Purchase History\r\n        </Typography>\r\n        <UserOrders />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserDashboard\r\n","import styles from './styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport Loader from '../loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\nimport { orders as getOrders } from '../../redux/actions/order'\r\nimport { setPage } from '../../redux/reducers/orderSlice'\r\nimport moment from 'moment'\r\nimport PaginationControll from '../pagination/PaginationControll'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst OrdersTable = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const { loading, orders, pages, page } = useSelector(\r\n    (state: RootState) => state.order\r\n  )\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders(page))\r\n  }, [page])\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      {!loading && !orders && <p>No orders found.</p>}\r\n      <TableContainer className={classes.table} component={Paper}>\r\n        <Table aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Created Date</TableCell>\r\n              <TableCell>Order Status</TableCell>\r\n              <TableCell>Is Paid</TableCell>\r\n              <TableCell>User email</TableCell>\r\n              <TableCell>Payment method</TableCell>\r\n              <TableCell>Total price</TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders?.map((order, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  {moment(order.createdAt).format('MMM Do YY')}\r\n                </TableCell>\r\n                <TableCell>{order.orderStatus}</TableCell>\r\n                <TableCell>\r\n                  {order.isPaid === true ? (\r\n                    <span style={{ color: 'green' }}>Yes</span>\r\n                  ) : (\r\n                    <span style={{ color: 'red' }}>No</span>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell>{order.userInfo.email}</TableCell>\r\n                <TableCell>{order.paymentMethod}</TableCell>\r\n                <TableCell>{order.cartTotal} ₪</TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    onClick={() => history.push(`/admin/order/${order._id}`)}\r\n                    style={{ minWidth: '150px' }}\r\n                    variant='outlined'\r\n                    color='primary'\r\n                  >\r\n                    View and Edit\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {!loading && pages > 1 && (\r\n        <div>\r\n          <PaginationControll page={page} pages={pages} setPage={setPage} />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrdersTable\r\n","import styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport OrdersTable from '../../components/tables/OrdersTable'\r\nimport { Typography, Hidden } from '@material-ui/core'\r\nimport AdminMobileSidenav from '../../components/admin-sidenav/AdminMobileSidenav'\r\n\r\nconst Orders = () => {\r\n  const classes = styles()\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      <div className={classes.contentDiv}>\r\n        <Hidden smUp>\r\n          <AdminMobileSidenav />\r\n        </Hidden>\r\n\r\n        <Typography align='center' variant='h5' className={classes.mainHeader}>\r\n          Orders\r\n        </Typography>\r\n        <OrdersTable />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Orders\r\n","import styles from './styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Loader from '../loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\nimport { users as getUsers } from '../../redux/actions/auth'\r\nimport { setPage } from '../../redux/reducers/authSlice'\r\nimport moment from 'moment'\r\nimport PaginationControll from '../pagination/PaginationControll'\r\n\r\nconst UsersTable = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, users, pages, page } = useSelector(\r\n    (state: RootState) => state.auth\r\n  )\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers(page))\r\n  }, [page])\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <TableContainer className={classes.table} component={Paper}>\r\n        <Table aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Role</TableCell>\r\n              <TableCell>Created At</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!loading &&\r\n              users?.length &&\r\n              users?.map((u, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell>{u.email}</TableCell>\r\n                  <TableCell>\r\n                    {u.verified === true ? (\r\n                      <span style={{ color: 'green' }}>Active</span>\r\n                    ) : (\r\n                      <span style={{ color: 'red' }}>Not Active</span>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {u.role === 'admin' ? 'Admin User' : 'Regular'}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(u.createdAt).format('MMMM Do YYYY')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {!loading && pages > 1 && (\r\n        <div>\r\n          <PaginationControll page={page} pages={pages} setPage={setPage} />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UsersTable\r\n","import styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport { Typography } from '@material-ui/core'\r\nimport UsersTable from '../../components/tables/UsersTable'\r\nimport { Hidden } from '@material-ui/core'\r\nimport AdminMobileSidenav from '../../components/admin-sidenav/AdminMobileSidenav'\r\n\r\nconst Users = () => {\r\n  const classes = styles()\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      <div className={classes.contentDiv}>\r\n        <Hidden smUp>\r\n          <AdminMobileSidenav />\r\n        </Hidden>\r\n        <Typography align='center' variant='h5' className={classes.mainHeader}>\r\n          Users\r\n        </Typography>\r\n\r\n        <UsersTable />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  mainContainer: {\r\n    width: '500px',\r\n    maxWidth: '95%',\r\n    margin: '30px auto',\r\n    minHeight: '500px',\r\n    height: 'fit-content',\r\n    padding: '10px',\r\n    position: 'relative',\r\n  },\r\n\r\n  formContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    padding: '10px 5px',\r\n  },\r\n\r\n  formElement: {\r\n    margin: '10px 0',\r\n    width: '300px',\r\n    maxWidth: '95%',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n  },\r\n\r\n  categoriesDiv: {\r\n    height: '300px',\r\n    overflowY: 'scroll',\r\n    padding: '10px 5px',\r\n  },\r\n\r\n  ol: {\r\n    maxWidth: '95%',\r\n    margin: '10px 0',\r\n  },\r\n\r\n  li: {\r\n    fontSize: '20px',\r\n    margin: '10px 0',\r\n  },\r\n\r\n  deleteIcon: {\r\n    color: '#FF69B4',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  updateIcon: {\r\n    color: '#181818',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport {\r\n  categories,\r\n  create,\r\n  putCategory,\r\n  removeCategory,\r\n} from '../actions/categories'\r\n\r\ntype category = {\r\n  _id: string\r\n  name: string\r\n  createdAt: string\r\n  updatedAt: string\r\n}\r\n\r\ninterface initialStateI {\r\n  categories: category[]\r\n  errorMessage: string | boolean\r\n  successMessage: boolean\r\n  loading: boolean\r\n  categoryToUpdate: null | category\r\n}\r\n\r\nconst initialState: initialStateI = {\r\n  categories: [],\r\n  errorMessage: false,\r\n  successMessage: false,\r\n  loading: false,\r\n  categoryToUpdate: null,\r\n}\r\n\r\nconst categorySlice = createSlice({\r\n  name: 'category',\r\n  initialState,\r\n  reducers: {\r\n    resetSuccessMessage: (state) => {\r\n      state.successMessage = false\r\n    },\r\n    placeCategoryToUpdate: (state, action) => {\r\n      state.categoryToUpdate = action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      //create category\r\n      .addCase(create.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(create.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = true\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(create.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get categories\r\n      .addCase(categories.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(categories.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.categories = action.payload.data.categories\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(categories.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get categories\r\n      .addCase(removeCategory.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(removeCategory.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = true\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(removeCategory.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n      //get categories\r\n      .addCase(putCategory.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(putCategory.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.successMessage = true\r\n        state.errorMessage = false\r\n      })\r\n      .addCase(putCategory.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.errorMessage = action.payload.errors[0].msg)\r\n          : (state.errorMessage = action.payload.message)\r\n      })\r\n  },\r\n})\r\n\r\nexport const { resetSuccessMessage, placeCategoryToUpdate } =\r\n  categorySlice.actions\r\n\r\nexport default categorySlice.reducer\r\n","import { useState } from 'react'\r\nimport styles from './styles'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { categories, create } from '../../redux/actions/categories'\r\nimport { resetSuccessMessage } from '../../redux/reducers/categoriesSlice'\r\nimport { RootState } from '../../redux/store'\r\n\r\nconst CreateCategoryForm = () => {\r\n  const classes = styles()\r\n  const [category, setCategory] = useState('')\r\n  const dispatch = useDispatch()\r\n  const { successMessage } = useSelector((state: RootState) => state.category)\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(create(category))\r\n  }\r\n\r\n  const handleCategoriesReload = () => {\r\n    if (successMessage) {\r\n      dispatch(resetSuccessMessage())\r\n      dispatch(categories())\r\n      setCategory('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={classes.formContainer} onSubmit={handleSubmit}>\r\n      <TextField\r\n        className={classes.formElement}\r\n        label='Category'\r\n        name='category'\r\n        type='text'\r\n        required={true}\r\n        value={category}\r\n        onChange={(e) => setCategory(e.target.value)}\r\n      />\r\n\r\n      <Button\r\n        className={classes.formElement}\r\n        type='submit'\r\n        variant='contained'\r\n        color='primary'\r\n      >\r\n        Create Category\r\n      </Button>\r\n\r\n      {handleCategoriesReload()}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CreateCategoryForm\r\n","import styles from './styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport UpdateIcon from '@material-ui/icons/Update'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { removeCategory } from '../../redux/actions/categories'\r\nimport { placeCategoryToUpdate } from '../../redux/reducers/categoriesSlice'\r\nimport Loader from '../loader'\r\n\r\nconst CategoriesList = () => {\r\n  const classes = styles()\r\n  const { categories, loading } = useSelector(\r\n    (state: RootState) => state.category\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  const openConfirm = (id: string) => {\r\n    let result = window.confirm('Are you sure to delete this category?')\r\n    if (result) {\r\n      dispatch(removeCategory(id))\r\n    }\r\n  }\r\n\r\n  const chooseCategoryToUpdate = (category: object) => {\r\n    dispatch(placeCategoryToUpdate(category))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.categoriesDiv}>\r\n      {loading && <Loader />}\r\n      {!loading && categories.length > 0 && (\r\n        <ol className={classes.ol}>\r\n          {categories.map((c, i) => (\r\n            <li key={i} className={classes.li}>\r\n              {c.name}{' '}\r\n              <span style={{ float: 'right' }}>\r\n                <UpdateIcon\r\n                  className={classes.updateIcon}\r\n                  onClick={(e) => chooseCategoryToUpdate(c)}\r\n                />{' '}\r\n                <DeleteIcon\r\n                  className={classes.deleteIcon}\r\n                  onClick={(e) => openConfirm(c._id)}\r\n                />{' '}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesList\r\n","import { useState } from 'react'\r\nimport styles from './styles'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { categories, putCategory } from '../../redux/actions/categories'\r\nimport {\r\n  placeCategoryToUpdate,\r\n  resetSuccessMessage,\r\n} from '../../redux/reducers/categoriesSlice'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\n\r\nconst UpdateCategoryForm = () => {\r\n  const { successMessage, categoryToUpdate } = useSelector(\r\n    (state: RootState) => state.category\r\n  )\r\n  const classes = styles()\r\n  const [category, setCategory] = useState(categoryToUpdate?.name)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      putCategory({\r\n        id: categoryToUpdate?._id,\r\n        name: category,\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleCategoriesReload = () => {\r\n    if (successMessage) {\r\n      dispatch(placeCategoryToUpdate(null))\r\n      dispatch(resetSuccessMessage())\r\n      dispatch(categories())\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    dispatch(placeCategoryToUpdate(null))\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCategory(categoryToUpdate?.name)\r\n  }, [categoryToUpdate?.name])\r\n\r\n  return (\r\n    <form className={classes.formContainer} onSubmit={handleSubmit}>\r\n      <TextField\r\n        className={classes.formElement}\r\n        label='Category'\r\n        name='category'\r\n        type='text'\r\n        required={true}\r\n        value={category}\r\n        onChange={(e) => setCategory(e.target.value)}\r\n      />\r\n\r\n      <Button\r\n        className={classes.formElement}\r\n        type='submit'\r\n        variant='contained'\r\n        color='primary'\r\n      >\r\n        Update Category\r\n      </Button>\r\n      <Button\r\n        onClick={handleCancel}\r\n        className={classes.formElement}\r\n        variant='contained'\r\n        color='secondary'\r\n      >\r\n        Cancel\r\n      </Button>\r\n\r\n      {handleCategoriesReload()}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UpdateCategoryForm\r\n","import styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport { Grid } from '@material-ui/core'\r\nimport { Typography } from '@material-ui/core'\r\nimport { Hidden } from '@material-ui/core'\r\nimport CreateCategoryForm from '../../components/admin-categories/CreateCategoryForm'\r\nimport CategoriesList from '../../components/admin-categories/CategoriesList'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { categories } from '../../redux/actions/categories'\r\nimport { RootState } from '../../redux/store'\r\nimport UpdateCategoryForm from '../../components/admin-categories/UpdateCategoryForm'\r\nimport AdminMobileSidenav from '../../components/admin-sidenav/AdminMobileSidenav'\r\n\r\nconst Categories = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { categoryToUpdate } = useSelector((state: RootState) => state.category)\r\n\r\n  useEffect(() => {\r\n    dispatch(categories())\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      {/* content div */}\r\n      <div className={classes.contentDiv}>\r\n        <Hidden smUp>\r\n          <AdminMobileSidenav />\r\n        </Hidden>\r\n\r\n        <Typography align='center' variant='h5' className={classes.mainHeader}>\r\n          Categories\r\n        </Typography>\r\n\r\n        <Grid container>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography align='center' variant='h6'>\r\n              {categoryToUpdate ? 'Update Category' : 'Create Category'}\r\n            </Typography>\r\n\r\n            {categoryToUpdate ? <UpdateCategoryForm /> : <CreateCategoryForm />}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography align='center' variant='h6'>\r\n              Categories List\r\n            </Typography>\r\n\r\n            <CategoriesList />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Categories\r\n","import styles from './styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\nimport {\r\n  adminProducts as getAdminProducts,\r\n  remove,\r\n} from '../../redux/actions/product'\r\nimport { Button } from '@material-ui/core'\r\nimport { useHistory } from 'react-router'\r\nimport Loader from '../loader'\r\nimport {\r\n  Product,\r\n  resetSuccessMessage,\r\n  setPage,\r\n  setProductToUpdate,\r\n} from '../../redux/reducers/productSlice'\r\nimport PaginationControll from '../pagination/PaginationControll'\r\n\r\nconst ProductsTable = () => {\r\n  const classes = styles()\r\n  const history = useHistory()\r\n\r\n  const { adminProducts, loading, successMessage, page, pages } = useSelector(\r\n    (state: RootState) => state.product\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getAdminProducts(page))\r\n  }, [page])\r\n\r\n  const handleUpdateDetailsClick = (product: Product) => {\r\n    dispatch(setProductToUpdate(product))\r\n    history.push(`/admin/update-product/${product._id}`)\r\n  }\r\n\r\n  const handleDeleteProduct = (id: string) => {\r\n    let response = window.confirm(\r\n      'Are you sure you want to delete this product'\r\n    )\r\n    if (response) {\r\n      dispatch(remove(id))\r\n    }\r\n  }\r\n\r\n  if (successMessage === 'Product deleted succefully') {\r\n    dispatch(resetSuccessMessage())\r\n    dispatch(getAdminProducts(page))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <TableContainer className={classes.table} component={Paper}>\r\n        <Table aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align='right'>Name</TableCell>\r\n              <TableCell align='right'>Category</TableCell>\r\n              <TableCell align='right'>Main Image</TableCell>\r\n              <TableCell align='right'>Update Details</TableCell>\r\n              <TableCell align='right'>Update Images</TableCell>\r\n              <TableCell align='right'>Delete</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {adminProducts &&\r\n              adminProducts.length > 0 &&\r\n              adminProducts.map((p, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell align='right'>{p.name}</TableCell>\r\n                  <TableCell align='right'>\r\n                    {p.category ? (\r\n                      p.category.name\r\n                    ) : (\r\n                      <span style={{ color: 'red' }}>No category found!</span>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align='right'>\r\n                    {p.images.length ? (\r\n                      <img\r\n                        className={classes.image}\r\n                        src={p.images[0].url}\r\n                        alt={'Error'}\r\n                      />\r\n                    ) : (\r\n                      'No images yet'\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align='right'>\r\n                    <Button\r\n                      onClick={() => handleUpdateDetailsClick(p)}\r\n                      color='primary'\r\n                      variant='outlined'\r\n                    >\r\n                      Update Details\r\n                    </Button>\r\n                  </TableCell>\r\n                  <TableCell align='right'>\r\n                    <Button\r\n                      color='primary'\r\n                      variant='outlined'\r\n                      onClick={() =>\r\n                        history.push(`/admin/upload-product-images/${p._id}`)\r\n                      }\r\n                    >\r\n                      Update Images\r\n                    </Button>\r\n                  </TableCell>\r\n                  <TableCell align='right'>\r\n                    <Button\r\n                      onClick={() => handleDeleteProduct(p._id)}\r\n                      color='secondary'\r\n                      variant='outlined'\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {!loading && pages > 1 && (\r\n        <div>\r\n          <PaginationControll page={page} pages={pages} setPage={setPage} />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductsTable\r\n","import styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport { Hidden, Typography } from '@material-ui/core'\r\nimport ProductsTable from '../../components/tables/ProductsTable'\r\nimport AdminMobileSidenav from '../../components/admin-sidenav/AdminMobileSidenav'\r\n\r\nconst Products = () => {\r\n  const classes = styles()\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      <div className={classes.contentDiv}>\r\n        <Hidden smUp>\r\n          <AdminMobileSidenav />\r\n        </Hidden>\r\n\r\n        <Typography align='center' variant='h5' className={classes.mainHeader}>\r\n          Products\r\n        </Typography>\r\n\r\n        <ProductsTable />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Products\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  formContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: '10px 5px',\r\n    width: '100%',\r\n  },\r\n\r\n  formElement: {\r\n    margin: '12px',\r\n    width: '350px',\r\n    maxWidth: '95%',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n  },\r\n\r\n  uploadImagesButton: {\r\n    margin: '12px',\r\n    width: '300px',\r\n    maxWidth: '95%',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n  },\r\n\r\n  uplaodImageContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: '10px 5px',\r\n    width: '100%',\r\n  },\r\n\r\n  title: {\r\n    margin: '15px 0',\r\n  },\r\n\r\n  previewContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    padding: '10px 5px',\r\n    width: '100%',\r\n  },\r\n\r\n  image: {\r\n    height: '200px',\r\n    margin: '10px',\r\n    display: 'flex',\r\n  },\r\n\r\n  badge: {\r\n    backgroundColor: 'crimson',\r\n    color: 'white',\r\n    fontWeight: 500,\r\n    position: 'absolute',\r\n    marginLeft: '3px',\r\n    padding: '2px',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import styles from './styles'\r\nimport {\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { categories as getCategories } from '../../redux/actions/categories'\r\nimport { Button } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport HandleChange from '../../hooks/HandleChange'\r\nimport { create } from '../../redux/actions/product'\r\nimport Loader from '../loader'\r\n\r\nconst CreateProductForm = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { categories, loading } = useSelector(\r\n    (state: RootState) => state.category\r\n  )\r\n\r\n  interface valuesI {\r\n    name: string\r\n    price: number\r\n    quantity: number\r\n    description: string\r\n    category: string | unknown\r\n  }\r\n\r\n  const [values, setValues] = useState<valuesI>({\r\n    name: '',\r\n    price: 0,\r\n    quantity: 0,\r\n    description: '',\r\n    category: '',\r\n  })\r\n\r\n  const { name, price, quantity, description, category } = values\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(create(values))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories())\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <form className={classes.formContainer} onSubmit={handleSubmit}>\r\n        <TextField\r\n          className={classes.formElement}\r\n          label='Name'\r\n          name='name'\r\n          type='text'\r\n          required={true}\r\n          variant='outlined'\r\n          value={name}\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n        <TextField\r\n          className={classes.formElement}\r\n          label='Price'\r\n          name='price'\r\n          type='number'\r\n          variant='outlined'\r\n          required={true}\r\n          value={price}\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n        <TextField\r\n          className={classes.formElement}\r\n          label='Quantity'\r\n          name='quantity'\r\n          type='number'\r\n          variant='outlined'\r\n          required={true}\r\n          value={quantity}\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n\r\n        <FormControl required className={classes.formElement}>\r\n          <InputLabel id='category'>Select a Category</InputLabel>\r\n          <Select\r\n            required={true}\r\n            name='category'\r\n            labelId='category'\r\n            onChange={(e) => setValues({ ...values, category: e.target.value })}\r\n          >\r\n            {!loading &&\r\n              categories.length > 0 &&\r\n              categories.map((c, i) => (\r\n                <MenuItem value={c._id} key={i}>\r\n                  {c.name}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          className={classes.formElement}\r\n          multiline\r\n          rows={10}\r\n          label={'Product Description'}\r\n          name='description'\r\n          type='text'\r\n          variant='outlined'\r\n          required={true}\r\n          value={description}\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n\r\n        <Button\r\n          type='submit'\r\n          variant='contained'\r\n          className={classes.formElement}\r\n          color='primary'\r\n        >\r\n          Create Product\r\n        </Button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateProductForm\r\n","import styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport { Typography } from '@material-ui/core'\r\nimport CreateProductForm from '../../components/admin-create-product/CreateProductForm'\r\nimport { Hidden } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport {\r\n  resetCreatedProductId,\r\n  resetSuccessMessage,\r\n} from '../../redux/reducers/productSlice'\r\nimport { useHistory } from 'react-router'\r\nimport AdminMobileSidenav from '../../components/admin-sidenav/AdminMobileSidenav'\r\n\r\nconst CreateProduct = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const { successMessage, createdProductId } = useSelector(\r\n    (state: RootState) => state.product\r\n  )\r\n\r\n  const handleSuccessReset = () => {\r\n    dispatch(resetSuccessMessage())\r\n    dispatch(resetCreatedProductId())\r\n  }\r\n\r\n  if (successMessage && createdProductId) {\r\n    history.push(`/admin/upload-product-images/${createdProductId}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => handleSuccessReset()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      {/* content div */}\r\n      <div className={classes.contentDiv}>\r\n        <Hidden smUp>\r\n          <AdminMobileSidenav />\r\n        </Hidden>\r\n\r\n        <Typography align='center' variant='h5' className={classes.mainHeader}>\r\n          Create new Product\r\n        </Typography>\r\n\r\n        <CreateProductForm />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateProduct\r\n","import { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../redux/store'\r\n\r\ninterface RouteProps {\r\n  component: React.ComponentType<any>\r\n  path: string\r\n  exact: boolean\r\n}\r\n\r\nconst AdminRoute: React.FC<RouteProps> = ({\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  const { user } = useSelector((state: RootState) => state.auth)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !user || user.role !== 'admin' ? (\r\n          <Redirect to='/login' />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default AdminRoute\r\n","import { Button } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport { RootState } from '../../redux/store'\r\nimport styles from './styles'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { productImageUpload } from '../../redux/actions/cloudinary'\r\nimport ShowError from '../../hooks/ShowError'\r\nimport { setErrorMessage } from '../../redux/reducers/productSlice'\r\nimport ShowSuccess from '../../hooks/ShowSuccess'\r\n\r\nconst UploadProductImagesForm = () => {\r\n  type Params = {\r\n    id: string\r\n  }\r\n\r\n  type File = null | FileList\r\n\r\n  const [files, setFiles] = useState<File>(null)\r\n\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { loading, errorMessage, successMessage } = useSelector(\r\n    (state: RootState) => state.product\r\n  )\r\n\r\n  const params = useParams<Params>()\r\n  const { id } = params\r\n\r\n  const handleChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFiles(e.target.files)\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    if (!files?.length) {\r\n      return dispatch(\r\n        setErrorMessage({\r\n          message: 'Please choose at least one image',\r\n        })\r\n      )\r\n    }\r\n\r\n    if (files && files.length > 4) {\r\n      return dispatch(\r\n        setErrorMessage({\r\n          message: 'Please do not upload more than 4 images at once',\r\n        })\r\n      )\r\n    }\r\n\r\n    let array: string[] = []\r\n    if (files?.length) {\r\n      for (let i = 0; i < files.length; i++) {\r\n        Resizer.imageFileResizer(\r\n          files[i],\r\n          700,\r\n          700,\r\n          'auto',\r\n          100,\r\n          0,\r\n          (uri: any) => {\r\n            array.push(uri)\r\n\r\n            if (array.length === files.length) {\r\n              dispatch(productImageUpload({ id, array }))\r\n            }\r\n          },\r\n          'base64'\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={classes.uplaodImageContainer} onSubmit={handleSubmit}>\r\n      <input\r\n        className={classes.formElement}\r\n        style={{\r\n          fontSize: '15px',\r\n          display: 'flex',\r\n          margin: '20px 0',\r\n          textAlign: 'center',\r\n          width: '300px',\r\n        }}\r\n        type='file'\r\n        accept='image/*'\r\n        name='imagetoUpload'\r\n        multiple\r\n        onChange={handleChange}\r\n      />\r\n\r\n      {errorMessage && ShowError(errorMessage)}\r\n      {successMessage && ShowSuccess(successMessage)}\r\n\r\n      <Button\r\n        className={classes.uploadImagesButton}\r\n        color='primary'\r\n        variant='contained'\r\n        type='submit'\r\n        disabled={loading}\r\n      >\r\n        {loading ? 'Loading...' : 'Upload'}\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UploadProductImagesForm\r\n","import { Typography } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { Product } from '../../redux/reducers/productSlice'\r\nimport { productImageDelete } from '../../redux/actions/cloudinary'\r\n\r\nconst UploadedImagesPreview = () => {\r\n  const classes = styles()\r\n  const { product } = useSelector((state: RootState) => state.product)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleDelete = (productId: string, public_id: string) => {\r\n    let result = window.confirm('Are you sure you want to delete?')\r\n    if (result) {\r\n      dispatch(productImageDelete({ productId, public_id }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography className={classes.title} variant='h6' align='center'>\r\n        Uploaded Images\r\n      </Typography>\r\n      <div className={classes.previewContainer}>\r\n        {(product as Product).images?.map((img, i) => (\r\n          <div>\r\n            <span\r\n              onClick={() =>\r\n                handleDelete((product as Product)._id, img.public_id)\r\n              }\r\n              className={classes.badge}\r\n            >\r\n              Delete\r\n            </span>\r\n            <img\r\n              className={classes.image}\r\n              key={i}\r\n              src={img.url}\r\n              alt={'Product image was unable to load'}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UploadedImagesPreview\r\n","import styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport { Typography } from '@material-ui/core'\r\nimport { Hidden } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\nimport { product as getProduct } from '../../redux/actions/product'\r\nimport { useParams } from 'react-router'\r\nimport UploadProductImagesForm from '../../components/admin-create-product/UploadProductImagesForm'\r\nimport { resetSuccessMessage } from '../../redux/reducers/productSlice'\r\nimport UploadedImagesPreview from '../../components/admin-create-product/UploadedImagesPreview'\r\nimport Loader from '../../components/loader'\r\nimport AdminMobileSidenav from '../../components/admin-sidenav/AdminMobileSidenav'\r\n\r\nconst UploadProductImages = () => {\r\n  type Params = {\r\n    id: string\r\n  }\r\n\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { product, loading } = useSelector((state: RootState) => state.product)\r\n\r\n  const params = useParams<Params>()\r\n  const { id } = params\r\n\r\n  const handleSuccessMessageReset = () => {\r\n    dispatch(resetSuccessMessage())\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(id))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return () => handleSuccessMessageReset()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      {/* content div */}\r\n      <div className={classes.contentDiv}>\r\n        <Hidden smUp>\r\n          <AdminMobileSidenav />\r\n        </Hidden>\r\n\r\n        <Typography align='center' variant='h5' className={classes.mainHeader}>\r\n          Upload Product Images\r\n        </Typography>\r\n\r\n        {loading && <Loader />}\r\n\r\n        {!loading && product?._id && (\r\n          <>\r\n            <UploadProductImagesForm />\r\n\r\n            {product?.images?.length ? <UploadedImagesPreview /> : null}\r\n          </>\r\n        )}\r\n\r\n        {!loading && !product?._id && (\r\n          <p className={classes.errorText}>\r\n            We're sorry the product could not be found...\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadProductImages\r\n","import styles from './styles'\r\nimport {\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { categories as getCategories } from '../../redux/actions/categories'\r\nimport { Button } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport HandleChange from '../../hooks/HandleChange'\r\nimport Loader from '../loader'\r\nimport { useParams } from 'react-router'\r\nimport { Product, resetSuccessMessage } from '../../redux/reducers/productSlice'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { update } from '../../redux/actions/product'\r\nimport ShowSuccess from '../../hooks/ShowSuccess'\r\n\r\ninterface valuesI {\r\n  name: string\r\n  price: number\r\n  quantity: number\r\n  description: string\r\n  category: string | unknown\r\n}\r\n\r\ntype Params = {\r\n  id: string\r\n}\r\n\r\nconst UpdateProductForm = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const { categories, loading } = useSelector(\r\n    (state: RootState) => state.category\r\n  )\r\n  const { productToUpdate, successMessage } = useSelector(\r\n    (state: RootState) => state.product\r\n  )\r\n\r\n  const params: Params = useParams()\r\n  const { id } = params\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(update({ values, id }))\r\n  }\r\n\r\n  const handleResetMessage = () => {\r\n    dispatch(resetSuccessMessage())\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories())\r\n    setValues({\r\n      ...values,\r\n      category: (productToUpdate as Product).category?._id,\r\n    })\r\n\r\n    return () => handleResetMessage()\r\n  }, [])\r\n\r\n  const [values, setValues] = useState<valuesI>({\r\n    name: (productToUpdate as Product).name,\r\n    price: (productToUpdate as Product).price,\r\n    quantity: (productToUpdate as Product).quantity,\r\n    description: (productToUpdate as Product).description,\r\n    category: '',\r\n  })\r\n\r\n  const { name, price, quantity, description, category } = values\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <form className={classes.formContainer} onSubmit={handleSubmit}>\r\n        <TextField\r\n          className={classes.formElement}\r\n          label='Name'\r\n          name='name'\r\n          type='text'\r\n          required={true}\r\n          variant='outlined'\r\n          value={name}\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n        <TextField\r\n          className={classes.formElement}\r\n          label='Price'\r\n          name='price'\r\n          type='number'\r\n          variant='outlined'\r\n          required={true}\r\n          value={price}\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n        <TextField\r\n          className={classes.formElement}\r\n          label='Quantity'\r\n          name='quantity'\r\n          type='number'\r\n          variant='outlined'\r\n          required={true}\r\n          value={quantity}\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n\r\n        <FormControl required className={classes.formElement}>\r\n          <InputLabel id='category'>Select a Category</InputLabel>\r\n          <Select\r\n            value={category}\r\n            required={true}\r\n            name='category'\r\n            labelId='category'\r\n            onChange={(e) => setValues({ ...values, category: e.target.value })}\r\n          >\r\n            {!loading &&\r\n              categories.length > 0 &&\r\n              categories.map((c, i) => (\r\n                <MenuItem value={c._id} key={i}>\r\n                  {c.name}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          className={classes.formElement}\r\n          multiline\r\n          rows={10}\r\n          label={'Product Description'}\r\n          name='description'\r\n          type='text'\r\n          variant='outlined'\r\n          required={true}\r\n          value={description}\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n\r\n        {successMessage && ShowSuccess(successMessage)}\r\n\r\n        <Button\r\n          type='submit'\r\n          variant='contained'\r\n          className={classes.formElement}\r\n          color='primary'\r\n        >\r\n          Update Details\r\n        </Button>\r\n        <Button\r\n          variant='outlined'\r\n          className={classes.formElement}\r\n          color='secondary'\r\n          onClick={() => history.push('/admin/products')}\r\n        >\r\n          Back to Products\r\n        </Button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdateProductForm\r\n","import styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport { Typography } from '@material-ui/core'\r\nimport { Hidden } from '@material-ui/core'\r\nimport UpdateProductForm from '../../components/admin-create-product/UpdateProductForm'\r\nimport AdminMobileSidenav from '../../components/admin-sidenav/AdminMobileSidenav'\r\n\r\nconst UpdateProduct = () => {\r\n  const classes = styles()\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      {/* content div */}\r\n      <div className={classes.contentDiv}>\r\n        <Hidden smUp>\r\n          <AdminMobileSidenav />\r\n        </Hidden>\r\n\r\n        <Typography align='center' variant='h5' className={classes.mainHeader}>\r\n          Update Product\r\n        </Typography>\r\n\r\n        <UpdateProductForm />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateProduct\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  main: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  container: {\r\n    width: '95%',\r\n    margin: '10px 0 30px 0',\r\n  },\r\n\r\n  button: {\r\n    margin: '10px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import styles from './styles'\r\nimport { Editor } from '@tinymce/tinymce-react'\r\nimport { useState } from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { useHistory } from 'react-router'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { aboutMe, updateAbout } from '../../redux/actions/admin'\r\nimport {\r\n  resetErrorMessage,\r\n  resetSuccessMessage,\r\n} from '../../redux/reducers/adminSlice'\r\nimport ShowError from '../../hooks/ShowError'\r\nimport { useEffect } from 'react'\r\n\r\nconst UploadDetailsEditor = () => {\r\n  const classes = styles()\r\n  const history = useHistory()\r\n  const [text, setText] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, about, errorMessage, successMessage } = useSelector(\r\n    (state: RootState) => state.admin\r\n  )\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    dispatch(updateAbout(text))\r\n  }\r\n\r\n  if (!loading && about !== '' && successMessage === true) {\r\n    dispatch(resetSuccessMessage())\r\n    setText(about)\r\n  }\r\n\r\n  const handleResetMessages = () => {\r\n    dispatch(resetSuccessMessage())\r\n    dispatch(resetErrorMessage())\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => handleResetMessages()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <div className={classes.container}>\r\n        <Editor\r\n          apiKey='2q2bdjlqnx7i6d0lbkldb695k5mgi3j1j7wfsx4y5prpnd4s'\r\n          value={text}\r\n          init={{\r\n            height: 500,\r\n            menubar: false,\r\n            plugins: [\r\n              'advlist autolink lists link image charmap print preview anchor',\r\n              'searchreplace visualblocks code fullscreen',\r\n              'insertdatetime media table paste code help wordcount',\r\n            ],\r\n            toolbar:\r\n              'undo redo | formatselect | bold italic backcolor | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | help',\r\n          }}\r\n          onEditorChange={(value) => setText(value)}\r\n          onInit={() => dispatch(aboutMe())}\r\n        />\r\n\r\n        {errorMessage && ShowError(errorMessage)}\r\n        <Button\r\n          onClick={handleSubmit}\r\n          className={classes.button}\r\n          color='primary'\r\n          variant='contained'\r\n        >\r\n          {loading ? 'Loading...' : 'Submit'}\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => history.push('/admin/dashboard')}\r\n          className={classes.button}\r\n          color='secondary'\r\n          variant='outlined'\r\n        >\r\n          Back to dashboard\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadDetailsEditor\r\n","import styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport { Hidden, Typography } from '@material-ui/core'\r\nimport UploadDetailsEditor from '../../components/rich-text-editors/UploadDetailsEditor'\r\nimport AdminMobileSidenav from '../../components/admin-sidenav/AdminMobileSidenav'\r\n\r\nconst UploadAboutDetails = () => {\r\n  const classes = styles()\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      <div className={classes.contentDiv}>\r\n        <Hidden smUp>\r\n          <AdminMobileSidenav />\r\n        </Hidden>\r\n\r\n        <Typography align='center' variant='h5' className={classes.mainHeader}>\r\n          Update about me details\r\n        </Typography>\r\n\r\n        <UploadDetailsEditor />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadAboutDetails\r\n","import styles from './styles'\r\nimport { Editor } from '@tinymce/tinymce-react'\r\nimport { useEffect, useState } from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { useHistory } from 'react-router'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport {\r\n  updateRules,\r\n  siteRules as getSiteRules,\r\n} from '../../redux/actions/admin'\r\nimport {\r\n  resetErrorMessage,\r\n  resetSuccessMessage,\r\n} from '../../redux/reducers/adminSlice'\r\nimport ShowError from '../../hooks/ShowError'\r\n\r\nconst UpdateSiteRulesEditor = () => {\r\n  const classes = styles()\r\n  const history = useHistory()\r\n  const [text, setText] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, siteRules, errorMessage, successMessage } = useSelector(\r\n    (state: RootState) => state.admin\r\n  )\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    dispatch(updateRules(text))\r\n  }\r\n\r\n  if (!loading && siteRules !== '' && successMessage === true) {\r\n    dispatch(resetSuccessMessage())\r\n    setText(siteRules)\r\n  }\r\n\r\n  const handleResetMessages = () => {\r\n    dispatch(resetSuccessMessage())\r\n    dispatch(resetErrorMessage())\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => handleResetMessages()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <div className={classes.container}>\r\n        <Editor\r\n          apiKey='2q2bdjlqnx7i6d0lbkldb695k5mgi3j1j7wfsx4y5prpnd4s'\r\n          value={text}\r\n          init={{\r\n            height: 500,\r\n            menubar: false,\r\n            plugins: [\r\n              'advlist autolink lists link image charmap print preview anchor',\r\n              'searchreplace visualblocks code fullscreen',\r\n              'insertdatetime media table paste code help wordcount',\r\n            ],\r\n            toolbar:\r\n              'undo redo | formatselect | bold italic backcolor | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | help',\r\n          }}\r\n          onEditorChange={(value) => setText(value)}\r\n          onInit={() => dispatch(getSiteRules())}\r\n        />\r\n\r\n        {errorMessage && ShowError(errorMessage)}\r\n\r\n        <Button\r\n          onClick={handleSubmit}\r\n          className={classes.button}\r\n          color='primary'\r\n          variant='contained'\r\n        >\r\n          {loading ? 'Loading...' : 'Submit'}\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => history.push('/admin/dashboard')}\r\n          className={classes.button}\r\n          color='secondary'\r\n          variant='outlined'\r\n        >\r\n          Back to dashboard\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateSiteRulesEditor\r\n","import styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport { Hidden, Typography } from '@material-ui/core'\r\nimport UpdateSiteRulesEditor from '../../components/rich-text-editors/UpdateSiteRulesEditor'\r\nimport AdminMobileSidenav from '../../components/admin-sidenav/AdminMobileSidenav'\r\n\r\nconst UploadSiteRultes = () => {\r\n  const classes = styles()\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      <div className={classes.contentDiv}>\r\n        <Hidden smUp>\r\n          <AdminMobileSidenav />\r\n        </Hidden>\r\n\r\n        <Typography align='center' variant='h5' className={classes.mainHeader}>\r\n          Update Site Rules details\r\n        </Typography>\r\n\r\n        <UpdateSiteRulesEditor />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadSiteRultes\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  container: {\r\n    width: '100%',\r\n    margin: '30px 0',\r\n  },\r\n\r\n  infoDiv: {\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n  },\r\n\r\n  text: {\r\n    fontSize: '16px',\r\n    fontWeight: 600,\r\n  },\r\n\r\n  spanTag: {\r\n    marginRight: '5px',\r\n    color: 'gray',\r\n  },\r\n\r\n  button: {\r\n    width: '95%',\r\n    maxWidth: '250px',\r\n    margin: '7px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { Typography, Tooltip } from '@material-ui/core'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport { Button } from '@material-ui/core'\r\nimport styles from '../styles'\r\nimport { Product } from '../../../redux/reducers/productSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../redux/store'\r\nimport { useState } from 'react'\r\nimport { addToWishlist } from '../../../redux/actions/product'\r\nimport _ from 'lodash'\r\nimport { setCart } from '../../../redux/reducers/cartSlice'\r\n\r\ninterface Props {\r\n  product: Product\r\n}\r\n\r\nconst ProductInfoSection = ({ product }: Props) => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { user } = useSelector((state: RootState) => state.auth)\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [wishlistStatus, setWishlistStatus] = useState(\r\n    user && product?.wishlist.includes(user._id)\r\n  )\r\n\r\n  const handleAddToWishlist = () => {\r\n    dispatch(addToWishlist(product._id))\r\n    setWishlistStatus(!wishlistStatus)\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n    setOpen(true)\r\n    let cart = []\r\n    let cartVariable = window.localStorage.getItem('cart')\r\n    if (cartVariable !== null) {\r\n      cart = JSON.parse(cartVariable)\r\n    }\r\n\r\n    cart.push({ ...product, count: 1 })\r\n    //remove duplicates\r\n    let uniqueItems = _.uniqWith(cart, _.isEqual)\r\n\r\n    window.localStorage.setItem('cart', JSON.stringify(uniqueItems))\r\n    dispatch(setCart(uniqueItems))\r\n  }\r\n\r\n  const handleLeave = () => {\r\n    setTimeout(() => setOpen(false), 1000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h4' align='center'>\r\n        {product?.name}\r\n      </Typography>\r\n      <hr></hr>\r\n      <div className={classes.infoDiv}>\r\n        <p className={classes.text}>\r\n          <span className={classes.spanTag}>Details:</span>\r\n          {product?.description}\r\n        </p>\r\n        <p className={classes.text}>\r\n          <span className={classes.spanTag}>Price:</span>\r\n          {product?.price} ₪\r\n        </p>\r\n        <p className={classes.text}>\r\n          <span className={classes.spanTag}>Status:</span>\r\n          {product?.quantity === 0 ? (\r\n            <span style={{ color: 'red' }}>No products left.</span>\r\n          ) : (\r\n            <span style={{ color: 'green' }}>In Stock</span>\r\n          )}\r\n        </p>\r\n        <p className={classes.text}>\r\n          <span className={classes.spanTag}>Category:</span>\r\n          {product?.category.name !== undefined && product.category.name}\r\n        </p>\r\n      </div>\r\n\r\n      <hr></hr>\r\n\r\n      <Tooltip\r\n        PopperProps={{\r\n          disablePortal: true,\r\n        }}\r\n        onMouseLeave={handleLeave}\r\n        open={open}\r\n        disableFocusListener\r\n        disableHoverListener\r\n        disableTouchListener\r\n        title={\r\n          <>\r\n            <p style={{ padding: '5px 10px', fontSize: '16px' }}>\r\n              Product Added to cart\r\n            </p>\r\n          </>\r\n        }\r\n        placement='top-start'\r\n      >\r\n        <Button\r\n          className={classes.button}\r\n          endIcon={<ShoppingCartIcon />}\r\n          variant='contained'\r\n          color='primary'\r\n          disabled={product?.quantity === 0}\r\n          onMouseLeave={handleLeave}\r\n          onClick={handleAddToCart}\r\n        >\r\n          Add to Cart\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      <Button\r\n        className={classes.button}\r\n        endIcon={<FavoriteBorderIcon />}\r\n        color='secondary'\r\n        variant={wishlistStatus ? 'contained' : 'outlined'}\r\n        onClick={handleAddToWishlist}\r\n        disabled={!user}\r\n      >\r\n        {wishlistStatus ? 'Remove from Wishlist' : 'Add to Wishlist'}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductInfoSection\r\n","import { Grid } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { product as getProduct } from '../../redux/actions/product'\r\nimport Loader from '../../components/loader'\r\nimport ProductInfoSection from './components/ProductInfoSection'\r\nimport ImageGallery from 'react-image-gallery'\r\nimport { Product } from '../../redux/reducers/productSlice'\r\nimport Seo from '../../hooks/Seo'\r\n\r\nconst SingelProduct = () => {\r\n  type Params = {\r\n    id: string\r\n  }\r\n\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { loading, product, productImages } = useSelector(\r\n    (state: RootState) => state.product\r\n  )\r\n  const params: Params = useParams()\r\n  const { id } = params\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(id))\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Seo title='Product page' name='Product' />\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Grid container>\r\n          <Grid item xs={12} md={6}>\r\n            {loading && <Loader />}\r\n            {!loading && productImages.length === 0 && (\r\n              <p>No images yet for this product.</p>\r\n            )}\r\n            {!loading && productImages.length > 0 && (\r\n              <div style={{ padding: '20px 10px' }}>\r\n                <ImageGallery\r\n                  showPlayButton={false}\r\n                  autoPlay={true}\r\n                  slideInterval={7000}\r\n                  slideDuration={500}\r\n                  showThumbnails={true}\r\n                  items={productImages}\r\n                  showBullets={true}\r\n                  showNav={true}\r\n                />\r\n              </div>\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <ProductInfoSection product={product as Product} />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingelProduct\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  mainContainer: {\r\n    margin: '30px 0',\r\n    width: '100%',\r\n  },\r\n\r\n  mainTitle: {\r\n    marginBottom: '30px',\r\n  },\r\n\r\n  subTitle: {\r\n    padding: '10px',\r\n  },\r\n\r\n  formContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: '10px 5px',\r\n    width: '100%',\r\n  },\r\n\r\n  formElement: {\r\n    margin: '10px',\r\n    width: '350px',\r\n    maxWidth: '95%',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n  },\r\n\r\n  numberElement: {\r\n    width: '165px',\r\n    margin: '10px',\r\n    maxWidth: '95%',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n  },\r\n\r\n  checkoutButton: {\r\n    margin: '25px auto',\r\n    maxWidth: '100%',\r\n    width: '350px',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n    backgroundColor: 'green',\r\n    fontSize: '16px',\r\n    color: 'white',\r\n    '&:hover': {\r\n      backgroundColor: 'forestGreen',\r\n    },\r\n  },\r\n\r\n  flexColumnDiv: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    padding: '10px 5px',\r\n    width: '100%',\r\n  },\r\n\r\n  messageDiv: {\r\n    margin: '5px auto',\r\n    width: '600px',\r\n    maxWidth: '95%',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { useState } from 'react'\r\nimport styles from '../styles'\r\nimport { TextField } from '@material-ui/core'\r\nimport HandleChange from '../../../hooks/HandleChange'\r\nimport { Typography, Button } from '@material-ui/core'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../../redux/store'\r\nimport { updateDetails } from '../../../redux/actions/auth'\r\nimport { clearSuccess } from '../../../redux/reducers/cartSlice'\r\n\r\nconst PersonalInfoForm = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { user } = useSelector((state: RootState) => state.auth)\r\n\r\n  const [values, setValues] = useState({\r\n    name: user?.userInfo?.name,\r\n    email: user?.userInfo?.email,\r\n    phone: user?.userInfo?.phone,\r\n    country: user?.userInfo?.country,\r\n    city: user?.userInfo?.city,\r\n    street: user?.userInfo?.street,\r\n    zipCode: user?.userInfo?.zipCode,\r\n    homeNumber: user?.userInfo?.homeNumber,\r\n    apartment: user?.userInfo?.apartment,\r\n  })\r\n\r\n  const {\r\n    name,\r\n    email,\r\n    phone,\r\n    country,\r\n    city,\r\n    street,\r\n    zipCode,\r\n    homeNumber,\r\n    apartment,\r\n  } = values\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(clearSuccess())\r\n    dispatch(\r\n      updateDetails({\r\n        name: name || '',\r\n        email: email || '',\r\n        phone: phone || '',\r\n        country: country || '',\r\n        city: city || '',\r\n        street: street || '',\r\n        zipCode: zipCode || '',\r\n        homeNumber: homeNumber || '',\r\n        apartment: apartment || '',\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <form className={classes.formContainer} onSubmit={handleSubmit}>\r\n      <Typography className={classes.subTitle} variant='h5' align='center'>\r\n        Personal details:\r\n      </Typography>\r\n      <TextField\r\n        className={classes.formElement}\r\n        label='Your Name'\r\n        name='name'\r\n        type='text'\r\n        required={true}\r\n        variant='outlined'\r\n        value={name}\r\n        onChange={(e) => HandleChange(e, values, setValues)}\r\n      />\r\n      <TextField\r\n        className={classes.formElement}\r\n        label='Email address'\r\n        name='email'\r\n        type='email'\r\n        required={true}\r\n        variant='outlined'\r\n        value={email}\r\n        onChange={(e) => HandleChange(e, values, setValues)}\r\n      />\r\n      <TextField\r\n        className={classes.formElement}\r\n        label='Phone number'\r\n        name='phone'\r\n        type='number'\r\n        required={true}\r\n        variant='outlined'\r\n        value={phone}\r\n        onChange={(e) => HandleChange(e, values, setValues)}\r\n      />\r\n\r\n      <Typography className={classes.subTitle} variant='h5' align='center'>\r\n        Delivery details:\r\n      </Typography>\r\n\r\n      <TextField\r\n        className={classes.formElement}\r\n        label='Country'\r\n        name='country'\r\n        type='text'\r\n        required={true}\r\n        variant='outlined'\r\n        value={country}\r\n        onChange={(e) => HandleChange(e, values, setValues)}\r\n      />\r\n      <TextField\r\n        className={classes.formElement}\r\n        label='City'\r\n        name='city'\r\n        type='text'\r\n        required={true}\r\n        variant='outlined'\r\n        value={city}\r\n        onChange={(e) => HandleChange(e, values, setValues)}\r\n      />\r\n      <TextField\r\n        className={classes.formElement}\r\n        label='Street'\r\n        name='street'\r\n        type='text'\r\n        required={true}\r\n        variant='outlined'\r\n        value={street}\r\n        onChange={(e) => HandleChange(e, values, setValues)}\r\n      />\r\n      <TextField\r\n        className={classes.formElement}\r\n        label='Zip Code'\r\n        name='zipCode'\r\n        type='number'\r\n        required={true}\r\n        variant='outlined'\r\n        value={zipCode}\r\n        onChange={(e) => HandleChange(e, values, setValues)}\r\n      />\r\n      <p style={{ textAlign: 'center', color: 'GrayText', marginTop: '0' }}>\r\n        In order to check your Zip Code click{' '}\r\n        {\r\n          <a\r\n            style={{ textDecoration: 'none', color: '#181818' }}\r\n            target='_blank'\r\n            rel='noreferrer'\r\n            href='https://israelpost.co.il/%D7%A9%D7%99%D7%A8%D7%95%D7%AA%D7%99%D7%9D/%D7%90%D7%99%D7%AA%D7%95%D7%A8-%D7%9E%D7%99%D7%A7%D7%95%D7%93/'\r\n          >\r\n            Here\r\n          </a>\r\n        }\r\n      </p>\r\n\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <TextField\r\n          className={classes.numberElement}\r\n          label='Home'\r\n          name='homeNumber'\r\n          type='number'\r\n          required={true}\r\n          variant='outlined'\r\n          value={homeNumber}\r\n          helperText='Please enter your home number'\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n        <TextField\r\n          className={classes.numberElement}\r\n          label='Apartment'\r\n          name='apartment'\r\n          type='number'\r\n          required={true}\r\n          variant='outlined'\r\n          value={apartment}\r\n          helperText='Please enter your apartment number'\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n      </div>\r\n\r\n      <Button\r\n        type='submit'\r\n        className={classes.checkoutButton}\r\n        variant='outlined'\r\n      >\r\n        Continue\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonalInfoForm\r\n","import styles from '../styles'\r\nimport { useSelector } from 'react-redux'\r\nimport { Grid, Paper, Typography } from '@material-ui/core'\r\nimport { RootState } from '../../../redux/store'\r\nimport Loader from '../../../components/loader'\r\n\r\nconst CompleteCartSummary = () => {\r\n  const classes = styles()\r\n\r\n  const { user, loading: authLoading } = useSelector(\r\n    (state: RootState) => state.auth\r\n  )\r\n  const { cartFromDb, loading } = useSelector((state: RootState) => state.cart)\r\n\r\n  return (\r\n    <>\r\n      {loading || authLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Paper\r\n          elevation={3}\r\n          style={{\r\n            width: '1280px',\r\n            maxWidth: '95%',\r\n            margin: '10px auto',\r\n            padding: '10px',\r\n          }}\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography\r\n                className={classes.subTitle}\r\n                align='center'\r\n                variant='h6'\r\n              >\r\n                User Details:\r\n              </Typography>\r\n\r\n              <p style={{ textAlign: 'center' }}>\r\n                Name: {user?.userInfo?.name}\r\n              </p>\r\n              <p style={{ textAlign: 'center' }}>\r\n                Email: {user?.userInfo?.email}\r\n              </p>\r\n              <p style={{ textAlign: 'center' }}>\r\n                Phone: {user?.userInfo?.phone}\r\n              </p>\r\n\r\n              <Typography\r\n                className={classes.subTitle}\r\n                align='center'\r\n                variant='h6'\r\n              >\r\n                Delivery Details:\r\n              </Typography>\r\n\r\n              <p style={{ textAlign: 'center' }}>\r\n                Country: {user?.userInfo?.country}\r\n              </p>\r\n              <p style={{ textAlign: 'center' }}>\r\n                city: {user?.userInfo?.city}\r\n              </p>\r\n              <p style={{ textAlign: 'center' }}>\r\n                zipCode: {user?.userInfo?.zipCode}\r\n              </p>\r\n              <p style={{ textAlign: 'center' }}>\r\n                street: {user?.userInfo?.street}\r\n              </p>\r\n              <p style={{ textAlign: 'center' }}>\r\n                Home number: {user?.userInfo?.homeNumber}\r\n              </p>\r\n              <p style={{ textAlign: 'center' }}>\r\n                Apartment number: {user?.userInfo?.apartment}\r\n              </p>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Typography\r\n                className={classes.subTitle}\r\n                align='center'\r\n                variant='h6'\r\n              >\r\n                Products:\r\n              </Typography>\r\n\r\n              {cartFromDb?.products.map((product, i) => (\r\n                <p style={{ textAlign: 'center' }} key={i}>\r\n                  {product.product.name} X {product.count}\r\n                </p>\r\n              ))}\r\n\r\n              <Typography\r\n                className={classes.subTitle}\r\n                align='center'\r\n                variant='h6'\r\n              >\r\n                Payment:\r\n              </Typography>\r\n\r\n              <p style={{ textAlign: 'center' }}>\r\n                Payment Method:{' '}\r\n                {cartFromDb?.paymentMethod === 'bank'\r\n                  ? 'Bank transfer'\r\n                  : cartFromDb?.paymentMethod === 'phone'\r\n                  ? 'Phone payment'\r\n                  : 'Paypal'}\r\n              </p>\r\n              <p style={{ textAlign: 'center' }}>\r\n                Payment fee:{' '}\r\n                {cartFromDb?.paymentMethod === 'paypal' ? '+ 5%' : 'No fee'}\r\n              </p>\r\n\r\n              <Typography\r\n                className={classes.subTitle}\r\n                align='center'\r\n                variant='h6'\r\n              >\r\n                Delivery:\r\n              </Typography>\r\n\r\n              <p style={{ textAlign: 'center' }}>\r\n                Delivery Option:{' '}\r\n                {cartFromDb?.deliveryOption === 'regular'\r\n                  ? 'Regular, registered with tracking number'\r\n                  : cartFromDb?.deliveryOption === 'boxit'\r\n                  ? 'Boxit'\r\n                  : cartFromDb?.deliveryOption === 'express'\r\n                  ? 'Express delivery'\r\n                  : 'Self pickup'}\r\n              </p>\r\n              <p style={{ textAlign: 'center' }}>\r\n                Delivery price:{' '}\r\n                {cartFromDb?.deliveryOption === 'regular'\r\n                  ? '16 ₪'\r\n                  : cartFromDb?.deliveryOption === 'boxit'\r\n                  ? '26 ₪'\r\n                  : cartFromDb?.deliveryOption === 'express'\r\n                  ? '59 ₪'\r\n                  : 'Free'}\r\n              </p>\r\n\r\n              <Typography\r\n                className={classes.subTitle}\r\n                align='center'\r\n                variant='h6'\r\n              >\r\n                Cart Total: {cartFromDb?.cartTotal} ₪\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CompleteCartSummary\r\n","import styles from '../styles'\r\nimport { Alert } from '@material-ui/lab'\r\nimport CompleteCartSummary from './CompleteCartSummary'\r\nimport { Typography, Button } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { successReset } from '../../../redux/reducers/authSlice'\r\nimport { create } from '../../../redux/actions/order'\r\nimport { RootState } from '../../../redux/store'\r\nimport { useHistory } from 'react-router'\r\nimport { resetCart } from '../../../redux/reducers/cartSlice'\r\n\r\nconst DetailsSaveSuccess = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const { createdOrderId, success } = useSelector(\r\n    (state: RootState) => state.order\r\n  )\r\n\r\n  const handleSuccessReset = () => {\r\n    dispatch(successReset())\r\n  }\r\n\r\n  const handleCreateOrder = () => {\r\n    dispatch(create())\r\n  }\r\n\r\n  if (createdOrderId && success) {\r\n    dispatch(resetCart())\r\n    localStorage.removeItem('cart')\r\n\r\n    history.push(`/order-success/${createdOrderId}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => handleSuccessReset()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.flexColumnDiv}>\r\n      <div className={classes.messageDiv}>\r\n        <Alert severity='success' style={{ fontSize: '16px' }}>\r\n          Your information is succefully saved, you can now create your order.\r\n        </Alert>\r\n      </div>\r\n\r\n      <div className={classes.messageDiv}>\r\n        <Alert severity='info'>\r\n          Please Note: <br></br> After you click on create order, your order\r\n          will be sent to the admin and you will not be able to change the\r\n          details anymore. Make sure eveything is correct and if needed you can\r\n          go back now and change it.\r\n        </Alert>\r\n      </div>\r\n\r\n      <Button\r\n        onClick={handleCreateOrder}\r\n        variant='contained'\r\n        className={classes.checkoutButton}\r\n      >\r\n        Finish and create order\r\n      </Button>\r\n      <Typography align='center' variant='h5' className={classes.subTitle}>\r\n        Your order preview\r\n      </Typography>\r\n      <CompleteCartSummary />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsSaveSuccess\r\n","import { Typography } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport { getCart } from '../../redux/actions/cart'\r\nimport { useParams } from 'react-router'\r\nimport PersonalInfoForm from './components/PersonalInfoForm'\r\nimport { RootState } from '../../redux/store'\r\nimport ShowError from '../../hooks/ShowError'\r\nimport Loader from '../../components/loader'\r\nimport DetailsSaveSuccess from './components/DetailsSaveSuccess'\r\nimport { clearSuccess } from '../../redux/reducers/cartSlice'\r\nimport Seo from '../../hooks/Seo'\r\n\r\ntype Params = {\r\n  id: string\r\n}\r\n\r\nconst Checkout = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const params: Params = useParams()\r\n  const { id } = params\r\n  const { errorMessage, successMessage, loading } = useSelector(\r\n    (state: RootState) => state.cart\r\n  )\r\n  const { loading: authLoading, successMessage: authSuccessMessage } =\r\n    useSelector((state: RootState) => state.auth)\r\n\r\n  useEffect(() => {\r\n    dispatch(getCart(id))\r\n  }, [])\r\n\r\n  if (successMessage && authSuccessMessage) {\r\n    dispatch(clearSuccess())\r\n  }\r\n\r\n  if (authSuccessMessage) {\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Seo title='Checkout page' name='Checkout' />\r\n\r\n      <Typography className={classes.mainTitle} align='center' variant='h4'>\r\n        Checkout Page\r\n      </Typography>\r\n\r\n      {errorMessage && ShowError(errorMessage)}\r\n\r\n      {(loading || authLoading) && <Loader />}\r\n\r\n      {successMessage === 'Cart loaded succefully from backend' && (\r\n        <PersonalInfoForm />\r\n      )}\r\n      {authSuccessMessage === 'details updated succefully' && (\r\n        <DetailsSaveSuccess />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checkout\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  mainContainer: {\r\n    margin: '30px auto',\r\n  },\r\n\r\n  mainHeader: {\r\n    color: 'green',\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n  },\r\n\r\n  infoAlert: {\r\n    width: '900px',\r\n    maxWidth: '95%',\r\n    margin: '10px auto',\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n  },\r\n\r\n  gridContainer: {\r\n    margin: '3rem auto',\r\n    padding: '10px',\r\n    maxWidth: '95%',\r\n  },\r\n\r\n  subTitle: {\r\n    padding: '10px',\r\n  },\r\n\r\n  spanStyle: {\r\n    padding: '10px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { Typography, Grid } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport styles from '../styles'\r\n\r\nconst Header = () => {\r\n  const classes = styles()\r\n  return (\r\n    <div>\r\n      <Typography className={classes.mainHeader} align='center' variant='h5'>\r\n        Your order has been created succefully\r\n      </Typography>\r\n\r\n      <Alert className={classes.infoAlert} severity='info'>\r\n        Order that is not paid within 24h will be cancelled by the admin.\r\n      </Alert>\r\n      <Alert className={classes.infoAlert} severity='info'>\r\n        Please note that you can see your order any time at your User Dashboard\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","const TechSupport = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '10px',\r\n      }}\r\n    >\r\n      <h4 style={{ textAlign: 'center' }}>\r\n        For any questions/customer support please contact us on whatsApp\r\n      </h4>\r\n      <div>\r\n        <div>\r\n          <i\r\n            style={{ color: 'green' }}\r\n            className='fab fa-whatsapp fa-3x mt-2 mx-1'\r\n          ></i>\r\n          <span\r\n            style={{\r\n              marginLeft: '10px',\r\n              fontSize: '1.3rem',\r\n              fontWeight: 700,\r\n            }}\r\n          >\r\n            054-665-9069\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TechSupport\r\n","import Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst PhonePayment = () => {\r\n  return (\r\n    <div style={{ margin: '15px 0' }}>\r\n      <Card style={{ maxWidth: '90%', margin: '0 auto' }}>\r\n        <CardContent style={{ textAlign: 'center' }}>\r\n          <h4>Payment details for Phone payment:</h4>\r\n          <p>ההזמנה התקבלה בהצלחה.</p>\r\n          <p>\r\n            <span>BIT\\PAYBOX</span> את התשלום ניתן לבצע דרך{' '}\r\n          </p>\r\n          <p>או דרך כרטיס אשראי בשיחה טלפונית</p>\r\n          <p>מספר לתשלום 054-665-9069</p>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhonePayment\r\n","import Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nconst BankTransfer = () => {\r\n  return (\r\n    <div style={{ margin: '15px 0' }}>\r\n      <Card style={{ maxWidth: '90%', margin: '0 auto' }}>\r\n        <CardContent style={{ textAlign: 'center' }}>\r\n          <p>ההזמנה התקבלה בהצלחה.</p>\r\n          <h4>Payment details for bank transfer:</h4>\r\n          <p>בנק מזרחי טפחות - 20</p>\r\n          <p>סניף ברק - 576</p>\r\n          <p>חשבון 261176</p>\r\n          <p>אולגה דונצ'נקו</p>\r\n\r\n          <hr></hr>\r\n\r\n          <p>\r\n            Send us a payment screenshot on whatsApp to this number{' '}\r\n            <span style={{ fontWeight: 700 }}>054-665-9069</span>, in order to\r\n            make sure we know the payment is done.\r\n          </p>\r\n\r\n          <p>\r\n            Once the admin recive your payment your order status will be changed\r\n            to paid.\r\n          </p>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BankTransfer\r\n","import { Grid } from '@material-ui/core'\r\nimport TechSupport from './TechSupport'\r\nimport styles from '../styles'\r\nimport { Order } from '../../../redux/reducers/orderSlice'\r\nimport PhonePayment from '../../../components/payment-methods/PhonePayment'\r\nimport BankTransfer from '../../../components/payment-methods/BankTransfer'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Loader from '../../../components/loader'\r\nimport { useParams } from 'react-router'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { paypalPayment } from '../../../redux/actions/order'\r\n\r\ninterface Props {\r\n  order: Order | undefined\r\n  sdk: boolean\r\n}\r\n\r\ntype PaymentResult = {\r\n  status: string\r\n}\r\n\r\ntype Params = {\r\n  id: string\r\n}\r\n\r\nconst OrderSuccessGrid = ({ order, sdk }: Props) => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const params: Params = useParams()\r\n  const { id } = params\r\n\r\n  const handleSuccess = (paymentResult: PaymentResult) => {\r\n    if (paymentResult.status === 'COMPLETED') {\r\n      dispatch(paypalPayment(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container className={classes.gridContainer}>\r\n      {!sdk || !order ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <Grid item xs={12} md={6}>\r\n            {order?.isPaid === true && (\r\n              <>\r\n                <p\r\n                  style={{\r\n                    color: 'green',\r\n                    padding: '15px',\r\n                    fontSize: '20px',\r\n                    fontWeight: 700,\r\n                  }}\r\n                >\r\n                  Thank you your order is paid succefully.\r\n                </p>\r\n              </>\r\n            )}\r\n\r\n            {order?.isPaid === false && order.paymentMethod === 'phone' && (\r\n              <PhonePayment />\r\n            )}\r\n            {order?.isPaid === false && order.paymentMethod === 'bank' && (\r\n              <BankTransfer />\r\n            )}\r\n            {order?.isPaid === false &&\r\n              order.paymentMethod === 'paypal' &&\r\n              sdk && (\r\n                <div\r\n                  style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: '300px',\r\n                      margin: '15px auto',\r\n                      maxWidth: '90%',\r\n                    }}\r\n                  >\r\n                    <PayPalButton\r\n                      amount={order.cartTotal}\r\n                      currency='ILS'\r\n                      onSuccess={handleSuccess}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TechSupport />\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default OrderSuccessGrid\r\n","import styles from '../styles'\r\nimport { Order as OrderProps } from '../../../redux/reducers/orderSlice'\r\nimport { Paper, Grid, Typography } from '@material-ui/core'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\n\r\ninterface Props {\r\n  order: OrderProps | undefined\r\n}\r\n\r\nconst Order = ({ order }: Props) => {\r\n  const classes = styles()\r\n  return (\r\n    <Paper\r\n      elevation={3}\r\n      style={{\r\n        width: '1280px',\r\n        maxWidth: '95%',\r\n        margin: '10px auto',\r\n        padding: '10px',\r\n      }}\r\n    >\r\n      <div>\r\n        <Typography className={classes.subTitle} align='center' variant='h6'>\r\n          Order Status: {order?.orderStatus}\r\n        </Typography>\r\n\r\n        <Typography\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n          className={classes.subTitle}\r\n          variant='h6'\r\n        >\r\n          Payment Status:{' '}\r\n          {order?.isPaid === true ? (\r\n            <CheckIcon\r\n              style={{ color: 'green', fontSize: '30px', marginLeft: '10px' }}\r\n            />\r\n          ) : (\r\n            <ClearIcon\r\n              style={{ color: 'red', fontSize: '30px', marginLeft: '10px' }}\r\n            />\r\n          )}\r\n        </Typography>\r\n\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <span style={{ flexGrow: 1 }} className={classes.spanStyle}>\r\n            Order tacking number: <br></br>\r\n            {order?.trackNumber\r\n              ? order?.trackNumber\r\n              : 'You will recive order number when the order will be sent'}\r\n          </span>\r\n          <span className={classes.spanStyle}>\r\n            Order url link: <br></br>\r\n            {order?.url ? (\r\n              <a target='_blank' rel='noreferrer' href={order.url}>\r\n                Link\r\n              </a>\r\n            ) : (\r\n              'No link yet'\r\n            )}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <hr></hr>\r\n\r\n      <Grid container>\r\n        <Grid item xs={12} md={6}>\r\n          <Typography className={classes.subTitle} align='center' variant='h6'>\r\n            User Details:\r\n          </Typography>\r\n\r\n          <p style={{ textAlign: 'center' }}>Name: {order?.userInfo?.name}</p>\r\n          <p style={{ textAlign: 'center' }}>Email: {order?.userInfo?.email}</p>\r\n          <p style={{ textAlign: 'center' }}>Phone: {order?.userInfo?.phone}</p>\r\n\r\n          <Typography className={classes.subTitle} align='center' variant='h6'>\r\n            Delivery Details:\r\n          </Typography>\r\n\r\n          <p style={{ textAlign: 'center' }}>\r\n            Country: {order?.userInfo?.country}\r\n          </p>\r\n          <p style={{ textAlign: 'center' }}>city: {order?.userInfo?.city}</p>\r\n          <p style={{ textAlign: 'center' }}>\r\n            zipCode: {order?.userInfo?.zipCode}\r\n          </p>\r\n          <p style={{ textAlign: 'center' }}>\r\n            street: {order?.userInfo?.street}\r\n          </p>\r\n          <p style={{ textAlign: 'center' }}>\r\n            Home number: {order?.userInfo?.homeNumber}\r\n          </p>\r\n          <p style={{ textAlign: 'center' }}>\r\n            Apartment number: {order?.userInfo?.apartment}\r\n          </p>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Typography className={classes.subTitle} align='center' variant='h6'>\r\n            Products:\r\n          </Typography>\r\n\r\n          {order?.products.map((product, i) => (\r\n            <p style={{ textAlign: 'center' }} key={i}>\r\n              {product.product.name} X {product.count}\r\n            </p>\r\n          ))}\r\n\r\n          <Typography className={classes.subTitle} align='center' variant='h6'>\r\n            Payment:\r\n          </Typography>\r\n\r\n          <p style={{ textAlign: 'center' }}>\r\n            Payment Method:{' '}\r\n            {order?.paymentMethod === 'bank'\r\n              ? 'Bank transfer'\r\n              : order?.paymentMethod === 'phone'\r\n              ? 'Phone payment'\r\n              : 'Paypal'}\r\n          </p>\r\n          <p style={{ textAlign: 'center' }}>\r\n            Payment fee: {order?.paymentMethod === 'paypal' ? '+ 5%' : 'No fee'}\r\n          </p>\r\n\r\n          <Typography className={classes.subTitle} align='center' variant='h6'>\r\n            Delivery:\r\n          </Typography>\r\n\r\n          <p style={{ textAlign: 'center' }}>\r\n            Delivery Option:{' '}\r\n            {order?.deliveryOption === 'regular'\r\n              ? 'Regular, registered with tracking number'\r\n              : order?.deliveryOption === 'boxit'\r\n              ? 'Boxit'\r\n              : order?.deliveryOption === 'express'\r\n              ? 'Express delivery'\r\n              : 'Self pickup'}\r\n          </p>\r\n          <p style={{ textAlign: 'center' }}>\r\n            Delivery price:{' '}\r\n            {order?.deliveryOption === 'regular'\r\n              ? '16 ₪'\r\n              : order?.deliveryOption === 'boxit'\r\n              ? '26 ₪'\r\n              : order?.deliveryOption === 'express'\r\n              ? '59 ₪'\r\n              : 'Free'}\r\n          </p>\r\n\r\n          <Typography className={classes.subTitle} align='center' variant='h6'>\r\n            Total: {order?.cartTotal} ₪\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Order\r\n","import styles from './styles'\r\nimport { useParams } from 'react-router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\nimport { clearState } from '../../redux/reducers/orderSlice'\r\nimport Header from './components/Header'\r\nimport OrderSuccessGrid from './components/OrderSuccessGrid'\r\nimport { order as getOrder } from '../../redux/actions/order'\r\nimport { RootState } from '../../redux/store'\r\nimport Order from './components/Order'\r\nimport Seo from '../../hooks/Seo'\r\nimport { getPaypalClientId } from '../../redux/api/auth'\r\n\r\nconst OrderSuccess = () => {\r\n  type Params = {\r\n    id: string\r\n  }\r\n\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const params: Params = useParams()\r\n  const { id } = params\r\n\r\n  const [sdk, setSdk] = useState(false)\r\n\r\n  const { order } = useSelector((state: RootState) => state.order)\r\n\r\n  const handleClear = () => {\r\n    dispatch(clearState())\r\n  }\r\n\r\n  const handleLoadeOrder = () => {\r\n    dispatch(getOrder(id))\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleLoadeOrder()\r\n    return () => handleClear()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    addPaypalScript()\r\n  }, [])\r\n\r\n  const addPaypalScript = async () => {\r\n    try {\r\n      const { data: clientId } = await getPaypalClientId()\r\n\r\n      const script = document.createElement('script')\r\n\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=ILS`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdk(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Seo title='Order success' name='order-success' />\r\n\r\n      <Header />\r\n      <OrderSuccessGrid order={order} sdk={sdk} />\r\n\r\n      <Order order={order} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderSuccess\r\n","import styles from './styles'\r\nimport UserSidenav from '../../components/user-sidenav/UserSidenav'\r\nimport { Hidden } from '@material-ui/core'\r\nimport { Typography } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport { useParams } from 'react-router'\r\nimport Order from '../order-success/components/Order'\r\nimport { useEffect, useState } from 'react'\r\nimport { order as getOrder } from '../../redux/actions/order'\r\nimport Loader from '../../components/loader'\r\nimport OrderSuccessGrid from '../order-success/components/OrderSuccessGrid'\r\n\r\ntype Params = {\r\n  id: string\r\n}\r\n\r\nconst UserOrder = () => {\r\n  const classes = styles()\r\n  const params: Params = useParams()\r\n  const { id } = params\r\n  const dispatch = useDispatch()\r\n  const [sdk, setSdk] = useState(false)\r\n\r\n  const { order, loading } = useSelector((state: RootState) => state.order)\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrder(id))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    addPaypalScript()\r\n  }, [])\r\n\r\n  const addPaypalScript = async () => {\r\n    try {\r\n      // const { data: clientId } = await getPaypalClientId(user.token)\r\n      const script = document.createElement('script')\r\n\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=AVZshg85dcH_q42PUKuBwCNMVlrZ695CFMluaolGq5OLhnj1VbZauhIvJGpOkZJu7nqpeMgyjhn15puV&currency=ILS`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdk(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <UserSidenav />\r\n      </Hidden>\r\n\r\n      <div className={classes.contentDiv}>\r\n        <Typography className={classes.mainHeader} variant='h5' align='center'>\r\n          Your Order\r\n        </Typography>\r\n\r\n        <OrderSuccessGrid order={order} sdk={sdk} />\r\n        {loading ? <Loader /> : <Order order={order} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserOrder\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  flexDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n  },\r\n\r\n  formDiv: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    padding: '10px',\r\n  },\r\n\r\n  formElement: {\r\n    margin: '15px',\r\n    width: '300px',\r\n    maxWidth: '95%',\r\n    display: 'flex',\r\n    alignSelf: 'center',\r\n    fontSize: '16px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import styles from './styles'\r\nimport {\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core'\r\nimport HandleChange from '../../hooks/HandleChange'\r\nimport { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateOrder } from '../../redux/actions/order'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport { RootState } from '../../redux/store'\r\nimport { clearOrder } from '../../redux/reducers/orderSlice'\r\n\r\ntype Params = {\r\n  id: string\r\n}\r\n\r\ninterface Ivalues {\r\n  isPaid: boolean\r\n  stringedIsPaid: string\r\n  orderStatus: string\r\n  trackNumber: string\r\n  url: string\r\n}\r\n\r\nconst UpdateOrderSection = () => {\r\n  const { order } = useSelector((state: RootState) => state.order)\r\n\r\n  const dispatch = useDispatch()\r\n  const params: Params = useParams()\r\n  const { id } = params\r\n  const classes = styles()\r\n  const [values, setValues] = useState<Ivalues>({\r\n    isPaid: order?.isPaid as boolean,\r\n    stringedIsPaid: (order?.isPaid as boolean) === true ? 'yes' : 'no',\r\n    orderStatus: order?.orderStatus as string,\r\n    trackNumber: order?.trackNumber as string,\r\n    url: order?.url as string,\r\n  })\r\n\r\n  const { isPaid, orderStatus, trackNumber, url, stringedIsPaid } = values\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLDivElement>) => {\r\n    e.preventDefault()\r\n    dispatch(updateOrder({ id, ...values }))\r\n  }\r\n\r\n  const changeIsPaid = (value: string) => {\r\n    if (value === 'yes') {\r\n      setValues({ ...values, isPaid: true, stringedIsPaid: 'yes' })\r\n    }\r\n    if (value === 'no') {\r\n      setValues({ ...values, isPaid: false, stringedIsPaid: 'no' })\r\n    }\r\n  }\r\n\r\n  const handleClear = () => {\r\n    dispatch(clearOrder())\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => handleClear()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.flexDiv} onSubmit={handleSubmit}>\r\n      <form className={classes.formDiv}>\r\n        <FormControl required className={classes.formElement}>\r\n          <InputLabel id='paid'>Order is Paid</InputLabel>\r\n          <Select\r\n            value={stringedIsPaid}\r\n            required={true}\r\n            name='paid'\r\n            labelId='paid'\r\n          >\r\n            <MenuItem value='yes' onClick={(e) => changeIsPaid('yes')}>\r\n              Yes\r\n            </MenuItem>\r\n            <MenuItem value='no' onClick={(e) => changeIsPaid('no')}>\r\n              No\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl required className={classes.formElement}>\r\n          <InputLabel id='status'>Order Status</InputLabel>\r\n          <Select\r\n            onChange={(e) =>\r\n              setValues({ ...values, orderStatus: e.target.value as string })\r\n            }\r\n            value={orderStatus}\r\n            required={true}\r\n            name='status'\r\n            labelId='status'\r\n          >\r\n            <MenuItem value='Not proccessed'>Not Proccessed</MenuItem>\r\n            <MenuItem value='Order Sent'>Order Sent</MenuItem>\r\n            <MenuItem value='Cancelled'>Cancelled</MenuItem>\r\n            <MenuItem value='Delivered'>Delivered</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          className={classes.formElement}\r\n          label='Tracking number'\r\n          name='trackNumber'\r\n          type='text'\r\n          value={trackNumber}\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n\r\n        <TextField\r\n          className={classes.formElement}\r\n          label='Tracking URL'\r\n          name='url'\r\n          type='text'\r\n          value={url}\r\n          onChange={(e) => HandleChange(e, values, setValues)}\r\n        />\r\n\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          className={classes.formElement}\r\n          type='submit'\r\n        >\r\n          Update Order\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateOrderSection\r\n","import { Hidden, Typography } from '@material-ui/core'\r\nimport styles from './styles'\r\nimport AdminSidenav from '../../components/admin-sidenav/AdminSidenav'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\nimport Loader from '../../components/loader'\r\nimport Order from '../order-success/components/Order'\r\nimport { order as getOrder } from '../../redux/actions/order'\r\nimport { useParams } from 'react-router'\r\nimport UpdateOrderSection from '../../components/update-order/UpdateOrderSection'\r\n\r\ntype Params = {\r\n  id: string\r\n}\r\n\r\nconst AdminOrder = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { order, loading } = useSelector((state: RootState) => state.order)\r\n  const params: Params = useParams()\r\n  const { id } = params\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrder(id))\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Hidden xsDown>\r\n        <AdminSidenav />\r\n      </Hidden>\r\n\r\n      {/* content div */}\r\n      <div className={classes.contentDiv}>\r\n        {loading && <Loader />}\r\n        {order && (\r\n          <>\r\n            <Typography\r\n              align='center'\r\n              variant='h5'\r\n              className={classes.mainHeader}\r\n            >\r\n              Order Status\r\n            </Typography>\r\n\r\n            <UpdateOrderSection />\r\n            <Order order={order} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminOrder\r\n","import { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [pathname])\r\n\r\n  return null\r\n}\r\n","import { Paper } from '@material-ui/core'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport styles from '../register/styles'\r\nimport { useHistory } from 'react-router'\r\nimport { useEffect, useState } from 'react'\r\nimport { forgotPassowrd } from '../../redux/actions/auth'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport HandleChange from '../../hooks/HandleChange'\r\nimport { RootState } from '../../redux/store'\r\nimport ShowSuccess from '../../hooks/ShowSuccess'\r\nimport ShowError from '../../hooks/ShowError'\r\nimport { resetError, successReset } from '../../redux/reducers/authSlice'\r\nimport Seo from '../../hooks/Seo'\r\n\r\nconst ForgotPassword = () => {\r\n  const classes = styles()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { auth } = useSelector((state: RootState) => state)\r\n  const { loading, successMessage, errorMessage, user } = auth\r\n\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n  })\r\n\r\n  const { email } = values\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(forgotPassowrd(email))\r\n  }\r\n\r\n  if (email !== '' && successMessage) {\r\n    setValues({ email: '' })\r\n  }\r\n\r\n  if (user) {\r\n    history.push('/dashboard')\r\n  }\r\n\r\n  const resetState = () => {\r\n    dispatch(resetError())\r\n    dispatch(successReset())\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => resetState()\r\n  }, [])\r\n\r\n  return (\r\n    <Paper className={classes.mainContainer}>\r\n      <Seo title='Forgot Password' name='forgot-password' />\r\n\r\n      <h1 className={classes.title}>Forgot password?</h1>\r\n      <p className={classes.text}>\r\n        In order to reset your password type your email and we will send you\r\n        password reset link.\r\n      </p>\r\n\r\n      <form className={classes.formContainer} onSubmit={handleSubmit}>\r\n        <TextField\r\n          className={classes.formElement}\r\n          label='Email'\r\n          name='email'\r\n          type='email'\r\n          required={true}\r\n          value={email}\r\n          onChange={(e) => {\r\n            return HandleChange(e, values, setValues), dispatch(successReset())\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          className={classes.formElement}\r\n          variant='contained'\r\n          color='primary'\r\n          type='submit'\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Loading...' : 'Submit'}\r\n        </Button>\r\n      </form>\r\n\r\n      {successMessage && ShowSuccess(successMessage)}\r\n      {errorMessage && ShowError(errorMessage)}\r\n\r\n      <div className={classes.footerDiv}>\r\n        <p className={classes.text}>\r\n          Back to login click\r\n          <span\r\n            onClick={() => history.push('/login')}\r\n            className={classes.linkSpan}\r\n          >\r\n            here\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import { Paper } from '@material-ui/core'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport styles from '../register/styles'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport HandleChange from '../../hooks/HandleChange'\r\nimport { RootState } from '../../redux/store'\r\nimport ShowSuccess from '../../hooks/ShowSuccess'\r\nimport ShowError from '../../hooks/ShowError'\r\nimport { resetError, successReset } from '../../redux/reducers/authSlice'\r\nimport { passwordAction, passwordValidation } from '../../redux/actions/auth'\r\nimport Loader from '../../components/loader'\r\nimport Seo from '../../hooks/Seo'\r\n\r\ntype Params = {\r\n  id: string\r\n}\r\n\r\nconst ResetPassword = () => {\r\n  const classes = styles()\r\n  const history = useHistory()\r\n  const params: Params = useParams()\r\n  const dispatch = useDispatch()\r\n  const { auth } = useSelector((state: RootState) => state)\r\n  const {\r\n    loading,\r\n    user,\r\n    passwordValidatorError,\r\n    resetPasswordError,\r\n    resetPasswordSuccess,\r\n  } = auth\r\n  const { id } = params\r\n\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirmPassword: '',\r\n  })\r\n\r\n  const { password, confirmPassword } = values\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(passwordAction({ ...values, resetPasswordToken: id }))\r\n  }\r\n\r\n  if (password !== '' && resetPasswordSuccess) {\r\n    setValues({ password: '', confirmPassword: '' })\r\n  }\r\n\r\n  if (user) {\r\n    history.push('/dashboard')\r\n  }\r\n\r\n  const resetState = () => {\r\n    dispatch(resetError())\r\n    dispatch(successReset())\r\n  }\r\n\r\n  const resetPasswordValidator = () => {\r\n    dispatch(passwordValidation(id))\r\n  }\r\n\r\n  useEffect(() => {\r\n    resetPasswordValidator()\r\n    return () => resetState()\r\n  }, [])\r\n\r\n  return (\r\n    <Paper className={classes.mainContainer}>\r\n      <Seo title='Reset password' name='reset-password' />\r\n\r\n      {loading && <Loader />}\r\n      {!loading && passwordValidatorError ? (\r\n        <p style={{ color: 'red', padding: '10px' }}>\r\n          {passwordValidatorError}\r\n        </p>\r\n      ) : (\r\n        <>\r\n          <h1 className={classes.title}>Reset Password</h1>\r\n          <p className={classes.text}>Choose your new password</p>\r\n\r\n          <form className={classes.formContainer} onSubmit={handleSubmit}>\r\n            <TextField\r\n              className={classes.formElement}\r\n              label='New Password'\r\n              name='password'\r\n              type='password'\r\n              required={true}\r\n              value={password}\r\n              onChange={(e) => {\r\n                return (\r\n                  HandleChange(e, values, setValues), dispatch(successReset())\r\n                )\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              className={classes.formElement}\r\n              label='Confirm your password'\r\n              name='confirmPassword'\r\n              type='password'\r\n              required={true}\r\n              value={confirmPassword}\r\n              onChange={(e) => {\r\n                return (\r\n                  HandleChange(e, values, setValues), dispatch(successReset())\r\n                )\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              className={classes.formElement}\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'\r\n              disabled={loading}\r\n            >\r\n              {'Change Passowrd'}\r\n            </Button>\r\n          </form>\r\n\r\n          {resetPasswordSuccess && ShowSuccess(resetPasswordSuccess)}\r\n          {resetPasswordError && ShowError(resetPasswordError)}\r\n        </>\r\n      )}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n","import { CssBaseline } from '@material-ui/core'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Home from './pages/home/Home'\r\nimport styles from './styles/appStyles'\r\nimport NavBar from './components/app-bar/NavBar'\r\nimport Login from './pages/login/Login'\r\nimport Register from './pages/register/Register'\r\nimport Shop from './pages/shop/Shop'\r\nimport Footer from './components/footer/Footer'\r\nimport Cart from './pages/cart/Cart'\r\nimport Dashboard from './pages/admin/Dashboard'\r\nimport PrivateRoute from './routes/PrivateRoute'\r\nimport UserDashboard from './pages/user/UserDashboard'\r\nimport Orders from './pages/admin/Orders'\r\nimport Users from './pages/admin/Users'\r\nimport Categories from './pages/admin/Categories'\r\nimport Products from './pages/admin/Products'\r\nimport CreateProduct from './pages/admin/CreateProduct'\r\nimport AdminRoute from './routes/AdminRoute'\r\nimport UploadProductImages from './pages/admin/UploadProductImages'\r\nimport UpdateProduct from './pages/admin/UpdateProduct'\r\nimport UploadAboutDetails from './pages/admin/UploadAboutDetails'\r\nimport UploadSiteRultes from './pages/admin/UploadSiteRules'\r\nimport SingelProduct from './pages/single product/SingelProduct'\r\nimport Checkout from './pages/checkout/Checkout'\r\nimport OrderSuccess from './pages/order-success/OrderSuccess'\r\nimport UserOrder from './pages/user/UserOrder'\r\nimport AdminOrder from './pages/admin/AdminOrder'\r\nimport ScrollToTop from './hooks/ScrollToTop'\r\nimport ForgotPassword from './pages/forgot-password/ForgotPassword'\r\nimport ResetPassword from './pages/forgot-password/ResetPassword'\r\n\r\nconst App: React.FC = () => {\r\n  const classes = styles()\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Router>\r\n        <main className={classes.mainContainer}>\r\n          <NavBar />\r\n          <ScrollToTop />\r\n\r\n          <Switch>\r\n            <div className={classes.container}>\r\n              <Route path='/' exact component={Home} />\r\n              <Route path='/shop' exact component={Shop} />\r\n              <Route path='/cart' exact component={Cart} />\r\n              <Route path='/login' exact component={Login} />\r\n              <Route path='/register' exact component={Register} />\r\n              <Route path='/forgot-password' exact component={ForgotPassword} />\r\n              <Route path='/product/:id' exact component={SingelProduct} />\r\n              <Route\r\n                path='/password-reset/:id'\r\n                exact\r\n                component={ResetPassword}\r\n              />\r\n\r\n              {/* admin pages */}\r\n              <AdminRoute path='/admin/dashboard' exact component={Dashboard} />\r\n              <AdminRoute path='/admin/orders' exact component={Orders} />\r\n              <AdminRoute path='/admin/users' exact component={Users} />\r\n              <AdminRoute\r\n                path='/admin/categories'\r\n                exact\r\n                component={Categories}\r\n              />\r\n              <AdminRoute path='/admin/products' exact component={Products} />\r\n              <AdminRoute\r\n                path='/admin/create-product'\r\n                exact\r\n                component={CreateProduct}\r\n              />\r\n              <AdminRoute\r\n                path='/admin/upload-product-images/:id'\r\n                exact\r\n                component={UploadProductImages}\r\n              />\r\n              <AdminRoute\r\n                path='/admin/update-product/:id'\r\n                exact\r\n                component={UpdateProduct}\r\n              />\r\n              <AdminRoute\r\n                path='/admin/upload-about-me-details'\r\n                exact\r\n                component={UploadAboutDetails}\r\n              />\r\n              <AdminRoute\r\n                path='/admin/upload-site-rules'\r\n                exact\r\n                component={UploadSiteRultes}\r\n              />\r\n              <AdminRoute\r\n                path='/admin/order/:id'\r\n                exact\r\n                component={AdminOrder}\r\n              />\r\n\r\n              {/* user pages */}\r\n              <PrivateRoute\r\n                path='/user/dashboard'\r\n                exact\r\n                component={UserDashboard}\r\n              />\r\n              <PrivateRoute path='/checkout/:id' exact component={Checkout} />\r\n              <PrivateRoute\r\n                path='/order-success/:id'\r\n                exact\r\n                component={OrderSuccess}\r\n              />\r\n              <PrivateRoute\r\n                path='/user/order/:id'\r\n                exact\r\n                component={UserOrder}\r\n              />\r\n            </div>\r\n          </Switch>\r\n\r\n          <Footer />\r\n        </main>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport adminSlice from './reducers/adminSlice'\nimport authSlice from './reducers/authSlice'\nimport cartSlice from './reducers/cartSlice'\nimport categoriesSlice from './reducers/categoriesSlice'\nimport messageSlice from './reducers/messageSlice'\nimport modalSlice from './reducers/modalSlice'\nimport orderSlice from './reducers/orderSlice'\nimport productSlice from './reducers/productSlice'\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    category: categoriesSlice,\n    product: productSlice,\n    cart: cartSlice,\n    admin: adminSlice,\n    message: messageSlice,\n    modal: modalSlice,\n    order: orderSlice,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import { createMuiTheme } from '@material-ui/core'\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#181818',\r\n      contrastText: 'white',\r\n    },\r\n    secondary: {\r\n      main: '#FF69B4',\r\n      contrastText: 'white',\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from '@material-ui/core'\nimport theme from './styles/theme'\nimport './styles/globalStyles.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}